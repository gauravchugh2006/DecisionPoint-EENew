@model DecisionPoint.Models.UserDashBoard
@using DecisionPoint.Models.DashBoardViewModel.ViewModel;
@using DecisionPointCAL;
@using DecisionPointCAL.Common;
@using DecisionPointBAL.Implementation.Response;
@using System.Globalization
@{
    ViewBag.Title = "ICProfile";
    Layout = "~/Views/Shared/_CoverageAreaPartial.cshtml";
    var imagePath = @Model.File;
    string reqCompanyId = string.Empty;
    int SterlingPkgId = 0;
    bool isEditView = false;
    bool isUpgrade = false;
}
@functions {
    /// <summary>
    /// Used for make the list of states for fill in drop down list
    /// </summary>
    /// <returns>IEnumerable<SelectListItem></returns>
    private IEnumerable<SelectListItem> FillStateList()
    {
        return new SelectList(Model.StateList, "Abbrebiation", "SateName");
    }
    /// <summary>
    /// Used for make the list of states for fill in drop down list
    /// </summary>
    /// <returns>IEnumerable<SelectListItem></returns>
    private IEnumerable<SelectListItem> FillStateListAsPerIdVal()
    {
        return new SelectList(Model.StateList, "StateId", "SateName");
    }
    /// <summary>
    /// Used for get the spend time of user in particular company
    /// </summary>
    /// <returns>string</returns>
    private string GetSpendTime(DateTime dateval)
    {
        return ViewModel.GetSpendTime(dateval);
    }
}


<link href="~/Content/css/Dashboard/common.css" rel="stylesheet" />
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
<link href="~/Content/css/Dashboard/jquery.fileupload-ui-noscript.css" rel="stylesheet" />
<link href="~/Content/css/Dashboard/jquery.fileupload-ui.css" rel="stylesheet" />
<script src="~/Scripts/Upload/jquery-1.8.3.js"></script>
<script src="~/Scripts/Upload/jquery-ui-1.9.2.js"></script>
<script src="~/Scripts/Upload/jquery.iframe-transport.js"></script>
<script src="~/Scripts/Upload/jquery.fileupload.js"></script>
<script src="~/Scripts/Upload/jquery.fileupload-ui.js"></script>
<link href="~/Content/css/Dashboard/circle.css" rel="stylesheet" />
<script src="~/Scripts/Upload/progress-circle.js"></script>
<script src="~/Scripts/jquery.cookie.js"></script>
<script src="~/Scripts/jquery.maskedinput.js"></script>
<script src="~/Scripts/DashBoard/SterlingMapping.js"></script>

<style>
    .grid-width3009 {
        width: 425px !important;
    }

    .grid-width300 {
        width: 319px;
    }

    .grid-width100 {
        width: 178px;
    }

    .grid-width3002 {
        width: 283px;
    }

    .grid-width229 {
        width: 200px;
    }

    .grid-width150 {
        width: 200px;
    }

    #ui-datepicker-div {
        z-index: 35 !important;
    }
</style>

<div class="w100">
    <div class="control-group " style="float: right; margin-top: -30px;">
        <div class="halfrest">
            @if (!string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], System.Globalization.CultureInfo.InvariantCulture)))
            {
                <div class="control-group w100">
                    @{
                string parentForm = string.Empty;
                if (!string.IsNullOrEmpty(Convert.ToString(Session["parentform"], CultureInfo.InvariantCulture)))
                {
                    parentForm = Convert.ToString(Session["parentform"], CultureInfo.InvariantCulture).Split(':')[0];
                }
                    }
                    @if (Convert.ToString(Session["IsSuperAdmin"]) != string.Empty)
                    {
                        if (Convert.ToString(Session["IsSuperAdmin"]) == "Yes".Trim() && string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], CultureInfo.InvariantCulture)))
                        {
                                               
                        <div style="margin-left: -2px; font-style: italic; text-decoration: underline; width: 150px;">@Html.ActionLink("Return to my view", "GetCompanies", "CompanyDashBoard", new { id = "1", search = string.Empty, type = 1 }, null)     </div>
                                                  
                        }
                        else
                        {
                        <div style="margin-left: -2px; font-style: italic; text-decoration: underline; width: 150px;">@Html.ActionLink("Return to my view", "Returntomyview", "CompanyDashBoard", new { id = parentForm }, null)</div>
                        }
                    }
                    else
                    {
                        <div style="margin-left: -2px; font-style: italic; text-decoration: underline; width: 150px;">@Html.ActionLink("Return to my view", "Returntomyview", "CompanyDashBoard", new { id = parentForm }, null)</div>
                    }
                </div>
            }

        </div>
    </div>
</div>

<div id="content">

    <div class="container">
        <br>
        <div id="" class="ic-profile">
            <div class="row">
                @*  @Html.ActionLink("Show", "MockUpPage")*@
                <div class="span4">
                    <p>

                        <img alt="Headshot" class="headshot" src="@imagePath" id="personpic">
                    </p>
                    @if (!Convert.ToString(Session["UserType"], CultureInfo.InvariantCulture).Equals(Shared.NonClient))
                    {
                  
                        <div class="alert alert-block fixed-alertbox">
                            <button class="close" data-dismiss="alert" type="button">×</button>
                            <h4>Outstanding Actions</h4>
                            <br>
                            <ul>



                                @if (Model.IsServicesApply)
                                {
                                    if (!Model.ServicesStatus.Equals(2))
                                    {
                                        if (Model.ServiceCount.Equals(0))
                                        {
                                    <li>Please complete the <b><a href="~/CompanyDashBoard/ViewService?type=ICD" target="_blank" style="color: #c09853;" target="_blank">services</a></b></li>
                                        }
                                    }
                                }
                                @if (Model.IsCoverageAreaApply)
                                {
                                    if (Model.CoverageAreaCount.Equals(0))
                                    {
                                    <li>Please complete the <b><a href="~/Company/CoverageArea?type=0" target="_blank" style="color: #c09853;" target="_blank">coverage area</a></b></li>
                                    }
                                }

                            </ul>
                        </div>
                        <br>
                    }
                </div>
                <div class="span7">
                    <h2>
                        <span class="emal-txt-break" style="width: 400px;">@Model.FName @Model.LName</span>
                        @if (!Convert.ToString(Session["UserType"], CultureInfo.InvariantCulture).Equals(Shared.NonClient))
                        {
                            <div style="overflow-y: auto; max-height: 100PX;">
                                @foreach (var item in Model.CompanyVendorTypeDetails.Select(x => x.VendorTypeName).Distinct())
                                {
                                    <span class="label label-info" style="margin-top: -2px;">@item
                                    </span>}
                            </div>
                        }

                        @if (string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], System.Globalization.CultureInfo.InvariantCulture)))
                        {
                            <div class="pull-right" style="margin-top: -30px;">
                                <a class="btn btn-default" id="btneditprofile">Edit Profile</a>
                                @if (!Convert.ToString(Session["UserType"], CultureInfo.InvariantCulture).Equals(Shared.NonClient))
                                {
                                    <a role="button" style="display: none;" data-toggle="modal" id="editaccesslnk" class="btn btn-info">Edit Access</a>
                                }
                            </div>
                        }

                    </h2>
                    <hr>
                    <div class="row">
                        <div class="span3">
                            <div class="basic-info box" style="height: 258px;">
                                <h3>Basic Information</h3>
                                @if (!Convert.ToString(Session["UserType"], CultureInfo.InvariantCulture).Equals(Shared.NonClient))
                                {
                                    <table class="table">
                                        <tbody>


                                            <tr>
                                                <th>Member Since</th>
                                                <td>

                                                    @if (!object.Equals(Model.RegisteredDate, null))
                                                    {
                                                        <span>@Model.RegisteredDate.Value.ToShortDateString()</span>
                                                    }

                                                </td>
                                            </tr>

                                            @* <tr>
                                                <th>Since</th>
                                                <td>
                                                       @{int liccount = 0;}
                                                @if (!object.Equals(Model.LicAndInsAsDetails, null))
                                                {
                                                    foreach (var item in Model.LicAndInsAsDetails.Where(x => x.ReqType == 0 && x.IsCompleted == 1))
                                                    {
                                                    <span>@if (liccount != 0)
                                                          {
                                                        <span>,</span>
                                                          }
                                                        @GetSpendTime(item.LicCreatedDate)</span> 
                                                          liccount++;
                                                    }
                                                }

                                                </td>
                                            </tr>*@
                                            <tr>
                                                <td colspan="2">
                                                    <a class="btn btn-primary" data-toggle="modal" id="btnbioinfo" role="button" style="width: 62%;">
                                                        <i class="icon-white icon-search" style="margin-left: -31px;"></i>
                                                        <span style="margin-left: 5px;">More Bio Information</span>
                                                    </a>
                                                </td>

                                            </tr>
                                            @if (!Convert.ToString(Session["UserType"], CultureInfo.InvariantCulture).Equals(Shared.NonClient))
                                            {
                                                <tr>
                                                    <td colspan="2">
                                                        @if (Model.IsServicesApply)
                                                        {
                                                            // if (string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], System.Globalization.CultureInfo.InvariantCulture)))
                                                            //  {
                                                            if (!Model.ServicesStatus.Equals(2))
                                                            {
                                                                if (Model.ServiceCount.Equals(0))
                                                                {
                                                            <a id="blinkservices" class="btn btn-primary" href="~/CompanyDashBoard/ViewService?type=ICD" target="_blank">Services
                                                            </a>
                                                                }
                                                                else
                                                                {
                                                            <a class="btn btn-primary" href="~/CompanyDashBoard/ViewService?type=ICD" target="_blank">Services
                                                            </a>
                                                                }
                                                            }
                                                            else
                                                            {
                                                            <a class="btn btn-primary" href="~/CompanyDashBoard/ViewService?type=ICD" target="_blank">Services
                                                            </a>
                                                            }
                                                            // }
                                                        }
                                                        @if (Model.IsCoverageAreaApply)
                                                        {
                                                            // if (string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], System.Globalization.CultureInfo.InvariantCulture)))
                                                            // {
                                                            if (Model.CoverageAreaCount.Equals(0))
                                                            {
                                                            <a id="blinkcoveragearea" class="btn btn-primary" href="~/Company/CoverageArea?type=0" target="_blank">Coverage Area
                                                            </a>
                                                            }
                                                            else
                                                            {
                                                            <a class="btn btn-primary" href="~/Company/CoverageArea?type=0" target="_blank">Coverage Area
                                                            </a>}
                                                            // }
                                                        }
                                                    </td>

                                                </tr>
                                            }

                                        </tbody>
                                    </table>
                                }
                                else
                                {
                                    <table class="table">
                                        <tbody>

                                            <tr>
                                                <th>Start Date</th>
                                                <td>

                                                    @if (!object.Equals(Model.RegisteredDate, null))
                                                    {
                                                        <span>@string.Format("{0:MMM dd, yyyy}", Model.RegisteredDate)</span>
                                                    }
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                }
                            </div>
                        </div>
                        <div class="span3">
                            <div class="company-info box">
                                <h3>Company</h3>
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <th>Name</th>
                                            <td>@Model.CompanyName
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Address</th>
                                            <td class="address">
                                                @if (!string.IsNullOrEmpty(Model.StreetNumber) || !string.IsNullOrEmpty(Model.StreetName) || !string.IsNullOrEmpty(Model.Direction))
                                                {
                                                    @Model.StreetNumber 
                                                    if (!string.IsNullOrEmpty(Model.Direction))
                                                    {
                                                    @Shared.SingleSpace @Model.Direction} if (!string.IsNullOrEmpty(Model.StreetName))
                                                    {@Shared.SingleSpace @Model.StreetName<br />}
                                                }
                                                @if (!string.IsNullOrEmpty(Model.CityName) || !string.IsNullOrEmpty(Model.StateName) || !string.IsNullOrEmpty(Model.ZipCode))
                                                {
                                                    @Model.CityName 
                                                    if (!string.IsNullOrEmpty(Model.StateName))
                                                    {
                                                    @Shared.Comma @Shared.SingleSpace @Model.StateName}
                                                    if (!string.IsNullOrEmpty(Model.StateName))
                                                    { @Shared.SingleSpace @Model.ZipCode}
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Cell Phone</th>
                                            <td>
                                                @if (Model.OfficePhone != null && Model.OfficePhone.Trim() != string.Empty)
                                                {   <span>(@Model.OfficePhone.Substring(0, 3)) @Model.OfficePhone.Substring(3, 3)-@Model.OfficePhone.Substring(6, 4)</span>}</td>
                                        </tr>
                                        @* <tr>
                                            <th>Mobile</th>
                                            <td>@if (Model.DirectPhone != null && Model.DirectPhone.Trim() != string.Empty)
                                                {  <span>(@Model.DirectPhone.Substring(0, 3)) @Model.DirectPhone.Substring(3, 3)-@Model.DirectPhone.Substring(6, 4)</span>}</td>
                                        </tr>*@
                                        <tr>
                                            <th>Email</th>
                                            <td><a href="mailto:@Model.EmailId" target="_top" class="emal-txt-break">@Model.EmailId</a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
            @if (Session["ParentUserId"] == null)
            {
                if (!object.Equals(Model.ICPerProspectiveClientList, null))
                {
                    if (Model.ICPerProspectiveClientList.Count() > 0)
                    {
                <div class="span12 hei">
                    <span style="font-weight: bold; margin-left: 10px;">Status Key</span>
                </div>
                <div class="span12 hei" style="margin-top: 10px;">
                    <div class="boxxx" style="background-color:@DecisionPointR.ClientAndInvestorMeetColor"></div>
                    <div class="span11 pad">@DecisionPointR.ClientAndInvestorMeet
                    </div>
                </div>
                
                <div class="clearfix"></div>
                <div class="span12">
                    <div class="boxxx" style="background-color:@DecisionPointR.ClientMeetInvestorNotMeetColor"></div>
                    <div class="span11 pad2">
                        Meets the client requirements but not all of their clients requirements		
                    </div>
                </div>
                <div class="span12">
                    <div class="boxxx" style="background-color:@DecisionPointR.ClientNotMeetAndInvestorNotMeetColor"></div>
                    <div class="span11 pad2">
                        Does not meet their clients requirements 		
                    </div>
                </div>
                
                <div class="row-fluid">

                    <div class="span12" style="overflow: auto; margin-top: 14px;">

                        <table style="margin-left: 1px;" id="tblClientServices">

                            <tbody>
                                <tr>

                                    @{int count = 0; }
                                    @{float ii = Model.ICPerProspectiveClientList.Count(); }
                                    @{
                                      int k = 0;
                                      float totle1 = ii / 5f;
                                      if (ii == 1)
                                      {
                                          totle1 = 1.0f;
                                      }
                                    }

                                    @while (count < totle1)
                                    {
                                        count++;
                                        <td style="vertical-align: top;">
                                            <table class="table table-hover icClientTbls">
                                                <thead>
                                                    <th>Status Key</th>
                                                    <th>Company Name</th>
                                                    <th>View/Update</th>
                                                </thead>
                                                <tbody>
                                                    @{var j = 0; int jj = 0; int index = 0;}
                                                    @foreach (var item in Model.ICPerProspectiveClientList)
                                                    {
                                                        if (jj < k)
                                                        {
                                                            jj++;
                                                            continue;
                                                        }
                                                        else
                                                        {

                                                            if (j != 5)
                                                            {
                                           
                                                        <tr>

                                                            <td>
                                                                @if (item.Status == "Pass")
                                                                {
                                                                    <div class="boxxx" style="margin-left:-4px; margin-top:0; background-color:@DecisionPointR.ClientAndInvestorMeetColor;"></div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="boxxx" style="margin-left:-4px; margin-top:0; background-color:@DecisionPointR.ClientNotMeetAndInvestorNotMeetColor;"></div>
                                                                }


                                                            </td>
                                                            <td>
                                                                @item.vendor
                                                            </td>
                                                            <td><a id="@item.CompanyId" style="cursor: pointer; text-decoration: underline;" class="viewClient" onclick="ShowClientViewByIC('@item.CompanyId')">View/Update</a></td>
                                                        </tr>

                                                                j++;
                                                            }
                                                            else { k = k + 5; break; }
                                                        }
                                                        index++;
                                                    }
                                                </tbody>
                                            </table>
                                        </td> 
                                        <td style="width: 75px;"></td>
                                    }

                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                    }
                }
            }

            <div class="row-fluid" id="icDefaultView">
                @if (!Convert.ToString(Session["UserType"], CultureInfo.InvariantCulture).Equals(Shared.NonClient))
                {
                    <div class="row-fluid">
                        @if (Session["ParentUserId"] == null)
                        {
                            <div class="span12" style="margin-top: 5px;">
                                @if (Model.IsEditVisibilityDone)
                                {
                                    <a class="btn btn-primary" onclick="EditVisibility()">Edit Visibility
                                    </a>
                                }
                                else
                                {
                                    <a id="blinkeditvisibility" class="btn btn-primary" onclick="EditVisibility()">Edit Visibility
                                    </a>
                                }
                            </div>
                        }

                    </div>
                    <hr>
                       
                    <div class="row-fluid">
                        <div class="box background-check">
                            @if (Model.IsBgCheckApply || Model.IsLicInspply)
                            {
                                if (Model.IsBgCheckApply)
                                {
                                <div class="row-fluid">
                                    <div class="span12">
                                        <h3>Background Check</h3>

                                    </div>
                                </div>
                                <div class="box background-check">
                                    @if (Model.BackgroundList != null)
                                    {
                                        if (Model.BackgroundList.Count > 0)
                                        {
                                        <table id="tbl_BackgroundCheck" class="table table-hover insurance-table table-layout">
                                            <thead>
                                                <tr>
                                                    @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                    {
                                                        <th>Required By</th>
                                                    }
                                                    <th style="width: 29%;">Title</th>
                                                    <th>Source</th>
                                                    <th>Received</th>
                                                    <th>Link</th>
                                                    <th>Status</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.BackgroundList)
                                                {
                                                    if (reqCompanyId != item.RequiredByCompanyId || SterlingPkgId != item.SterlingPkgId)
                                                    {
                                                    <tr>
                                                        @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                        {
                                                            if (Model.CurrentClientList.Select(x => x.CompanyId).Distinct().Contains(item.RequiredByCompanyId))
                                                            {
                                                            <td>@item.RequiredByCompanyName</td>
                                                            }
                                                            else
                                                            {
                                                            <td>@item.RequiredByCompanyId</td>
                                                            }
                                                        }
                                                        <td>@if (reqCompanyId != item.RequiredByCompanyId || SterlingPkgId != item.SterlingPkgId)
                                                            {
                                                                if (item.BackgroundTitle.Contains("Driver"))
                                                                {
                                                            <span>Driver License</span>
                                                                }
                                                                else
                                                                {
                                                            @item.BackgroundTitle
                                                                }
                                                            }
                                                        </td>
                                                        <td>@if (!string.IsNullOrEmpty(item.Source))
                                                            {@item.Source.Split(char.Parse(Shared.Comma))[0]}</td>
                                                        <td>@if (item.ReceivedDate != null)
                                                            {
                                                            @item.ReceivedDate.Value.ToShortDateString()
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (reqCompanyId != item.RequiredByCompanyId || SterlingPkgId != item.SterlingPkgId)
                                                            {
                                                                if (!item.BackgroundTitle.Contains("Basic"))
                                                                {
                                                                    if (Session["ParentUserId"] != null)
                                                                    {
                                                                <a id="@item.SterlingOrderId" style="cursor:pointer;" onclick="ReviewSterlingResult('@item.SterlingOrderId',event)">Review Results</a>
                                                                    }
                                                                    else
                                                                    {
                                                                <a id="@item.SterlingOrderId" style="cursor:pointer;" target="_blank" href="@Url.Content("~/Sterling/ICSterlingReviewResult")">Review Results</a>
                                                                    }
                                                                    //<a style="cursor:pointer;" onclick="ABC('@item.SterlingPkgId','@item.SterlingPkgName')">Review Results</a><a id="@item.SterlingOrderId" style="cursor:pointer;" onclick="ReviewSterlingResult('@item.SterlingOrderId',event)">Review Results</a>
                                                                }
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (reqCompanyId != item.RequiredByCompanyId || SterlingPkgId != item.SterlingPkgId)
                                                            {
                                                                <span>@item.Status</span>
                                                            
                                                            }
                                                            else
                                                            {
                                                                <p>&nbsp;</p>
                                                            }
                                                        </td>
                                                        @if (Session["parentUserId"] == null)
                                                        {
                                                            if (string.IsNullOrEmpty(Model.ParentCompanyId))
                                                            {
                                                                if (!string.IsNullOrEmpty(item.UpgradePkgIds))
                                                                {
                                                            <td>
                                                                @{
                                                                    if (Model.BackgroundList.IndexOf(item) == 0)
                                                                    {
                                                                        isUpgrade = true;
                                                                    }
                                                                }
                                                                <a id="@item.BgCheckMasterTblId" onclick="UpgradePackage('@item.BgCheckMasterTblId','@item.UpgradePkgIds',this.id)">Upgrade</a>

                                                            </td>
                                                                }
                                                            }
                                                        }
                                                        @if (!string.IsNullOrEmpty(item.BackgroundTitle))
                                                        {
                                                            if (item.BackgroundTitle.Contains("Driver"))
                                                            {
                                                            <td>
                                                                @{
                                                                if (Model.BackgroundList.IndexOf(item) == 0)
                                                                {
                                                                    isEditView = true;
                                                                }
                                                                }
                                                                <a id="@item.BgCheckMasterTblId" style="font-style: italic;" onclick="EditProfLic('@item.LicenseNumber','Driver License','@item.LicenseStateCode','@item.LicenseExpDate','@item.BgCheckMasterTblId','@item.Id','1','Sterling')">edit/view</a>

                                                            </td>
                                                            }
                                                        }
                                                    </tr>
                                                        if (!string.IsNullOrEmpty(item.Description))
                                                        {
                                                        
                                                    <tr>
                                                        @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                        {
                                                            <td></td>
                                                        }
                                                        <td style="padding: 0px 5px;">@if (!string.IsNullOrEmpty(item.Description))
                                                                                      {<span style="font-style: italic; font-size: 12px;">@item.Description</span>}
                                                                                      else
                                                                                      {<span>-</span>}
                                                        </td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        @if (isUpgrade)
                                                        {
                                                            <td></td>
                                                        }
                                                        @if (isEditView)
                                                        {
                                                            <td></td>
                                                        }

                                                    </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                    <tr>
                                                        @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                        {
                                                            <td></td>
                                                        }
                                                        <td style="padding: 0px 5px;">@if (!string.IsNullOrEmpty(item.Description))
                                                                                      {<span style="font-style: italic; font-size: 12px;">@item.Description</span>
                                                                                      }
                                                                                      else
                                                                                      {<span>-</span>}
                                                        </td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        @if (isUpgrade)
                                                        {
                                                            <td></td>
                                                        }
                                                        @if (isEditView)
                                                        {
                                                            <td></td>
                                                        }

                                                    </tr>
                                                    }
                                                    reqCompanyId = item.RequiredByCompanyId;
                                                    SterlingPkgId = item.SterlingPkgId;

                                                }


                                            </tbody>
                                        </table>
                                        }
                                        else
                                        {
                                        <span>No Record</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No Record</span>
                                    }
                                </div>
                                }

                                if (Model.IsLicInspply)
                                {
                                    reqCompanyId = string.Empty; 
                                <div class="row-fluid">
                                    <div class="span12">
                                        <h3>Professional License</h3>
                                    </div>


                                </div>
                                <div class="box background-check">
                                    @if (!object.Equals(Model.ProfessionalLicense, null))
                                    {
                                        if (Model.ProfessionalLicense.Count > 0)
                                        {
                                        <table id="tbl_ProfLic" class="table table-hover insurance-table table-layout">
                                            <thead>
                                                <tr>
                                                    @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                    {                                               
                                                        <th style="width: 12%;">Required By</th>                                               
                                                    }
                                                    <th style="width: 10%;">Type</th>
                                                    <th style="width: 20%;">License Number</th>
                                                    <th style="width: 10%;">State</th>
                                                    <th style="width: 10%;">Exp Date</th>
                                                    <th style="width: 9%;">Source</th>
                                                    <th style="width: 7%;">Doc & Data</th>
                                                    @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                    {
                                                        <th style="text-align: center;">Status</th>
                                                    }
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var item in Model.ProfessionalLicense)
                                                {
                                                    <tr>
                                                        @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                        {
                                                            if (reqCompanyId != item.RequiredByCompanyId)
                                                            {
                                                                if (Model.CurrentClientList.Select(x => x.CompanyId).Distinct().Contains(item.RequiredByCompanyId))
                                                                {
                                                            <td style="width: 25%;">@item.ReqCompanyName</td>
                                                                }
                                                                else
                                                                {
                                                            <td style="width: 25%;">@item.RequiredByCompanyId</td>
                                                                }
                                                            }

                                                        }

                                                        <td>@item.LicenseType</td>
                                                        <td>
                                                            @if (!string.IsNullOrEmpty(item.LicenseNumber))
                                                            {
                                                                @item.LicenseNumber
                                                            }
                                                            else
                                                            {<span style="margin-left: 45px;">-</span>}
                                                        </td>
                                                        <td>@if (!string.IsNullOrEmpty(item.StateName))
                                                            {@item.StateName }
                                                            else
                                                            {<span style="margin-left: 15px;">-</span>}</td>
                                                        <td>@if ((item.ExpirationDate != null))
                                                            {<span>@item.ExpirationDate.Value.ToShortDateString()</span>}
                                                            else
                                                            {<span style="margin-left: 25px;">-</span>}</td>
                                                        <td>@item.Source</td>
                                                        <td style="text-align: center;">
                                                            @if (item.IsDocUpload)
                                                            {
                                                                <img src="@Url.Content("~/Content/images/verified.png")" />
                                                            }
                                                            else
                                                            {
                                                                <span>-</span>
                                                            }
                                                        </td>
                                                        @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                        {
                                                            <td style="text-align: center;">
                                                                @if (item.Status == "Pass")
                                                                {
                                                                    <img src="@Url.Content("~/Content/images/verified.png")" />
                                                                }
                                                                else if (item.Status == "Fail")
                                                                {
                                                                    <img src="@Url.Content("~/Content/images/delete.png")" />
                                                                }
                                                                else if (item.Status == "Review")
                                                                {
                                                                    <span>@item.Status</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>-</span>
                                                                }

                                                            </td>

                                                        }
                                                        <td>

                                                            <a style="font-style: italic;" onclick="EditProfLic('@item.LicenseNumber','@item.LicenseType','@item.StateId','@item.ExpirationDate','@item.LicInsId','@item.LicInsMapId',0,'@item.Source')">edit/view</a>

                                                        </td>
                                                    </tr> 
                                                        reqCompanyId = item.RequiredByCompanyId;
                                                }



                                            </tbody>
                                        </table>
                                        }
                                        else
                                        {
                                        <span>No Record</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No Record</span>
                                    }
                                </div>


                                }
                                if (Model.IsLicInspply)
                                {
                                    reqCompanyId = string.Empty;
                                <div class="row-fluid">
                                    <div class="span12">
                                        <h3>Insurance</h3>
                                    </div>
                                </div>
                                <div class="box background-check" style="overflow: visible;">
                                    @if (!object.Equals(Model.ProfessionalInsurance, null))
                                    {
                                        if (Model.ProfessionalInsurance.Count > 0)
                                        {
                                        <table id="tbl_Insurance" class="table table-hover insurance-table">
                                            <thead>
                                                <tr>
                                                    @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                    {                                               
                                                        <th style="width: 13%;">Required By</th>                                               
                                                    }
                                                    <th>Type</th>
                                                    <th>Company Name</th>
                                                    <th>Policy Number</th>
                                                    <th class="th-wraper">
                                                        <div class="relative_INS">
                                                            <div id="div_twoColumnHead" class="twocolumn-heading" style="width: 273px;">Coverage Amounts</div>
                                                        </div>
                                                        Single Occurrence</th>
                                                    <th class="th-wraper">Aggregate</th>
                                                    <th>Exp Date</th>
                                                    <th>Doc & Data</th>
                                                    @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                    { <th>Status</th>}
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var item in Model.ProfessionalInsurance)
                                                {
                                                    <tr>
                                                        @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                        {
                                                            if (reqCompanyId != item.RequiredByCompanyId)
                                                            {
                                                                if (Model.CurrentClientList.Select(x => x.CompanyId).Distinct().Contains(item.RequiredByCompanyId))
                                                                {
                                                            <td>@item.ReqCompanyName</td>
                                                                }
                                                                else
                                                                {
                                                            <td>@item.RequiredByCompanyId</td>
                                                                }
                                                            }
                                                            else
                                                            {
                                                            <td></td>
                                                            }

                                                        }
                                                        <td>@item.InsuranceType</td>
                                                        <td>@if (!string.IsNullOrEmpty(item.CompanyName))
                                                            {@item.CompanyName}
                                                            else
                                                            {<span style="margin-left: 25px;">-</span>}</td>
                                                        <td>@if (!string.IsNullOrEmpty(item.PolicyNumber))
                                                            {@item.PolicyNumber}
                                                            else
                                                            {<span style="margin-left: 25px;">-</span>}</td>
                                                        <td>@item.SingleOccurance</td>
                                                        <td>@item.Aggregate</td>
                                                        <td>@if ((item.ExpirationDate != null))
                                                            {<span>@item.ExpirationDate.Value.ToShortDateString()</span>}
                                                            else
                                                            {<span style="margin-left: 20px;">-</span>}</td>
                                                        <td style="text-align: center;">
                                                            @if (item.IsDocUpload)
                                                            {
                                                                <img src="@Url.Content("~/Content/images/verified.png")" />
                                                            }
                                                            else
                                                            {
                                                                <span>-</span>
                                                            }
                                                        </td>
                                                        @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                                                        {
                                                            <td style="text-align: center;">
                                                                @if (item.Status == "Pass")
                                                                {
                                                                    <img src="@Url.Content("~/Content/images/verified.png")" />
                                                                }
                                                                else if (item.Status == "Fail")
                                                                {
                                                                    <img src="@Url.Content("~/Content/images/delete.png")" />
                                                                }
                                                                else
                                                                {
                                                                    <span>-</span>
                                                                }

                                                            </td>

                                                        }
                                                        <td>

                                                            <a style="font-style: italic;" onclick="EditIns('@item.PolicyNumber','@item.CompanyName','@item.ExpirationDate','@item.InsuranceType','@item.LicInsId','@item.SingleOccurance','@item.Aggregate','@item.LicInsMapId','@item.InsuranceVerType')">edit/view</a>

                                                        </td>
                                                    </tr>
                                                        reqCompanyId = item.RequiredByCompanyId;
                                                }


                                            </tbody>
                                        </table>
                                        }
                                        else
                                        {
                                        <span>No Record</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No Record</span>
                                    }
                                </div>

                                }
                            }
                            @if (Session["ParentUserId"] != null || !string.IsNullOrEmpty(Model.ParentCompanyId))
                            {<div class="span12 mar-spn1">
                                <h3>Communications</h3>
                            </div>
                                <div class="box background-check">
                                    <div class="row-fluid">
                                    </div>
                                    @if (!object.Equals(Model.ProfessionalCommunications, null))
                                    {
                                        if (Model.ProfessionalCommunications.Count > 0)
                                        {
                                        <table id="tbl_Communication" class="table table-hover insurance-table table-layout">
                                            <thead>
                                                <tr>
                                                    <th>Required By</th>
                                                    <th>Title</th>
                                                    <th style="text-align: center;">Completion Date</th>
                                                    <th style="text-align: center;">Exp Date</th>
                                                    <th style="text-align: center;">Status</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var item in Model.ProfessionalCommunications)
                                                {
                                                    <tr>

                                                        <td>@item.Docfrom</td>


                                                        <td>@item.DocTitle</td>

                                                        <td style="text-align: center;">@if ((item.completeDate != null))
                                                                                        {<span>@item.completeDate.Value.ToShortDateString()</span>}
                                                                                        else
                                                                                        {<span>-</span>}</td>

                                                        <td style="text-align: center;">@if ((item.DueDate != null))
                                                                                        {<span>@item.DueDate.Value.ToShortDateString()</span>}
                                                                                        else
                                                                                        {<span>-</span>}</td>
                                                        <td style="text-align: center;">
                                                            @if (item.status == "Pass")
                                                            {
                                                                <img src="@Url.Content("~/Content/images/verified.png")" />
                                                            }
                                                            else
                                                            {
                                                                <span style="margin-left: 20px;">-</span>
                                                            }
                                                        </td>


                                                    </tr>  
                                                }


                                            </tbody>
                                        </table>
                                        }
                                        else
                                        {
                                        <span>No Record</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No Record</span>
                                    }
                                </div>
                                <div class="span12 mar-spn1">
                                    <h3>Additional Requirements</h3>
                                </div>
                                <div class="box background-check">
                                    <div class="row-fluid">
                                    </div>
                                    @if (!object.Equals(Model.AdditionalRequirements, null))
                                    {
                                        if (Model.AdditionalRequirements.Count > 0)
                                        {
                                        <table id="tbl_AddReq" class="table table-hover insurance-table table-layout">
                                            <thead>
                                                <tr>
                                                    <th style="width: 19%;">Required By</th>
                                                    <th style="width: 23%;">Title</th>
                                                    <th style="width: 41%;">Completion Date</th>
                                                    <th style="text-align: center">Status</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @{reqCompanyId = string.Empty;}
                                                @foreach (var item in Model.AdditionalRequirements)
                                                {
                                                    <tr>

                                                        @if (Model.CurrentClientList.Select(x => x.CompanyId).Distinct().Contains(item.RequiredByCompanyId))
                                                        {
                                                            <td>@item.ReqCompanyName</td>
                                                        }
                                                        else
                                                        {
                                                            <td>@item.RequiredByCompanyId</td>
                                                        }


                                                        <td>@item.title</td>

                                                        <td style="text-align: center">
                                                            @if ((item.CompletedDate != null))
                                                            {<span>@item.CompletedDate.Value.ToShortDateString()</span>}
                                                            else
                                                            {<span style="margin-left: 40px;">-</span>}</td>
                                                        <td style="text-align: center">
                                                            @if (item.Status == "Pass")
                                                            {
                                                                <img src="@Url.Content("~/Content/images/verified.png")" />
                                                            }
                                                            else if (item.Status == "Fail")
                                                            {
                                                                <img src="@Url.Content("~/Content/images/delete.png")" />
                                                            }
                                                            else
                                                            {
                                                                <span>-</span>
                                                            }

                                                        </td>

                                                        <td>

                                                            <a style="font-style: italic;" onclick="EditAdditionalReq('@item.title','@item.UploadedDoc','@item.LicInsId','@item.LicInsMapId')">edit/view</a>

                                                        </td>
                                                    </tr>  
                                                            reqCompanyId = item.RequiredByCompanyId;
                                                }


                                            </tbody>
                                        </table>
                                        }
                                        else
                                        {
                                        <span>No Record</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No Record</span>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                        
                            
                    <br>
                }
            </div>




        </div>
    </div>
</div>
<div class="control-group " style="float: right; margin-right: 10px;">

    @if (!string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], System.Globalization.CultureInfo.InvariantCulture)))
    {
        <div><a class="btn btn-primary" href="@Url.Content("~/UserDashBoard/DocumentAction/All")">Close</a></div>
    }
    else
    {
        <div><a class="btn btn-primary" href="@Url.Content("~/UserDashBoard/MyDashBoard?date=")@System.DateTime.Now.Date&type=1">Close</a></div>
    }
</div>


@* End Background Edit PopUp*@
<div class="trans" id="nametrans"></div>
<div class="popup" id="namepopup" style="left: 20%;">
    @using (Html.BeginForm("Updatemyprofile", "UserDashBoard", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="Reply-MessageBox" style="display: block; float: left; overflow-y: auto; overflow-x: hidden;">

            <div class="tittle-MessageBox">
                <span>Edit My Profile</span><a>
                    <img id="btnnamelose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
            </div>
            <div class="MessageSection-Box popup-box">
                <div class="control-group w100">
                    <div class="halfwidth1">Name <sup style="color: red; font-size: 10px;">*</sup></div>
                    <div class="halfrest">

                        <div class="w23" style="margin-right: 34px;">@Html.TextBoxFor(model => model.FName, new { @placeholder = "First Name", @class = "input-xsmall-txt", @maxlength = "50", onkeypress = "checkval(this.id)", @style = "width:149px;" })</div>
                        <div class="middlename" style="margin-right: 16px;">@Html.TextBoxFor(model => model.MName, new { @placeholder = "Middel Name", @class = "input-mini1", @maxlength = "1", @style = "width:48px;" })</div>
                        <div class="w23" style="margin-right: 23px;">@Html.TextBoxFor(model => model.LName, new { @placeholder = "Last Name", @class = "input-small-txt", @maxlength = "50", onkeypress = "checkval(this.id)", @style = "width:145px;" })</div>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Email <sup style="color: red; font-size: 10px;">*</sup></div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.EmailId, new { @placeholder = "Email Id", @class = "input-xlarge-txt", @title = "", @maxlength = "100", onkeypress = "checkval(this.id)" })
                        <label id="emailerrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Office Phone</div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.OfficePhone, new { @placeholder = "Office phone", @class = "input-xlarge-txt", @title = "", @maxlength = "14", onkeydown = "checkval(this.id)" })
                        <label id="phoneerrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>

                @*<div class='control-group w100'>
                    <div class="halfwidth1">Mobile Phone</div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.DirectPhone, new { @placeholder = "Cell phone", @class = "input-xlarge-txt", @title = "", @maxlength = "14", onkeydown = "checkval(this.id)" })
                        <label id="cellnoerrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>*@
                <div class='control-group w100'>
                    <div class="halfwidth1">Address</div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.StreetNumber, new { maxlength = 6, @class = "input-xlarge", @placeholder = "Number", @style = "Width:125px" })
                        @Html.TextBoxFor(model => model.Direction, new { maxlength = 2, @class = "input-xlarge", @placeholder = "Direction", @style = "Width:105px" })
                        @Html.TextBoxFor(model => model.StreetName, new { maxlength = 50, @class = "input-xlarge", @placeholder = "Street Name", @style = "Width:115px" })
                        <br />
                        @Html.TextBoxFor(model => model.CityName, new { @class = "input-xlarge", @placeholder = "City Name", maxlength = 50, @style = "Width:131px" })
                        @Html.DropDownListFor(model => model.StateId, FillStateListAsPerIdVal(), "Select State", new { @class = "input-xlarge", @style = "width:120px" })
                        @Html.TextBoxFor(model => model.ZipCode, new { maxlength = 5, @class = "input-xlarge", @placeholder = "Zip Code", @style = "Width:110px" })
                    </div>
                </div>

                <div class="control-group img-box">

                    <div class="halfrest" style="margin-bottom: 1px !important; float: none;">
                        <div style="width: 223px; height: 160px; border: 1px solid #d7d7d7;">
                            <img src="@imagePath" id="personpic1" style="width:223px; height:160px;" />
                        </div>
                    </div>

                    <label style="color: rgb(255, 255, 255); font-size: 12px; margin-top: 5px; width: 48px; margin-left: 155px; height: 23px;" class="btn btn-primary">
                        <p style="padding-top: 0px;">Browse</p>
                        @Html.TextBoxFor(model => model.File, new { type = "file", name = "file", id = "file", @style = "color:transparent;opacity:0; margin-top:-33px;width:5px;", onchange = "readURL(this);check_file();", onmouseover = "tooltip(this);" })

                    </label>


                </div>
            </div>
            <div class="Bottom-ButtonControl" style="float: right; width: 17%;">
                @Html.HiddenFor(model => model.ReqType)
                <button type="button" id="btnnamedone" class="btn btn-primary" title="Update Profile" onclick="CheckEmailExist()">Update</button>
                <div id="btnnamecancel" class="btnred" title="Cancel">Cancel</div>
            </div>

        </div>
    }
</div>

<div class="confirmationdivmain" id="divManualInviteOuter" style="display: none;"></div>
<div class="confirmationdivinner" id="divManualInviteInner" style="display: none; width: 255px; top: 50%; left: 50%; margin-left: -125px; margin-top: -30px;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; height: 60px; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div style="font-size: 16px; color: green; padding-bottom: 10px;" id="dvSaveMsg"></div>
        <div style="clear: both;">
            <input id="btnSaveOK" class="btn btn-primary" type="button" value="Ok" onclick="CloseOpenPopup('divManualInviteOuter', 'divManualInviteInner')">
        </div>


    </div>
</div>
<div class="confirmationdivmain" id="waitPopupOuter" style="display: none;"></div>
<div class="confirmationdivinner" id="waitPopupInner" style="display: none; width: 255px; top: 50%; left: 50%; margin-left: -125px; margin-top: -30px;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; height: 60px; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div style="font-size: 16px; color: green; padding-bottom: 10px;" id="dvMsg"></div>

    </div>
</div>

@*Client Reqiurement Popup*@
<div class="confirmationdivmain" id="JCRpopupdivouter" style="display: none;"></div>
<div class="confirmationdivinner" id="JCRpopupdivinner" style="display: none; width: 70%; left: 25%; z-index: 16; top: 10%;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div class="tittle-MessageBox">
            <span>Required document to be read</span><a>
                <img id="btnJCRclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>

        <div class="modal-body">
            <div id='JCRGrid' style="padding-top: 20px;">
            </div>
        </div>
    </div>
</div>

<div class="confirmationdivmain" id="divRequirementOuter" style="display: none;"></div>
<div class="confirmationdivinner" id="divRequirementInner" style="display: none; width: 70%; left: 25%; z-index: 17; top: 10%;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; height: 500px; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div class="tittle-MessageBox">
            <span id="head">Complete Below</span><a onclick="closeGridPopup(0)">
                <img id="btnRequirementclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>
        <div style="clear: both; height: 10px;"></div>
        <div style="clear: both;">
            <div id="0">
                <div style="width: 26%; float: left;">
                    <div class='control-group w100'>
                        <div style="font-weight: bold;">Title</div>
                        <div class="MarginBottom3" style="margin-top: 3px">

                            <div>
                                <span class="view">
                                    <input type="text" placeholder="Title" id="lbltitle_0" onkeypress="valtitle(this.id,event)" readonly="readonly" style="border: none; background: none; color: black; box-shadow: inherit; padding: 0 !important;" />
                                </span>
                                <span class="save" style="display: none;">
                                    <input type="text" placeholder="Title" id="lbltitleaddcre" onchange="onchangetext(this.id)" />
                                </span>
                                <input id="uploadbtn" type="button" class="btn btn-primary MarginTop5 uploadbtn_0" value="Upload" />
                                <input id="uploadfilebtn1" class="uploadfilebtn_0" type="file" style="opacity: 0; position: relative; left: -78px; width: 80px;" onchange="readdocURL(this,this.id)" />
                                <div style="margin-top: 10px; overflow: auto; position: fixed; height: 192px; width: 265px;">
                                    <div id="docfiles_0" style="overflow: auto; width: 169px; max-height: 100px;" class="removeDub"></div>
                                    <div id="userdocfiles_0" style="overflow: auto; width: 169px; max-height: 100px;" class="removeDub"></div>
                                </div>
                                <label id="docfileName_0" style="color: red;"></label>

                            </div>

                        </div>
                    </div>
                </div>
                <div style="width: 39%; float: left;">
                    <div class='control-group w100'>
                        <div style="font-weight: bold;">Acknowledgement</div>
                        <div class='MarginBottom3'>
                            <div class="row-fluid">
                                <div class="save" style="display: none; float: left; overflow: auto; height: 265px; position: fixed; width: 25%;">
                                    <table id="Stbreqaction" class="w100">
                                        <tr>
                                            <td style="padding-bottom: 8px;">
                                                <input type="checkbox" id="gchk_0" style="margin-top: -7px;" checked="checked"></td>
                                            <td>
                                                <input id="greqcon_0" class="span12" type="text" placeholder="Add Reqiured Action..."
                                                    value="I have read and understood this document" maxlength="250" /></td>
                                            <td>&nbsp;</td>
                                        </tr>
                                    </table>
                                    <a id="lnkreqaction" style="cursor: pointer; margin-left: 24px; font-size: 12px;">Add more</a>
                                </div>
                                <div class="span12 view">
                                    <table id="tbreqaction_0" class="span11">
                                        <tr>
                                            <td class="removeDub" style="padding-bottom: 8px;">

                                                <div style="float: left; overflow: auto; max-height: 265px;" id="div_AckAppend"></div>

                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="width: 35%; float: left;">
                    <div class="row-fluid">
                        <div style="font-weight: bold;">Attributes</div>
                        <div class="span6 pull-left" style="margin-top: 3px; margin-left: 0;">
                            <div id="div_Expiration" class='control-group'>
                                <span>Expiration Date<sup style="color: red; font-size: 10px;"> *</sup></span>
                                <div class="datetimepicker input-append">

                                    <input type="text" style="position: relative; z-index: 100000;" onchange="onchangetext(this.id)" placeholder="Expiration Date" class="span12" id="txtExprationDate" />

                                </div>
                            </div>
                            <div id="div_company" class='control-group'>
                                <div>
                                    Company Name<sup style="color: red; font-size: 10px;"> *</sup>
                                    <input id="txtCompanyName" type="text" placeholder="Company Name" onchange="onchangetext(this.id)" maxlength="50" class="span12" />
                                </div>
                            </div>
                            <div id="div_State" class='control-group'>
                                <div>
                                    State<sup style="color: red; font-size: 10px;"> *</sup>
                                    @Html.DropDownListFor(model => model.StateAbbre, FillStateList(), "Select State", new { @class = "span12", onchange = "onchangetext(this.id)" })

                                </div>
                            </div>
                        </div>
                        <div class="span6 pull-right" style="margin-top: 3px;">
                            <div id="div_policy" class='control-group'>
                                <div>
                                    Policy Number<sup style="color: red; font-size: 10px;"> *</sup>
                                    <input id="txtPolicyNumber" type="text" placeholder="Policy Number" onchange="onchangetext(this.id)" maxlength="10" class="span12" />
                                </div>
                            </div>
                            <div id="div_lisence" class='control-group'>
                                <div>
                                    License Number<sup style="color: red; font-size: 10px;"> *</sup>
                                    <input id="txtLicenseNumber" type="text" placeholder="License Number" onchange="onchangetext(this.id)" maxlength="50" class="span12" />
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                <div class='control-group'>

                    <div>
                        <div class="btn btn-primary" id="btnMarkAsComplete_0" style="float: right; margin-right: 2.8%;" onclick="MarkDocComplete()">Mark As Complete</div>

                        <div class="btn btn-primary" id="btnsave_0" style="float: right; margin-right: 2.5%;" onclick="SaveReqDoc(0)">Save</div>

                    </div>
                </div>
                <div style="color: red; float: right; display: none;" id="mandatoryerrormsg">All * are mandatory. Please Fill all the details.</div>
            </div>
        </div>
        <div style="clear: both; height: 10px; width: 80%;"></div>
        <table id="tblJCRAudit" class="table table-hover" style="display: none; width: 100%;">
            <thead>
                <tr>
                    <th>Edit Date</th>
                    <th>Edit By</th>
                    <th>Company Name</th>
                    <th style="min-width: 14%;">License Number</th>
                    <th>Policy No</th>
                    <th>Expiration Date</th>
                    <th>State Name</th>
                    <th>Is Uploaded</th>
                    <th>Is Completed</th>
                </tr>
            </thead>
            <tbody>
            </tbody>


        </table>

    </div>
</div>
<div class="confirmationdivmain" id="BioInfoPopupouter" style="display: none;"></div>
<div class="confirmationdivinner" id="BioInfoPopupinner" style="display: none; left: 40%; z-index: 9999; top: 10%; width: 43%;">
    <div class="popup-inner-box">
        <div class="tittle-MessageBox">
            <span>@Model.FName @Model.MName @Model.LName - Bio</span><a>
                <img id="btnbioclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>

        <div class="modal-body">
            <p id="lbltxtbio">
                @Model.BioInfo
            </p>
            <p id="edittxtbio" style="display: none;">
                <textarea id="txtbio" class="mceNoEditor box-width-height">@Model.BioInfo</textarea>
            </p>
            <hr>
            @if (string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], System.Globalization.CultureInfo.InvariantCulture)))
            { 
                <button class="btn btn-primary" type="submit" id="editbioinfo">Edit</button>
            }

        </div>
    </div>
</div>

@*Professional Lic Popup*@
<div class="confirmationdivmain" id="profLicOuterDiv" style="display: none;"></div>
<div class="confirmationdivinner" id="profLicInnerDiv" style="display: none; width: 70%; left: 25%; z-index: 16; top: 10%;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div class="tittle-MessageBox">
            <span id="profDriverLicTitle">Edit Professional License</span><a>
                <img id="btnprofLicclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>
        <div>
            <div class="row-fluid">
                <div class="span12">
                    <h4 id="profDriverLicHeader">Professional License</h4>
                    <hr />
                </div>
                <div class="span12" style="margin-left: 0; border: 1px solid rgb(225, 225, 225); padding: 9px;">
                    <div class="span12" style="margin-left: 0;">
                        <div class="span5"><b>Attributes</b></div>
                        <div class="span3 profLicAkg"><b>Acknowledgements</b></div>
                        <div class="span4"><b>Upload</b> (<label class="control-label" id="profLicTitle" style="display: inline;">Upload</label>)</div>
                    </div>
                    <div class="span12" style="margin-left: 0;">
                        <div class="span5">
                            <div class="span12">
                                <table>
                                    <tr>
                                        <td>
                                            <label class="control-label">License Type</label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <select id="profLicenseType" disabled="disabled">
                                                <option value="0">-- Select --</option>
                                                <option value="1">Real Estate</option>
                                            </select>
                                            <input type="text" id="driverLicType" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">License Number<sup style="color: red; font-size: 10px;">*</sup></label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <input type="text" placeholder="License Number" id="profLicNumber" /></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">State<sup style="color: red; font-size: 10px;">*</sup></label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            @Html.DropDownList("ddState", new SelectList(Model.StateList, "StateId", "SateName"), "-- Select --", new { @style = "width:220px;" })
                                            @Html.DropDownList("ddDriverState", new SelectList(Model.StateList, "Abbrebiation", "SateName"), "-- Select --", new { @style = "width:220px;" })</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">Expiration Date<sup style="color: red; font-size: 10px;">*</sup></label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <div class="controls">
                                                <div class='datetimepicker input-append'>
                                                    <input type="text" id="licExpirationDate" placeholder="Expiration Date" />
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </table>

                            </div>
                        </div>
                        <div class="span3 profLicAkg">
                            <div class='control-group w100'>
                                <div class='MarginBottom3'>
                                    <div class="row-fluid">
                                        <div class="span12">
                                            <table id="licenseAckTbl" class="w100">
                                            </table>

                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class='control-group w100'>

                                <div class="MarginBottom3">
                                    <table style="width: 100%;">
                                        <tr>
                                            <td style="vertical-align: top;">
                                                <label class="control-label" id="profLicTitle1" style="display: none;">Upload</label></td>
                                            <td colspan="2" style="vertical-align: top;">
                                                <div>

                                                    <input id="uploadprofLicbtn" type="button" class="btn btn-primary MarginTop5 uploadbtn_0" value="Upload" style="margin: 0;" />
                                                    <input id="uploadfileprofLicbtn" class="bGChkFileUpload" type="file" style="opacity: 0; position: relative; left: -78px; width: 80px;" onchange="readdocURL(this,this.id)" />
                                                    <div id="uploadedprofLicfiles" style="overflow: auto; width: 273px; max-height: 100px; margin-top: 10px;" class="removeDub"></div>

                                                </div>
                                                <label id="docfileName_0" style="color: red;"></label>
                                            </td>
                                        </tr>
                                    </table>
                                </div>


                            </div>
                        </div>
                    </div>
                    <div class="span12" style="margin-left: 0;">
                        <input type="button" id="profLicenseSave" class="btn btn-primary pull-right" value="Mark As Complete" style="margin-right: 4px;" onclick="EditProfIns(0)" />
                        <input type="button" id="profLicenseapp" class="btn btn-primary pull-right" value="Approved" style="margin-right: 4px; display: none;" onclick="ApprovedStatus(0, 0)" />
                        <input type="button" id="profLicensenotapp" class="btn btn-primary pull-right" value="Not Approved" style="margin-right: 4px; display: none;" onclick="ApprovedStatus(0, 1)" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*Insurance Popup*@
<div class="confirmationdivmain" id="insOuterDiv" style="display: none;"></div>
<div class="confirmationdivinner" id="insInnerDiv" style="display: none; width: 70%; left: 25%; z-index: 16; top: 10%;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div class="tittle-MessageBox">
            <span id="insHeaderTitle">Edit Insurance</span><a>
                <img id="btninsclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>
        <div>
            <div class="row-fluid">
                <div class="span12">
                    <h4>Insurance</h4>
                    <hr />
                </div>

                <div class="span12" style="margin-left: 0; border: 1px solid rgb(225, 225, 225); padding: 9px;">
                    <div class="span12" style="margin-left: 0;">
                        <div class="span5"><b>Attributes</b></div>
                        <div class="span3"><b>Acknowledgements</b></div>
                        <div class="span4">
                            <b>Upload</b>(
                            <label class="control-label" style="display: inline;" id="insTitle">Upload</label>)
                        </div>
                    </div>
                    <div class="span12" style="margin-left: 0;">
                        <div class="span5">
                            <div class="span12">
                                <table>
                                    <tr>
                                        <td>
                                            <label class="control-label">Insurance Type</label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <select id="insuranceType" disabled="disabled">
                                                <option value="0">-- Select --</option>
                                                <option>E&O</option>
                                                <option>Liability</option>
                                                <option>D&O</option>
                                                <option>Workman's Comp</option>
                                            </select></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">Policy Number<sup style="color: red; font-size: 10px;">*</sup></label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <input type="text" placeholder="Policy Number" id="policyNumber" /></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">Expiration Date<sup style="color: red; font-size: 10px;">*</sup></label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <div class="controls">
                                                <div class='datetimepicker input-append'>
                                                    <input type="text" id="insExpirationDate" placeholder="Expiration Date" />
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">Company Name<sup style="color: red; font-size: 10px;">*</sup></label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <input type="text" placeholder="Company Name" id="companyName" /></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">Single Ocurrence<sup style="color: red; font-size: 10px;">*</sup></label>

                                        </td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <input type="text" placeholder="Single Ocurrence" id="signOcc" /></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label class="control-label">Aggregate<sup style="color: red; font-size: 10px;">*</sup></label></td>
                                        <td>&nbsp;</td>
                                        <td>
                                            <input type="text" placeholder="Aggregate Amount" id="aggAmt" /></td>
                                    </tr>
                                </table>

                            </div>
                        </div>
                        <div class="span3">
                            <div class='control-group w100'>
                                <div class='MarginBottom3'>
                                    <div class="row-fluid">
                                        <div class="span12">
                                            <table id="insuranceAckTbl" class="w100">
                                            </table>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class='control-group w100'>
                                <div class="MarginBottom3">
                                    <table style="width: 100%;">
                                        <tr>
                                            <td style="vertical-align: top;">
                                                <label class="control-label" style="display: none;" id="insTitle1">Upload</label></td>

                                            <td colspan="2" style="vertical-align: top;">
                                                <div>
                                                    <input id="uploadinsbtn" type="button" class="btn btn-primary MarginTop5 uploadbtn_0" value="Upload" style="margin: 0;" />
                                                    <input id="uploadfileinsbtn" class="bGChkFileUpload" type="file" style="opacity: 0; position: relative; left: -78px; width: 80px;" onchange="readdocURL(this,this.id)" />
                                                    <div id="uploadedinsdocfiles" style="overflow: auto; width: 169px; max-height: 100px; margin-top: 10px;" class="removeDub"></div>

                                                </div>
                                                <label id="docfileName_0" style="color: red;"></label>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span12" style="margin-left: 0;">
                        <input type="button" id="insuranceSave" class="btn btn-primary pull-right" value="Mark As Complete" style="margin-right: 4px;" onclick="EditProfIns(1)" />
                        <input type="button" id="insuranceapp" class="btn btn-primary pull-right" value="Approved" style="margin-right: 4px; display: none;" onclick="ApprovedStatus(1, 0)" />
                        <input type="button" id="insurancenotapp" class="btn btn-primary pull-right" value="Not Approved" style="margin-right: 4px; display: none;" onclick="ApprovedStatus(0, 1)" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Additional Requirement Popup*@
<div class="confirmationdivmain" id="addReqOuterDiv" style="display: none;"></div>
<div class="confirmationdivinner" id="addReqInnerDiv" style="display: none; width: 55%; left: 33%; z-index: 16; top: 10%;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div class="tittle-MessageBox">
            <span>Edit Additional Requirement</span><a>
                <img id="btnaddReqclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>
        <div>
            <div class="row-fluid">
                <div class="span12">
                    <h4>Additional Requirement</h4>
                    <hr />
                </div>
                <div class="span12" style="margin-left: 0; border: 1px solid rgb(225, 225, 225); padding: 9px;">
                    <div class="span12" style="margin-left: 0;">
                        <div class="span4"><b>Upload</b>(<label id="addiReqTitle" style="display: inline;"></label>)</div>
                        <div class="span5"><b>Acknowledgements</b></div>
                        <div class="span3"><b>&nbsp;</b></div>
                    </div>
                    <div class="span12" style="margin-left: 0;">
                        <div class="span12" style="margin-left: 0;">
                            <div class="span4">
                                <div class='control-group w100'>

                                    <div class="MarginBottom3">
                                        <div>
                                            <table>
                                                <tr>
                                                    <td valign="top">
                                                        <label id="addiReqTitle" style="display: block;"></label>
                                                    </td>

                                                    <td valign="top">
                                                        <input id="addReqUploadBtn" type="button" class="btn btn-primary guploadbtn_0" value="Upload" style="margin-top: 2px;" />
                                                        <input id="addReqUploadFileBtn" class="guploadfilebtn_0" type="file" style="opacity: 0; position: relative; left: -74px; margin-top: -1px; width: 68px;" onchange="readdocURL(this,this.id)" />
                                                        <label id="docfileName_0" style="color: red;"></label>
                                                    </td>
                                                </tr>
                                            </table>

                                            <div id="uploadedaddreqdocfiles" style="overflow: auto; width: 240px; max-height: 100px; margin-top: 10px;" class="removeDub">
                                            </div>
                                        </div>



                                    </div>


                                </div>
                            </div>
                            <div class="span5" style="overflow: auto; width: 400px; max-height: 100px; margin-top: 3px;">
                                <div class='control-group w100'>
                                    <div class='MarginBottom3'>
                                        <div class="row-fluid">
                                            <div class="span12 ">
                                                <table id="additionalReqTbl" class="w100">
                                                </table>
                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="span11">
                            <input type="button" id="additionalReqapp" class="btn btn-primary pull-right" value="Approved" style="margin-right: 4px; display: none;" onclick="ApprovedStatus(2, 0)" />
                            <input type="button" id="additionalReqnotapp" class="btn btn-primary pull-right" value="Not Approved" style="margin-right: 4px; display: none;" onclick="ApprovedStatus(2, 1)" />
                            <input type="button" id="additionalReqSave" class="btn btn-primary pull-right" style="margin-right: 4px;" value="Mark As Complete" onclick="EditProfIns(2)" />


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*Edit Access Popup*@
<div class="confirmationdivmain" id="editaccesspopupdivouter" style="display: none;"></div>
<div class="confirmationdivinner" id="editaccesspopupdivinner" style="background-clip: padding-box; top: 10%; background-color: #FFFFFF; height: 213px; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
    <div class="tittle-MessageBox">
        <span>Who can see my profile?</span><a onclick="closeGridPopup(1)">
            <img id="btneditaccessclose" src="@Url.Content("~/Content/images/Close-Icon-mail.png")" width="19" height="19" alt="" border="0" /></a>
    </div>

    <div class="modal-body">
        <form>
            <p>
                <label class="checkbox">
                    <input type="checkbox" checked="CHECKED">Only people from my organization
                </label>
            </p>
            <p>
                <label class="checkbox">
                    <input type="checkbox">Only people from my organization + partners
                </label>
            </p>
            <p>
                <label class="checkbox">
                    <input type="checkbox">Everyone
                </label>
            </p>
        </form>
        <hr>
        <button type="submit" data-dismiss="modal" class="btn btn-primary">Save</button>
    </div>
</div>
@*Edit Visibility Popup*@
<div class="confirmationdivmain" id="editvisibilitypopupdivouter" style="display: none;"></div>
<div class="confirmationdivinner" id="editvisibilitypopupdivinner" style="background-clip: padding-box; top: 10%; width: 540px; left: 38%; background-color: #FFFFFF; height: auto; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
    <div class="tittle-MessageBox">
        <span id="EditVisiTitle"></span><span>Criminal BackGround-License-Insurance Edit Visibility</span><a>
            <img id="btneditvisibilityclose" src="@Url.Content("~/Content/images/Close-Icon-mail.png")" width="19" height="19" alt="" border="0" /></a>
    </div>
    <hr>
    <div class="modal-body" style="overflow: hidden;">

        <p>
            <label class="radio">
                <input type="radio" id="showNoOneClient" class="editVisibility" checked="@Model.IsEditVisibilityDone" name="editVisibility">Do not share my Criminal Background, Insurance information or Professional license with any prospective or current clients.
            </label>
        </p>
        <p style="display: none;">
            <label class="radio">
                <input type="radio" id="showAllClient" class="editVisibility" checked="@Model.IsEditVisibilityDone" name="editVisibility">Show to all prospective and current clients
            </label>
        </p>
        <p>
            <label class="radio">
                <input type="radio" id="showSpecificClient" class="editVisibility" name="editVisibility">Share may Criminal Background, Insurance information and Professional and Driver’s License(s) with the following companies:
            </label>
            <div style="margin-left: 15%; display: none; overflow: auto; max-height: 200px;" id="ClientList">
                <ul style="list-style: none;">

                    @if (!object.Equals(Model.ICProspectiveClientList, null))
                    {
                        if (Model.ICProspectiveClientList.Count() > 0)
                        {
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" id="SelectAllClient" checked="checked" /><b>Select All</b>
                            </label>
                        </li>
                            foreach (var item in Model.ICProspectiveClientList)
                            {
                                if (Model.ICPerProspectiveClientList.Select(x => x.CompanyId).Contains(item.CompanyId))
                                {
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" class="chkclient" value="@item.CompanyId" checked="checked" onchange="SetSelectAllChk()" />@item.vendor
                            </label>
                        </li>
                                }
                                else
                                {
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" class="chkclient" value="@item.CompanyId" checked="checked" onchange="SetSelectAllChk()" />@item.vendor
                            </label>
                        </li>
                                }
                            }
                        }
                    }
                </ul>
            </div>
        </p>

        <hr>
        <button type="button" class="btn btn-primary" style="float: right;" id="btnSaveEditVisibility">Save</button>
    </div>
</div>




<input type="hidden" id="parentCompanyId" value="@Model.ParentCompanyId" />
<input type="hidden" value="@imagePath" id="imgpath" />
<input type="hidden" value="0" id="hidCurrentDocId" />
<input type="hidden" value="0" id="gridtypeid" />
<input type="hidden" value="0" id="visitcompanyid" />
<input type="hidden" value="0" id="visitcompanyname" />
<input type="hidden" id="hidIsCompleted" />
<input type="hidden" id="licandinstype" />
<input type="hidden" id="docfile" />
<input type="hidden" id="acks" />
<input type="hidden" id="hid_BackgroundId" value="0" />
<input type="hidden" id="hid_BackgroundMasterId" value="0" />
<input type="hidden" id="parentUserId" value="@Model.ParentUserId" />
<input type="hidden" id="hid_profLicMapId" value="0" />
<input type="hidden" id="hid_profLicMasterId" value="0" />
<input type="hidden" id="hid_InsMapId" value="0" />
<input type="hidden" id="hid_addReqMapId" value="0" />
<input type="hidden" id="hid_ParentUserid" value="@Session["ParentUserId"]" />
<input type="hidden" id="userId" value="@Session["UserId"]" />
<input type="hidden" id="IsDriverLic" value="0" />
@if (!object.Equals(@Model.ProfessionalInsurance, null))
{
    <input type="hidden" value="@Model.ProfessionalInsurance.Count()" class="insCount" />}
else
{
    <input type="hidden" value="0" class="insCount" />
}

<script>
    var ROOT = '@Url.Content("~/")';
    $('#btnBackgroundSave').click(function () {
        if (ValidateExpDateOnBackGroundCheck()) {
            var rddna = false;
            if ($('#rddna').is(":checked")) {
                rddna = true;
            }
            var docLocation = '';
            $('#userdocfiles1_0 a').each(function () {
                docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
            });
            docLocation = (docLocation.slice(0, -1));
            // alert($('#txtBackCreatorName').val())
            $.ajax({
                url: "@Url.Content("~/UserDashBoard/SetBackgroundMapping/")",
                data: JSON.stringify({
                    'Id': $('#hid_BackgroundId').val(),
                    'MasterId': $('#hid_BackgroundMasterId').val(),
                    'Documents': docLocation,
                    'BackgroundCheckStatus': $('#ddlBackStatus option:selected').text(),
                    'DateTime': $('#txtBackDate').val(),
                    'Source': $('#ddlBackSource option:selected').text(),
                    'CreatorName': $('#txtBackCreatorName').val(),
                    'IsActive': true,
                    'Notes': $('#txtBackNotes').val(),
                    'IsDNA': rddna,
                    'ExpirationDate': $('#bgCheckExpDate').val(),

                }),
                type: "POST",
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    $('#backtrans').slideUp('fast');
                    $('#backpopup').slideUp('fast');
                    $('body').css("overflow-y", "auto");
                    window.location.reload();
                }
            });
        }
    })

    $('#bgCheckExpDate').change(function () {
        ValidateExpDateOnBackGroundCheck();
    })
    $('#ddlBackSource').change(function () {
        if ($('#ddlBackSource').val() == 2) {
            $('#div_creator').show()
        } else {
            $('#div_creator').hide();
        }
    })

    function getBackgroundDetails(id) {
        $('#bgCheckExpDate').prop("disabled", true);
        $('#backcontent-div').css("height", "355px");
        $('#tblaudittrail').empty();
        var backId = 0;
        $.ajax({
            url: '@Url.Content("~/UserDashBoard/GetBackgroundMapping/")',
            data: { backMasterId: id },
            type: "GET",
            cache: false,
            success: function (result) {
                result = $.parseJSON(result);

                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {

                        if ($('#parentUserId').val() == result[i].CreatedBy) {

                            backId = result[i].Id;
                            $('#hid_BackgroundId').val(result[i].Id);
                            $('#hid_BackgroundMasterId').val(result[i].MasterId);
                            $("#ddlBackStatus option").each(function () {
                                this.selected = $(this).text() == result[i].BackgroundCheckStatus;
                            });
                            $("#ddlBackSource option").each(function () {
                                this.selected = $(this).text() == result[i].Source;
                            });
                            if (result[i].Source == 'None') {
                                $('#div_creator').show();
                            }
                            $('#txtBackCreatorName').val(result[i].CreatorName);
                            $('#txtBackNotes').val(result[i].Notes);
                            if (result[i].BackgroundCheckStatus == 'Approved') {
                                $('#Review_' + result[i].MasterId).html('Approved');
                                $('#Review_' + result[i].MasterId).removeClass('btn btn-small btn-warning');
                                $('#Review_' + result[i].MasterId).addClass('btn btn-small btn-success');
                            }
                            //set the DNA or Expiration Date
                            $('#rddna').prop("checked", result[i].IsDNA);
                            if (!result[i].IsDNA) {
                                $('#rdexpdate').prop("checked", true);
                                $('#bgCheckExpDate').val(dateFormat(new Date(new Date(parseInt(result[i].ExpirationDate.substr(6)))), 'mm/dd/yyyy'));
                                $('#bgCheckExpDate').prop("disabled", false);
                            }
                            else {
                                $('#bgCheckExpDate').prop("disabled", true);
                            }

                            SetAuditTrail(result);
                        }


                    }

                    ////st audit trail
                    //var rows = '<table class="table table-hover"><thead><th>Audit Date</th><th>Audit By</th><th>Audit Status</th></thead><tbody>';
                    //for (var i = 0; i < result.length; i++) {
                    //    var date = new Date(parseInt(result[i].DateTime.substr(6)));
                    //    date = dateFormat(new Date(date), 'mm/dd/yyyy')
                    //    rows += '<tr><td>' + date + '</td><td calss="width116px">' + result[i].CreatorName + '</td><td class="grid-width90" style="TEXT-ALIGN:center;">' + result[i].BackgroundCheckStatus + '</td></tr>';
                    //}

                    //rows = rows + ' ';
                    //$tbl.empty();
                    //$tbl.append(rows);
                    // set values in pop up and set background id Review_
                    $('#backcontent-div').css("height", "445px");
                    getUploadfiles(backId);
                }
            }
        });



    }


    function getUploadfiles(id) {
        getUploadfilesFOrBGCheck(id, ROOT);
    }
    function openEditBackgroundPopUp(id, title) {

        openEditBGPopUp(id, title, ROOT);
        $('#gridtypeid').val(id + '$' + 4);
    }

    $(document).ready(function () {
        //$('#div_twoColumnHead').css("width", "289px");
        if ($('.insCount').val() != 0) {
            if ($('#hid_ParentUserid').val() != null && $('#hid_ParentUserid').val() != '') {
                var FF = !(window.mozInnerScreenX == null);
                if (FF) {
                    $('#div_twoColumnHead').css("width", "260px");
                } else {
                    $('#div_twoColumnHead').css("width", "289px");
                }
            }

            else {
                $('#div_twoColumnHead').css("width", "289px");
            }
        }
        else {
            $('#div_twoColumnHead').css("width", "289px");
        }
        $('.tabbable').hide();
        $('#masterrow').hide();
        jQuery(function ($) {


            var myDate = new Date();
            var prettyDate = (myDate.getMonth() + 1) + '/' + myDate.getDate() + '/' +
                    myDate.getFullYear();
            $('#txtExprationDate').datepicker();
            $('#bgCheckExpDate').datepicker();
            $('#licExpirationDate').datepicker();
            $('#insExpirationDate').datepicker();
            //dateFormat(new Date($('#licExpirationDate').val()), 'mm/dd/yyyy');
        })
        //add required action
        $("#lnkreqaction").click(function () {
            var id = $('#Stbreqaction tbody tr').length;
            if (validatereqaction()) {

                $('#Stbreqaction tr:last').after('<tr><td><input id="gchk_' + id + '" type="checkbox" style="margin-top:-13px;" checked="checked" /> </td>' +
                '<td><input id="greqcon_' + id + '" class="span12" placeholder="Add Reqiured Action..." type="text" maxlength="250" style="margin-top:-1px;" />' +
                '</td><td><img id="delaction_' + id + '"  src="@Url.Content("~/Content/images/cross-button.png")" style="margin-left:6px;cursor:pointer;margin-top:-11px;" title="Remove Action" onclick="RemoveAction(this.id)">' +
                '<input type="hidden" id="reqconid_' + id + '" value="0"/></td></tr>');
                            $('#greqcon_' + id + '').focus();
                        }
        });
        GetICClientPermissions();
    })

                function ResetBasicdetails() {
                    if ($('#MName').val().trim() == "") {

                        $('#MName').val($('#MName').val().trim());
                    }
                }
                $("#btneditprofile").click(function () {
                    ResetBasicdetails();
                    var phones = [{ "mask": "(###) ###-####" }, { "mask": "(###) ###-####" }];
                    $('#OfficePhone').inputmask({
                        mask: phones,
                        greedy: false,
                        definitions: { '#': { validator: "[0-9]", cardinality: 1 } }
                    });
                    //$('#DirectPhone').inputmask({
                    //    mask: phones,
                    //    greedy: false,
                    //    definitions: { '#': { validator: "[0-9]", cardinality: 1 } }
                    //});
                    $('#nametrans').slideDown('fast');
                    $('#namepopup').slideDown('fast');
                    var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
                    var poistion = scrollTop + 200;
                    $('#namepopup').css("top", poistion);
                });
                $("#btnnamelose").click(function () {
                    $('#personpic1').attr('src', $('#imgpath').val());
                    $('#nametrans').slideUp('fast');
                    $('#namepopup').slideUp('fast');
                });
                $("#btnnamecancel").click(function () {
                    $('#personpic1').attr('src', $('#imgpath').val());
                    $('#nametrans').slideUp('fast');
                    $('#namepopup').slideUp('fast');
                });





                function checkval(id) {
                    if ($('#' + id).val().trim() != '') {
                        $('#' + id).removeClass("errorClass");
                        $('#phoneerrormsg').html('');
                        $('#cellnoerrormsg').html('');
                        $('#emailerrormsg').html('');
                    }

                }
                function checkvalidation() {

                    var fnameval = true;
                    var lnameval = true;
                    var emailidval = true;
                    var officephnval = true;
                    var directphnval = true;
                    // alert($('#fName').val());
                    if ($('#FName').val().trim() == '') {
                        // alert(1);
                        $('#FName').addClass("errorClass");
                        fnameval = false;
                    }


                    if ($('#LName').val().trim() == '') {
                        $('#LName').addClass("errorClass");
                        lnameval = false;
                    }

                    if ($('#EmailId').val().trim() != '') {
                        if (!validateEmail($('#EmailId').val())) {
                            $('#EmailId').addClass('errorClass');
                            $('#emailerrormsg').html("Enter correct email id");
                            emailidval = false;
                        }
                    }

                    if ($('#EmailId').val().trim() == '') {
                        $('#EmailId').addClass('errorClass');
                        emailidval = false;
                    }
                    if ($('#EmailId').val().trim() != '') {
                        if ($('#emailerrormsg').html().trim() != "") {
                            emailidval = false;
                        }
                    }
                    //
                    if ($('#OfficePhone').val().trim() != '') {
                        // alert(validatePhone($('#OfficePhone').val()));
                        if (!validatePhone($('#OfficePhone').val())) {
                            $('#OfficePhone').addClass("errorClass");
                            $('#phoneerrormsg').html("Enter correct phone number");
                            officephnval = false;
                        }
                        //else {
                        //    alert(5);
                        //}
                    }

                    //if ($('#DirectPhone').val().trim() != '') {
                    //    if (!validatePhone($('#DirectPhone').val())) {
                    //        $('#DirectPhone').addClass("errorClass");
                    //        $('#cellnoerrormsg').html("Enter correct phone number");
                    //        directphnval = false;
                    //    }
                    //}
                    if (fnameval && emailidval && officephnval && directphnval && lnameval) {

                        return true;
                    }
                    else {

                        return false;
                    }

                }

                function validatePhone(phone) {
                    var s = false;

                    var filter = /^([0-9]( |-)?)?(\(?[0-9]{3}\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$/;
                    if (filter.test(phone)) {
                        s = true;
                    }
                    else {
                        s = false;
                    }

                    return s;

                }
                function validateEmail(sEmail) {
                    var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
                    if (filter.test(sEmail)) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
                //Bio Info
                $('#editbioinfo').click(function () {

                    if ($('#editbioinfo').html() == "Edit") {
                        $('#lbltxtbio').hide();
                        $('#edittxtbio').show();
                        $('#editbioinfo').html('Save');
                    }
                    else {

                        $.ajax({
                            url: "@Url.Content("~/UserDashBoard/UpdateBioInfo/")",
                            data: { 'bioInfo': $('#txtbio').val() },
                            type: "POST",
                            cache: false,
                            success: function (result) {
                                $('#lbltxtbio').show();
                                $('#edittxtbio').hide();
                                $('#editbioinfo').html('Edit');
                                window.location.reload();

                            }
                        });
                        }
                })





                    function ShowJCR(companyId, companyname) {
                        $('#visitcompanyid').val(companyId);
                        $('#visitcompanyname').val(companyname);
                        $('#JCRCOMPANYNAME').html(companyname + " Reqiurements");
                        $.ajax({
                            url: "@Url.Content("~/UserDashBoard/GlobalReqiurement/")",
                            data: { 'parentCcompanyId': companyId },
                            cache: false,
                            type: "GET",
                            datatype: 'json',
                            success: function (result) {

                                //alert($(result).find('#reqdocgrid').html());
                                $('#JCRGrid').html(result);
                                $('#JCRpopupdivouter').slideDown('fast');
                                $('#JCRpopupdivinner').slideDown('fast');
                            }
                        });
                    }
                    function getTdCount() {
                        var colCount = 0;
                        $('#tblJCRAudit tbody tr:nth-child(1) td').each(function () {
                            if ($(this).attr('colspan')) {
                                colCount += $(this).attr('colspan');
                            } else {
                                colCount++;
                            }
                        });
                        return colCount;
                    }
                    function getJCRAudit(id) {
                        var str = '';
                        $.ajax({
                            url: '@Url.Content("~/UserDashBoard/GetReqDocAudit/")',
                            data: { 'reqDocId': parseInt(id[0].ReqDocReceiverId) },
                            cache: false,
                            type: "POST",
                            success: function (result) {
                                $("#tblJCRAudit > tr").remove();
                                if (result.length > 0) {
                                    $('#tblJCRAudit').show();
                                    $(result).each(function (idx) {
                                        // $('#tblJCRAudit').show();
                                        var str1 = '';
                                        var str2 = '';
                                        if (result[idx].IsDocUploaded) {
                                            str1 = 'Yes';
                                        } else {
                                            str1 = 'No';
                                        }
                                        if (result[idx].IsCompleted == 1) {
                                            str2 = '<img src=@Url.Content("~/Content/images/check-in.png") height="25" style="padding-left:inherit" width="25" alt="Status" title="Uploaded" />';
                                        }
                                        if (result[idx].IsCompleted == 0) {
                                            str2 = 'In Progress';
                                        }
                                        if (result[idx].IsCompleted == 2) {
                                            str2 = ' <img src=@Url.Content("~/Content/images/delete.png") height="25" style="padding-left:inherit" width="25" alt="Status" title="No Upload" />';
                                        }
                                        var ModifyDate = '';
                                        var ExpirationDate = '';
                                        if (result[idx].ModifyDate != null) {
                                            ModifyDate = new Date(parseInt(result[idx].ModifyDate.substr(6)));
                                            ModifyDate = dateFormat(new Date(ModifyDate), 'mm/dd/yyyy')
                                        }
                                        if (result[idx].ExpirationDate != null) {
                                            ExpirationDate = new Date(parseInt(result[idx].ExpirationDate.substr(6)));
                                            ExpirationDate = dateFormat(new Date(ExpirationDate), 'mm/dd/yyyy')
                                        }
                                        str += ' <tr><td>' + ModifyDate + '</td><td>' + result[idx].VisitorName + '</td>  <td>' + result[idx].CompanyName + '</td> <td>' + result[idx].LisenceNumber + '</td>' +
                                            '<td>' + result[idx].PolicyNumber + '</td><td>' + ExpirationDate + '</td> <td>' + result[idx].StateName + '</td> <td>' + str1 + '</td><td>' + str2 + '</td></tr>';
                                    })
                                    $('#tblJCRAudit tbody').empty();
                                    $('#tblJCRAudit tbody').append(str);
                                    if (!id[0].IsCompanyReq) { $("#tblJCRAudit td:nth-child(" + 3 + "),th:nth-child(" + 3 + ")").hide(); }
                                    if (!id[0].IsPolicyReq) { $("#tblJCRAudit td:nth-child(" + 5 + "),th:nth-child(" + 5 + ")").hide(); }
                                    if (!id[0].IsLicenseReq) { $("#tblJCRAudit td:nth-child(" + 4 + "),th:nth-child(" + 4 + ")").hide(); }
                                    if (!id[0].IsExpDateReq) { $("#tblJCRAudit td:nth-child(" + 6 + "),th:nth-child(" + 6 + ")").hide(); }
                                    if (!id[0].IsStateReq) { $("#tblJCRAudit td:nth-child(" + 7 + "),th:nth-child(" + 7 + ")").hide(); }

                                    if (id[0].IsCompanyReq) { $("#tblJCRAudit td:nth-child(" + 3 + "),th:nth-child(" + 3 + ")").show(); }
                                    if (id[0].IsPolicyReq) { $("#tblJCRAudit td:nth-child(" + 5 + "),th:nth-child(" + 5 + ")").show(); }
                                    if (id[0].IsLicenseReq) { $("#tblJCRAudit td:nth-child(" + 4 + "),th:nth-child(" + 4 + ")").show(); }
                                    if (id[0].IsExpDateReq) { $("#tblJCRAudit td:nth-child(" + 6 + "),th:nth-child(" + 6 + ")").show(); }
                                    if (id[0].IsStateReq) { $("#tblJCRAudit td:nth-child(" + 7 + "),th:nth-child(" + 7 + ")").show(); }

                                    var colwidth = (100 / parseInt(getTdCount()));
                                    $('#tblJCRAudit tbody td').css('width', colwidth + '%');
                                    $('#tblJCRAudit thead th').css('width', colwidth + '%');
                                    //$('#tblJCRAudit thead,tbody').css('display', 'block');
                                    //$('#tblJCRAudit tbody').css('height', '90px');
                                    //$('#tblJCRAudit tbody').css('overflow-y', 'auto');



                                } else {
                                    $('#tblJCRAudit').hide();
                                }
                            }
                        });
                    }
                    function getGridData(id, gridtype, reqtype) {

                        $('#licandinstype').val(reqtype);
                        $('#btnMarkAsComplete_0').show();
                        $('#mandatoryerrormsg').html("");
                        $('#hidCurrentDocId').val(id);
                        $('#gridtypeid').val(gridtype);

                        $.ajax({
                            url: '@Url.Content("~/UserDashBoard/GetReceiverDoc/")',
                            data: { 'reqDocId': parseInt(id), 'type': parseInt(gridtype) },
                            cache: false,
                            type: "POST",
                            success: function (result) {
                                $('#JCRpopupdivouter').slideUp('fast');
                                $('#JCRpopupdivinner').slideUp('fast');
                                $('#divRequirementOuter').slideDown('fast');
                                $('#divRequirementInner').slideDown('fast');
                                $('.save').hide();
                                $('.view').show();

                                $('#txtExprationDate').val('');
                                $('#lbltitle_0').val(result[0].title);

                                if (reqtype == 1) {

                                    $('#div_lisence').hide();
                                    $('#div_State').hide();
                                    if (!result[0].IsPolicyReq) { $('#div_policy').hide(); }
                                    if (!result[0].IsCompanyReq) { $('#div_company').hide(); }
                                    if (result[0].IsPolicyReq) { $('#div_policy').show(); $('#txtPolicyNumber').val(result[0].PolicyNumber); }
                                    if (result[0].IsCompanyReq) { $('#div_company').show(); $('#txtCompanyName').val(result[0].CompanyName); }
                                }
                                else if (reqtype == 0) {

                                    $('#div_policy').hide();
                                    $('#div_company').hide();
                                    if (!result[0].IsLicenseReq) { $('#div_lisence').hide(); }

                                    if (!result[0].IsStateReq) { $('#div_State').hide(); }
                                    if (result[0].IsStateReq) { $('#div_State').show(); $('#StateAbbre').val(result[0].Stateabbre) }
                                    if (result[0].IsLicenseReq) { $('#div_lisence').show(); $('#txtLicenseNumber').val(result[0].LisenceNumber); }
                                }
                                else {
                                    // for JCR
                                    if (result[0].IsStateReq) { $('#div_State').show(); $('#StateAbbre').val(result[0].Stateabbre); }
                                    if (!result[0].IsPolicyReq) { $('#div_policy').hide(); }
                                    if (!result[0].IsCompanyReq) { $('#div_company').hide(); }
                                    if (result[0].IsPolicyReq) { $('#div_policy').show(); $('#txtPolicyNumber').val(result[0].PolicyNumber); }
                                    if (result[0].IsCompanyReq) { $('#div_company').show(); $('#txtCompanyName').val(result[0].CompanyName); }
                                    if (!result[0].IsLicenseReq) { $('#div_lisence').hide(); }
                                    if (result[0].IsLicenseReq) { $('#div_lisence').show(); $('#txtLicenseNumber').val(result[0].LisenceNumber); }
                                    if (!result[0].IsStateReq) { $('#div_State').hide(); }

                                    if (result[0].IsStateReq) { $('#div_State').show(); $('#StateAbbre').val(result[0].Stateabbre) }
                                    getJCRAudit(result);
                                }
                                if (!result[0].IsExpDateReq) { $('#div_Expiration').hide(); }
                                if (!result[0].UserPer) { $('#uploaddoc_0').hide(); }
                                if (result[0].IsExpDateReq) {
                                    $('#div_Expiration').show();
                                    if (result[0].ExpirationDate != '' && result[0].ExpirationDate != null) {
                                        var date = new Date(parseInt(result[0].ExpirationDate.substr(6)));
                                        $('#txtExprationDate').val(formattedDate(date));
                                    }
                                }

                                if (result[0].UserPer) { $('#uploaddoc_0').show(); }
                                if (result[0].IsCompleted == "1") {

                                    $('#btnMarkAsComplete_0').hide();
                                } else {
                                    $('#btnMarkAsComplete_0').show();

                                }
                                if (gridtype != 2) {
                                    if (!result[0].DNA) { $('#docfiles_0').show(); } else { $('#docfiles_0').hide(); }

                                }
                                var uploadDoc = '';
                                var SenderDocstr = '';
                                var ReceiverDocstr = '';
                                var ackStr = '';
                                var url1 = '';
                                var ack = '';
                                var chkupdocnameforsender = '';
                                var chkupdocnameforreceiver = '';
                                var count = 0;
                                $(result).each(function (idx) {
                                    uploadDoc = result[0].title + '_' + result[idx].DocSeqNo;
                                    if (result[idx].DocSeqNo != '') {
                                        url1 = result[idx].DocLoc;
                                        if (result[idx].DocSenderUserId != null && result[idx].DocSenderUserId != '') {
                                            if (uploadDoc != chkupdocnameforsender) {
                                                SenderDocstr += '<div style="border-radius: 5px 5px 5px 5px;  width:auto;height:auto;float:left;">' +
                                            '<a id="docfile_' + result[idx].DocSeqNo + '" href="' + url1 + '" target="_blank" title=' + uploadDoc + ' style="cursor:pointer;margin-left:1px;" >' + uploadDoc + '</a> &nbsp;' +
                                        '<input type="hidden" id="doccontentid_' + result[idx].DocSeqNo + '" value=' + result[idx].DocUploadTblId + ' /></div>';
                                                chkupdocnameforsender = uploadDoc;
                                            }
                                        }
                                        else {
                                            if (uploadDoc != chkupdocnameforreceiver) {
                                                ReceiverDocstr += '<div id="div_' + count + '" style="border-radius: 5px 5px 5px 5px;  width:auto;height:auto;float:left;">' +
                                                     '<a id="docfile_' + count + '" href="' + url1 + '" target="_blank" title=' + uploadDoc + ' style="cursor:pointer;margin-left:1px;" >' + uploadDoc + '</a> &nbsp;' +
                                                 '<img id=' + count + ' src="@Url.Content("~/Content/images/cross-button.png")" style="cursor:pointer;" title="remove document" onclick="deletedoc(' + count + ')"/><input type="hidden" id="doccontentid_' + count + '" value=' + result[idx].DocUploadTblId + ' /></div>';
                                                chkupdocnameforreceiver = uploadDoc;
                                                count++;
                                            }
                                        }
                                    }
                                    if (result[idx].Acknoledgment != '' && result[idx].Acknoledgment != null) {
                                        // alert(ack + "fgdf " + result[idx].Acknoledgment)
                                        if (result[idx].Acknoledgment != ack) {
                                            if (result[idx].IsCompleted == "1") {

                                                ackStr += '<div><label><input style="margin-top:2px;" checked="checked" type="checkbox" id="chkReqAck_' + idx + '" /><span id="reqcon_0_' + idx + '" style="margin-left:5px;vertical-align:text-top;">' + result[idx].Acknoledgment + '</span></label></div>';
                                            } else {

                                                ackStr += '<div><label><input style="margin-top:2px;" type="checkbox" id="chkReqAck_' + idx + '" /><span id="reqcon_0_' + idx + '" style="margin-left:5px;vertical-align:text-top;">' + result[idx].Acknoledgment + '</span></label></div>';
                                            }

                                        }
                                        else {
                                            ack = result[idx].Acknoledgment;
                                        }
                                    }
                                })
                                $('#hidIsCompleted').val(result[0].IsCompleted);
                                if ($('#hidIsCompleted').val() == 1) {
                                    $('#btnsave_0').css("margin-right", "2.5%");
                                }
                                else {
                                    $('#btnsave_0').css("margin-right", "0.5%");
                                }


                                $("#docfiles_0").empty();
                                $("#userdocfiles_0").empty();
                                $("#docfiles_0").html(SenderDocstr);
                                $("#userdocfiles_0").html(ReceiverDocstr);
                                $('#div_AckAppend').empty();
                                $('#div_AckAppend').append(ackStr);
                                RemoveDuplicate('.removeDub span');

                            }
                        });
                    }


                    function RemoveDuplicate(id) {
                        var seen = {};
                        $(id).each(function () {
                            var txt = $(this).html();
                            if (seen[txt])
                                $(this).parent().remove();
                            else
                                seen[txt] = true;
                        });
                    }
                    $('#btnJCRclose').click(function () {
                        window.location.reload();
                        $('#JCRpopupdivouter').slideUp('fast');
                        $('#JCRpopupdivinner').slideUp('fast');
                    })

                    function MarkDocComplete() {
                        if (validateAcknoledgment()) {
                            SaveReqDoc(1);

                        }
                    }
                    function setacks() {
                        var reqaction = '';
                        $('#Stbreqaction tr').each(function (index) {

                            if ($(this).find("#gchk_" + index).is(":checked")) {
                                var req = $(this).find("#greqcon_" + index).val().trim();
                                if (reqaction != '') {
                                    reqaction = reqaction + "$" + req;
                                }
                                else {
                                    reqaction = req;
                                }
                            }

                        })


                        $('#acks').val(reqaction);
                    }

                    function SaveReqDoc(complete) {

                        if ($('#gridtypeid').val() != 2 && $('#gridtypeid').val() != 3) { SaveJCRDetails(complete); }
                        else { SaveLicAndInsDetails(complete); }

                    }
                    function SaveLicAndInsDetails(complete) {
                        if (PopUpValidateSave()) {
                            setacks();
                            var title = '';
                            if ($('.view').css('display') == 'none') {

                                title = $('#lbltitleaddcre').val();
                            }
                            else {

                                title = $('#lbltitle_0').val();

                            }
                            var docLocation = '';
                            var docSequence = '';
                            $('#userdocfiles_0 a').each(function () {
                                docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
                            });
                            docLocation = docLocation.slice(0, -1);
                            var IsCompleteVar = 0;
                            if (complete == 0) {
                                if ($('#hidIsCompleted').val() == 2) {
                                    IsCompleteVar = complete;
                                }
                                else {
                                    IsCompleteVar = $('#hidIsCompleted').val()
                                }
                            }
                            if (complete == 1) {
                                IsCompleteVar = 1;
                            }
                            $.ajax({
                                type: "POST",
                                url: '@Url.Content("~/UserDashBoard/SetReceiverLicAndInsDetails")',
                                cache: false,
                                data: JSON.stringify({
                                    CompanyName: $('#txtCompanyName').val(),
                                    LisenceNumber: $('#txtLicenseNumber').val(),
                                    PolicyNumber: $('#txtPolicyNumber').val(),
                                    ExpirationDate: $('#txtExprationDate').val(),
                                    StateAbbre: $('#StateAbbre').val(),
                                    ReqDocId: parseInt($('#hidCurrentDocId').val()),
                                    DocLoc: docLocation,
                                    IsCompleted: IsCompleteVar,
                                    Type: $('#gridtypeid').val(),
                                    Ack: $('#acks').val(),
                                    Title: title,
                                    LiceAndInsType: $('#licandinstype').val()
                                }),

                                contentType: 'application/json; charset=utf-8',
                                success: function (data) {
                                    if (data == -1) {
                                        $('#mandatoryerrormsg').show();
                                        $('#mandatoryerrormsg').html("Please verify again.License details is not correct.");
                                    }
                                    else {
                                        window.location.reload();
                                    }

                                }

                            });
                        }
                    }
                    function SaveJCRDetails(complete) {
                        if (PopUpValidateSave()) {
                            var docLocation = '';
                            var docSequence = '';
                            $('#userdocfiles_0 a').each(function () {
                                docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
                            });
                            docLocation = docLocation.slice(0, -1);

                            var IsCompleteVar = 0;
                            if (complete == 0) {
                                if ($('#hidIsCompleted').val() == 2) {
                                    IsCompleteVar = complete;
                                }
                                else {
                                    IsCompleteVar = $('#hidIsCompleted').val()
                                }
                            }
                            if (complete == 1) {
                                IsCompleteVar = 1;
                            }
                            $.ajax({
                                type: "POST",
                                url: '@Url.Content("~/UserDashBoard/SetReceiverReqDocDetails")',
                                cache: false,
                                data: JSON.stringify({
                                    CompanyName: $('#txtCompanyName').val(),
                                    LisenceNumber: $('#txtLicenseNumber').val(),
                                    PolicyNumber: $('#txtPolicyNumber').val(),
                                    ExpirationDate: $('#txtExprationDate').val(),
                                    StateAbbre: $('#StateAbbre').val(),
                                    ReqDocId: parseInt($('#hidCurrentDocId').val()),
                                    DocLoc: docLocation,
                                    IsCompleted: IsCompleteVar,
                                }),

                                contentType: 'application/json; charset=utf-8',
                                success: function (data) {

                                    $('#divRequirementOuter').slideUp('fast');
                                    $('#divRequirementInner').slideUp('fast');
                                    $('#JCRpopupdivouter').slideDown('fast');
                                    $('#JCRpopupdivinner').slideDown('fast');
                                    ShowJCR($('#visitcompanyid').val(), $('#visitcompanyname').val());

                                }

                            });
                        }
                    }

                    function PopUpValidateSave() {
                        var CompanyName = $('#txtCompanyName');
                        var LisenceNumber = $('#txtLicenseNumber');
                        var PolicyNumber = $('#txtPolicyNumber');
                        var ExpirationDate = $('#txtExprationDate');
                        var StateId = $('#StateAbbre');
                        var result1 = result2 = result3 = result4 = result5 = result6 = false;
                        if ($('#div_Expiration').is(':visible') && ExpirationDate.val() == '') {
                            ExpirationDate.addClass('errorClass');
                            result1 = false;
                        } else {
                            ExpirationDate.removeClass('errorClass');
                            result1 = true;
                        }
                        if ($('#div_company').is(':visible') && CompanyName.val().trim() == '') {
                            CompanyName.addClass('errorClass');
                            result2 = false;
                        }
                        else {
                            CompanyName.removeClass('errorClass');
                            result2 = true;
                        }
                        if ($('#div_lisence').is(':visible') && LisenceNumber.val().trim() == '') {
                            LisenceNumber.addClass('errorClass');
                            result3 = false;

                        }
                        else {
                            LisenceNumber.removeClass('errorClass');
                            result3 = true;
                        }
                        if ($('#lbltitleaddcre').is(':visible') && $('#lbltitleaddcre').val().trim() == '') {
                            $('#lbltitleaddcre').addClass('errorClass');
                            result6 = false;

                        }
                        else {
                            $('#lbltitleaddcre').removeClass('errorClass');
                            result6 = true;
                        }

                        if ($('#div_policy').is(':visible') && PolicyNumber.val().trim() == '') {
                            PolicyNumber.addClass('errorClass');
                            result4 = false;
                        } else {
                            PolicyNumber.removeClass('errorClass');
                            result4 = true;
                        }

                        if ($('#div_State').is(':visible') && StateId.val() == '') {
                            StateId.addClass('errorClass');
                            result5 = false;

                        } else {
                            StateId.removeClass('errorClass');
                            result5 = true;
                        }
                        if ($('#licandinstype').val() == 1) {
                            if (result1 && result2 && result4) {
                                return true;
                            }
                            else {
                                $('#mandatoryerrormsg').show();
                                return false;
                            }
                        }
                        else if ($('#licandinstype').val() == 0) {
                            if (result1 && result3 && result5) {
                                return true;
                            }
                            else {
                                $('#mandatoryerrormsg').show();
                                return false;
                            }
                        }
                        else if ($('#gridtypeid').val() == 3) {
                            if (result1 && result2 && result3 && result4 && result5 && result6) {
                                return true;
                            }
                            else {
                                $('#mandatoryerrormsg').show();
                                return false;
                            }
                        }
                        else {
                            if (result1 && result2 && result3 && result4 && result5) {
                                return true;
                            }
                            else {
                                $('#mandatoryerrormsg').show();
                                return false;
                            }
                        }

                        // return (result1 && result2 && result3 && result4 && result5);
                    }






                    function publishdoc() {

                        var divId = "uploadedprofLicfiles";
                        var typeid = $('#gridtypeid').val();
                        //if (!($('#gridtypeid').val().indexOf('$') === -1)) {
                        //    divId = "userdocfiles1_0";
                        //    typeid = 4
                        //}
                        //else
                        if (typeid == 3) {
                            divId = "uploadedinsdocfiles";
                        }
                        else if (typeid == 4) {
                            divId = "uploadedaddreqdocfiles";
                        }
                        var count = $('#' + divId + ' div').length;
                        var imgId = count
                        PublishUploadedFile('@Model.HostURL@Model.Globauploadedcontentpath/', '@Model.HostURL@Model.Specificuploadedcontentpath/',
        '@Model.HostURL@Model.ProfLicuploadedcontentpath/', '@Model.HostURL@Model.Insuranceuploadedcontentpath/',
        '@Model.HostURL@Model.AdditionalRequploadedcontentpath/', ROOT, divId, typeid, imgId);

                        //$('#lbltitleaddcre').attr("disabled", "disabled");
                    }


                    //End Upload Document

                    //Start Uploade Document
                    function readdocURL(input, id) {
                        var inputclass = $(input).attr("class");
                        //var titleval = $('#lbltitle_0').val();
                        //var titleid = "lbltitle_0";

                        //if (inputclass == "bGChkFileUpload") {
                        //    titleid = "lblBGtitle";
                        //    titleval = $('#lblBGtitle').val()
                        //} else if ($('#gridtypeid').val() == 3) {
                        //    titleid = "lbltitleaddcre";
                        //    titleval = $('#lbltitleaddcre').val()
                        //}
                        var titleval = $('#profLicTitle').html();
                        var titleid = "profLicTitle";
                        if ($('#gridtypeid').val() == 3) {
                            titleid = "insTitle";
                            titleval = $('#insTitle').html()
                        }
                        if ($('#gridtypeid').val() == 4) {
                            titleid = "addiReqTitle";
                            titleval = $('#addiReqTitle').html()
                        }

                        titleval = $('#gridtypeid').val() + titleval;
                        var setFileUrl = "@Url.Content("~/UserDashBoard/SettheEmpDocName/")";
        //alert(setFileUrl);
        ReadUploadedFIle(input, id, ROOT, titleval, titleid, setFileUrl, 1);

    }
    //Create Cookies for title name of file uploaded
    function createcookie(value) {

        $.ajax({
            url: '@Url.Content("~/UserDashBoard/CreateEraseTitleNameCookie/")',
            data: { 'name': value, 'type': 0 },
            cache: false,
            type: "POST",
            success: function (result) {
                setTimeout(function () {
                    $('#btnpublishdoc').click();
                }, 1000);
            }
        });

    }
   @* $(function () {
        $('#uploadfilebtn').fileupload({
            url: '@Url.Content("~/UserDashBoard/UploadEmpReqDoc")',
            //data:{'title':$('#'+ $('#lbltitleidid').val()).val()},
            dataType: "json",
            limitConcurrentUploads: 1,
            sequentialUploads: true,
            progressInterval: 100,
            maxChunkSize: 10000,
            add: function (e, data) {
                $('#btnpublishdoc').click(function () {
                    data.submit();

                });
            },
            done: function (e, data) {
                $('#doccircle').progressCircle({
                    nPercent: 100,
                    showPercentText: true,
                    circleSize: 300,
                    thickness: 3
                });

                setTimeout(function () {

                    //added document name

                    var fileurl = '@Model.HostURL@Model.Globauploadedcontentpath/' + $('#docfile').val() + '';
                    if ($('#gridtypeid').val() == 1) {
                        fileurl = '@Model.HostURL@Model.Specificuploadedcontentpath/' + $('#docfile').val() + '';
                    }
                    else if ($('#gridtypeid').val() == 2) {
                        fileurl = '@Model.HostURL@Model.ElecLicAndnsuploadedcontentpath/' + $('#docfile').val() + '';
                    }
                    else if ($('#gridtypeid').val() == 3) {
                        fileurl = '@Model.HostURL@Model.NonElecLicAndInsuploadedcontentpath/' + $('#docfile').val() + '';
                    }
                    else if (!($('#gridtypeid').val().indexOf('$') === -1)) {

                        fileurl = '@Model.HostURL@Model.BackgroundCheckDocPath/' + $('#docfile').val() + '';
                    }

                    var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";

                    $('#pdfdiv').attr('src', url1);

                    $('#loaddiv').hide();
                    $('#btnpublish').show();
                    $('#pdfdiv').show();

                    $('#doccircle').progressCircle({
                        nPercent: 0,
                        showPercentText: true,
                        circleSize: 300,
                        thickness: 3
                    });

                }, 1000);

            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#doccircle').progressCircle({
                    nPercent: progress,
                    showPercentText: true,
                    circleSize: 300,
                    thickness: 3
                });
                $('#progressfile').css('width', progress + '%');
            },
            progress: function (e, data) {

                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#doccircle').progressCircle({
                    nPercent: progress,
                    showPercentText: true,
                    circleSize: 300,
                    thickness: 3
                });

            },

        });
    });*@

    function showuploadbtn(id) {
        var id = id.split('_')[1];
        $('#uploaddoc_' + id).hide();
        $('.uploadbtn_' + id).show();
        $('.uploadfilebtn_' + id).show();
        $('#valmsg_' + id).show();
    }
    function validateAcknoledgment() {
        var selected = false;
        var validsave = PopUpValidateSave();
        if ($('#div_AckAppend input[type=checkbox]').length > 0) {
            $('#div_AckAppend input[type=checkbox]').each(function () {
                if ($(this).is(':checked')) {
                    $(this).css('outline-color', '');
                    $(this).css('outline-style', '');
                    $(this).css('outline-width', '');
                    selected = true;
                } else {
                    $(this).css('outline-color', 'red');
                    $(this).css('outline-style', 'solid');
                    $(this).css('outline-width', 'thin');
                    selected = false;
                }
            });
        } else {
            selected = true;
        }
        return (selected && validsave);

    }
    function formattedDate(date) {
        var d = new Date(date || Date.now()),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [month, day, year].join('/');
    }


    $('#btnbioinfo').click(function () {
        $('#BioInfoPopupouter').slideDown("fast");
        $('#BioInfoPopupinner').slideDown("fast");
    })
    $('#btnbioclose').click(function () {
        $('#BioInfoPopupouter').slideUp("fast");
        $('#BioInfoPopupinner').slideUp("fast");
    })
    function closeGridPopup(type) {
        $('#tblJCRAudit tbody').empty();
        if (type == 0) {
            if ($('#gridtypeid').val() == 0 || $('#gridtypeid').val() == 1) {
                $('#JCRpopupdivouter').slideDown('fast');
                $('#JCRpopupdivinner').slideDown('fast');
            }
            $('#divRequirementOuter').slideUp('fast');
            $('#divRequirementInner').slideUp('fast');
        }
        else {
            $('#editaccesspopupdivinner').slideUp('fast');
            $('#editaccesspopupdivouter').slideUp('fast');

        }
    }
    $('#editaccesslnk').click(function () {
        $('#editaccesspopupdivinner').slideDown('fast');
        $('#editaccesspopupdivouter').slideDown('fast');
    })
    //$('#btnaddcre').click(function () {
    //    ResetJcrAanLicInsPopup();
    //    $('#div_lisence').show();
    //    $('#div_State').show();
    //    $('#div_policy').hide();
    //    $('#div_company').hide();
    //    $('#btnMarkAsComplete_0').hide();
    //    $('#gridtypeid').val(3);
    //    $('#divRequirementOuter').slideDown('fast');
    //    $('#divRequirementInner').slideDown('fast');
    //    $('.save').show();
    //    $('#head').html("Create License");
    //    $('.view').hide();

    //})
    function ResetJcrAanLicInsPopup() {
        $('#lbltitleaddcre').val('');
        $('#txtExprationDate').val('');
        $('#txtPolicyNumber').val('');
        $('#txtCompanyName').val('');
        $('#txtLicenseNumber').val('');
        $('#StateAbbre').val('');
        $('#docfiles_0').html('');
        $('#userdocfiles_0').html('');
        $('#Stbreqaction tr').each(function (index) {
            if (index != 0) {
                $(this).remove();
            }
        });
    }
    function validatereqaction() {
        var ret = false;
        $('#Stbreqaction tr').each(function (index) {
            //if (index != 0) {
            var lnk = $(this).find('input[class="span12"]');

            if (lnk.val().trim() == null || lnk.val().trim() == "") {
                lnk.addClass('errorClass');
                ret = false;
            }
            else if (lnk.val().trim() != null || lnk.val().trim() != "") {
                lnk.removeClass('errorClass');
                ret = true;


            }
            // }

            // else { ret = true; }

        });

        return ret;
    }
    function RemoveAction(id) {
        var idindex = id.split('_')[1];

        if ($('#tbreqaction tr').length == 1) {
            $('#greqcon_' + idindex + '').val('');
        }
        else {


            var actionId = $('#reqconid_' + idindex + '').val();
            $('#greqcon_' + idindex + '').closest('tr').remove();

            if (actionId != 0 && actionId != undefined) {
                $(this).remove();

            }
        }
    }
    //Blink Button If any thing is Incomplete 
    function blink(btn) {
        blink1(btn);
    }
    function blink1(btn1) {
        if (btn1.attr('id') == "blinkservices" || btn1.attr('id') == "blinkcoveragearea" || btn1.attr('id') == "blinkeditvisibility") {
            btn1.css({ "background-color": "#0044CC" });
            btn1.css({ "background-image": "linear-gradient(to bottom, #0088CC, #0044CC)" });
            btn1.css({ "border-color": "#bbbbbb" });
        }
        else {
            btn1.css({ "background-color": "#F89406" });
            btn1.css({ "background-image": "linear-gradient(to bottom, #F89406, #F89406)" });
        }
        setTimeout(function () { blink2(btn1); }, 750);
    }
    function blink2(btn2) {
        if (btn2.attr('id') == "blinkservices" || btn2.attr('id') == "blinkcoveragearea" || btn2.attr('id') == "blinkeditvisibility") {
            btn2.css({ "background-color": "#0044CC !important" });
            btn2.css({ "background-image": "linear-gradient(to bottom, #e1e1e1, #bbbbbb)" });
            btn2.css({ "border-color": "#bbbbbb" });
        }
        else {
            btn2.css({ "background-color": "#F89406 !important" });
            btn2.css({ "background-image": "linear-gradient(to bottom, #FBB450, #F89406)" });
        }
        setTimeout(function () { blink1(btn2); }, 750);
    }
    blink($('#blinkservices'));
    blink($('#blinkcoveragearea'));
    blink($('#blinkeditvisibility'));
    blink($('.blinkJCR'));
    blink($('.BlinkAddCre'));
    blink($('.LICINSBlink'));

    function EditVisibility() {
        $('#editvisibilitypopupdivinner').slideDown('fast');
        $('#editvisibilitypopupdivouter').slideDown('fast');
        GetICClientPermissions();
    }
    $('#btneditvisibilityclose').click(function () {
        $('#editvisibilitypopupdivinner').slideUp('fast');
        $('#editvisibilitypopupdivouter').slideUp('fast');
    })
    $('.editVisibility').change(function () {
        if ($('#showSpecificClient').prop("checked") == true) {
            $('#ClientList').show();
        } else {
            $('#ClientList').hide();
        }
    })
    $('#btnSaveEditVisibility').click(function () {

        var isVisible = 1;
        var visibleTo = '';
        $('.chkclient').each(function () {
            if ($(this).prop("checked")) {
                if (visibleTo == '') {
                    visibleTo = $(this).val();
                } else {
                    visibleTo = visibleTo + "," + $(this).val();
                }
            }
        })
        if ($('#showNoOneClient').prop("checked")) {
            isVisible = 0;
            visibleTo = '';
        }
        if ($('#showAllClient').prop("checked")) {
            visibleTo = 'All';
        }
        $.ajax({
            type: "POST",
            url: '@Url.Content("~/UserDashBoard/SetICClientPermissions/")',
            data: { isVisible: parseInt(isVisible), visibleTo: visibleTo },
            success: function (result) {
                $('#editvisibilitypopupdivinner').slideUp('fast');
                $('#editvisibilitypopupdivouter').slideUp('fast');
                window.location.reload();
            }
        });
    })
    function GetICClientPermissions() {
        $.ajax({
            type: "GET",
            url: '@Url.Content("~/UserDashBoard/GetICClientPermissions/")',
            success: function (result) {
                // alert(result);

                $(result).each(function (index) {

                    // alert(result[index].VisibleTo);
                    if (!result[index].IsVisible == true) {

                        $('#showNoOneClient').prop("checked", true);
                        $('#ClientList').hide();
                    }
                    else if (result[index].VisibleTo == 'All') {

                        $('#showAllClient').prop("checked", true);
                        $('#ClientList').hide();
                    }
                    else {

                        $('#ClientList').show();
                        $('#showSpecificClient').prop("checked", true);
                        $('.chkclient').each(function () {
                            if (!(result[index].VisibleTo.indexOf($(this).val()) === -1)) {
                                $(this).prop("checked", true);
                            }
                            else {
                                $(this).prop("checked", false);
                            }
                        })
                    }
                });
                SetSelectAllChk();
            }
        });
    }
    $('#SelectAllClient').change(function () {
        if ($(this).prop("checked")) {
            $('.chkclient').each(function () {
                $(this).prop("checked", true);
            })
        }
        else {
            $('.chkclient').each(function () {
                $(this).prop("checked", false);
            })
        }
    })
    function SetSelectAllChk() {
        var totalCount = $('.chkclient').length;
        var count = 0;
        $('.chkclient').each(function () {
            if ($(this).prop("checked") == true) {
                count = count + 1;
            }
        })
        if (totalCount != count) {
            $('#SelectAllClient').prop("checked", false);
        } else {
            $('#SelectAllClient').prop("checked", true);
        }
    }



    function GetAckDetails(type, tblMapId) {
        $.ajax({
            url: '/JobComplianceRequirement/GetAckByLicInsId',
            cache: false,
            type: 'GET',
            data: {
                tblMapId: tblMapId,
                type: type
            },
            async: true,
            success: function (result) {
                result = $.parseJSON(result);
                var tblId = "licenseAck";
                if (type == 1) {
                    tblId = "insuranceAck";
                }
                else if (type == 2) {
                    tblId = "additionalReq";
                }
                SetAck(result, tblId);
            },
            error: function (result) { }
        });
    }
    function SetAck(result, tblId) {
        var str = '';
        $('#' + tblId + 'Tbl').empty();
        if (result.length > 0) {
            $.each(result, function (id, item) {
                //var id = "";
                //id = $('#' + tblId + 'Tbl tr').length;
                str = str + '<tr><td><input id="' + tblId + 'Chk_' + id + '" type="checkbox" style="margin-top:-13px;" checked="checked" /> </td>' +
          '<td><input type="text" disabled="disabled" id="' + tblId + 'Txt_' + id + '" class="span12" value="' + item + '" style="margin-top:-1px;"/></td>' +
          '<td><input type="hidden" id="' + tblId + 'Hid_' + id + '" value="0"/></td></tr>'

            });
        }
        else {
            $('#' + tblId + 'Tbl').append("<tr><td>No Acknowledgements</td></tr>");
        }
        $('#' + tblId + 'Tbl').append(str);
    }
    function validateCompliances(type) {

        if (type == 0) {
            var licNumber = true;
            var state = true;
            var expDate = true;
            if ($('#profLicNumber').val().trim() == "") {
                $('#profLicNumber').addClass("errorClass");
                licNumber = false;
            }
            else {
                $('#profLicNumber').removeClass("errorClass");
            }

            if ($('#ddState option:selected').text().trim() == "-- Select --") {
                $('#ddState').addClass("errorClass");
                state = false;
            }
            else {
                $('#ddState').removeClass("errorClass");
            }
            if ($('#licExpirationDate').val() == "") {
                $('#licExpirationDate').addClass("errorClass");
                expDate = false;
            }
            else {
                $('#licExpirationDate').removeClass("errorClass");
            }
            if (licNumber && state && expDate) {
                return true;
            }
            else {
                return false;
            }
        }
        else if (type == 1) {
            var driverLicNumber = true;
            var driLicState = true;
            var driExpDate = true;
            if ($('#profLicNumber').val().trim() == "") {
                $('#profLicNumber').addClass("errorClass");
                licNumber = false;
            }
            else {
                $('#profLicNumber').removeClass("errorClass");
            }
            if ($('#ddDriverState option:selected').text().trim() == "-- Select --") {
                $('#ddDriverState').addClass("errorClass");
                driLicState = false;
            }
            else {
                $('#ddDriverState').removeClass("errorClass");
            }
            if ($('#licExpirationDate').val() == "") {
                $('#licExpirationDate').addClass("errorClass");
                driExpDate = false;
            }
            else {
                $('#licExpirationDate').removeClass("errorClass");
            }
            if (driverLicNumber && driLicState && driExpDate) {
                return true;
            }
            else { return false; }
        }
        else if (type == 2) {
            var policyNumber = true;
            var insExpirationDate = true;
            var companyName = true;
            var signOcc = true;
            var aggAmt = true;
            if ($('#policyNumber').val().trim() == "") {
                policyNumber = false;
            }
            else {
                $('#policyNumber').removeClass("errorClass");
            }
            if ($('#insExpirationDate').val().trim() == "") {
                insExpirationDate = false;
            }
            else {
                $('#insExpirationDate').removeClass("errorClass");
            }
            if ($('#companyName').val() == "") {
                companyName = false;
            }
            else {
                $('#companyName').removeClass("errorClass");
            }
            if ($('#signOcc').val() == "") {
                signOcc = false;
            }
            else {
                $('#signOcc').removeClass("errorClass");
            }
            if ($('#aggAmt').val() == "") {
                aggAmt = false;
            }
            else {
                $('#aggAmt').removeClass("errorClass");
            }
            if (policyNumber && insExpirationDate && companyName && signOcc && aggAmt) {
                return true;
            }
            else { return false; }
        }
    }
    function EditProfIns(type) {
        var docLocation = '';
        if (type == 0) {
            $('#uploadedprofLicfiles a').each(function () {
                docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
            });
            //alert(docLocation);
            if ($('#IsDriverLic').val() == 0) {
                if (validateCompliances(0)) {
                    $.ajax({
                        url: '@Url.Content("~/JobComplianceRequirement/EditJobComplianceReqiurementsOnProfile")',
                        cache: false,
                        type: 'POST',
                        data: JSON.stringify({
                            LicenseNumber: $('#profLicNumber').val(),
                            StateId: parseInt($('#ddState').val()),
                            ExpirationDate: $('#licExpirationDate').val(),
                            Type: 0,
                            LicInsMapId: $('#hid_profLicMapId').val(),
                            ProfLicTblId: $('#hid_profLicMasterId').val(),
                            UploadedDocs: docLocation
                        }),
                        contentType: 'application/json; charset=utf-8',
                        async: true,
                        success: function (data) {
                            // alert($('#parentCompanyId').val());
                            if ($('#parentCompanyId').val() != null || $('#parentCompanyId').val() != '') {
                                ShowClientViewByIC($('#parentCompanyId').val())
                            } else {
                                ShowClientViewByIC('')
                            }
                            ResetProfLicAndInsAndAddiReq(0);
                        },
                        error: function (data) { }
                    });
                }
            }
            else {
                if (validateCompliances(1)) {
                    $.ajax({
                        url: '@Url.Content("~/JobComplianceRequirement/EditJobComplianceReqiurementsOnProfile")',
                        cache: false,
                        type: 'POST',
                        data: JSON.stringify({
                            LicenseNumber: $('#profLicNumber').val(),
                            StateAbbre: $('#ddDriverState').val(),
                            ExpirationDate: $('#licExpirationDate').val(),
                            Type: 3,
                            LicInsMapId: $('#hid_profLicMapId').val(),
                            ProfLicTblId: $('#hid_profLicMasterId').val(),
                            UploadedDocs: docLocation
                        }),
                        contentType: 'application/json; charset=utf-8',
                        async: true,
                        success: function (data) {
                            // alert($('#parentCompanyId').val());
                            if ($('#parentCompanyId').val() != null || $('#parentCompanyId').val() != '') {
                                ShowClientViewByIC($('#parentCompanyId').val())
                            } else {
                                ShowClientViewByIC('')
                            }
                            ResetProfLicAndInsAndAddiReq(0);
                        },
                        error: function (data) { }
                    });
                }
            }
        }
        else if (type == 1) {
            $('#uploadedinsdocfiles a').each(function () {
                docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
            });
            if (validateCompliances(2)) {
                $.ajax({
                    url: '@Url.Content("~/JobComplianceRequirement/EditJobComplianceReqiurementsOnProfile")',
                    cache: false,
                    type: 'POST',
                    data: JSON.stringify({
                        PolicyNumber: $('#policyNumber').val(),
                        ExpirationDate: $('#insExpirationDate').val(),
                        CompanyName: $('#companyName').val(),
                        Aggregate: parseFloat($('#aggAmt').val()),
                        SingleOccurance: parseFloat($('#signOcc').val()),
                        Type: 1,
                        LicInsMapId: $('#hid_InsMapId').val(),
                        ProfLicTblId: $('#hid_profLicMasterId').val(),
                        UploadedDocs: docLocation
                    }),
                    contentType: 'application/json; charset=utf-8',
                    async: true,
                    success: function (data) {
                        ///alert($('#parentCompanyId').val());
                        if ($('#parentCompanyId').val() != null || $('#parentCompanyId').val() != '') {
                            ShowClientViewByIC($('#parentCompanyId').val())
                        } else {
                            ShowClientViewByIC('')
                        }
                        ResetProfLicAndInsAndAddiReq(1);
                    },
                    error: function (data) { }
                });
            }
        }
        else if (type == 2) {
            $('#uploadedaddreqdocfiles a').each(function () {
                docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
            });
            //alert(docLocation + "  " + $('#hid_profLicMasterId').val());
            $.ajax({
                url: '@Url.Content("~/JobComplianceRequirement/EditJobComplianceReqiurementsOnProfile")',
            cache: false,
            type: 'POST',
            data: JSON.stringify({
                Type: 2,
                LicInsMapId: $('#hid_addReqMapId').val(),
                ProfLicTblId: $('#hid_profLicMasterId').val(),
                UploadedDocs: docLocation
            }),
            contentType: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                //alert($('#parentCompanyId').val());
                if ($('#parentCompanyId').val() != null || $('#parentCompanyId').val() != '') {
                    ShowClientViewByIC($('#parentCompanyId').val())
                } else {
                    ShowClientViewByIC('')
                }
                ResetProfLicAndInsAndAddiReq(2);
            },
            error: function (data) { }
        });
    }
}

function ApprovedStatus(type, status) {
    var docStatus = 'Pass';
    if (status == 1) {
        docStatus = 'Fail';
    }
    var LicInsMapId = $('#hid_profLicMapId').val();
    if (type == 1) {
        LicInsMapId = $('#hid_InsMapId').val();
    }
    else if (type == 2) {
        LicInsMapId = $('#hid_addReqMapId').val();
    }
    if ($('#IsDriverLic').val() == 1) {
        type = 3;
    }
    $.ajax({
        url: '@Url.Content("~/JobComplianceRequirement/ApprovedStatus")',
        cache: false,
        type: 'POST',
        data: JSON.stringify({
            OperationType: parseInt(type),
            LicInsMapId: LicInsMapId,
            ProfLicTblId: $('#hid_profLicMasterId').val(),
            Status: docStatus
        }),
        contentType: 'application/json; charset=utf-8',
        async: true,
        success: function (data) {
            window.location.reload();
            //// alert($('#parentCompanyId').val());
            //if ($('#parentCompanyId').val() != null || $('#parentCompanyId').val() != '') {
            //    ShowClientViewByIC($('#parentCompanyId').val())
            //} else {
            //    ShowClientViewByIC('')
            //}
            //ResetProfLicAndInsAndAddiReq(type);
        },
        error: function (data) { }
    });
}

//professional Lic Upload
$(function () {
    $('#uploadfileprofLicbtn').fileupload({
        url: '@Url.Content("~/UserDashBoard/UploadEmpReqDoc")',
        dataType: "json",
        limitConcurrentUploads: 1,
        sequentialUploads: true,
        progressInterval: 100,
        maxChunkSize: 10000,
        add: function (e, data) {
            $('#btnpublishdoc').click(function () {
                data.submit();

            });
        },
        done: function (e, data) {
            $('#doccircle').progressCircle({
                nPercent: 100,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

            setTimeout(function () {
                // alert($('#gridtypeid').val());
                //added document name

                @*      var fileurl = '@Model.HostURL@Model.Globauploadedcontentpath/' + $('#docfile').val() + '';
                if ($('#gridtypeid').val() == 1) {
                    fileurl = '@Model.HostURL@Model.Specificuploadedcontentpath/' + $('#docfile').val() + '';
                }
                else*@
                var fileurl = '';
                if ($('#gridtypeid').val() == 2) {
                    fileurl = '@Model.HostURL@Model.ProfLicuploadedcontentpath/' + $('#docfile').val() + '';
                }
                var ext = fileurl.substr(fileurl.lastIndexOf('.') + 1);

                if ($('#IsDriverLic').length) {
                    if ($('#IsDriverLic').val() == 1) {
                        if (ext == "jpg" || ext == "jpeg" || ext == "png" || ext == "tif" || ext == "bmp") {
                            $('#pdfdiv').attr('src', fileurl);
                        }
                        else {
                            var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";
                            $('#pdfdiv').attr('src', url1);
                        }
                    }
                    else {
                        var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";

                        $('#pdfdiv').attr('src', url1);
                    }
                }
                else {
                    var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";

                    $('#pdfdiv').attr('src', url1);
                }

                $('#loaddiv').hide();
                $('#btnpublish').show();
                $('#pdfdiv').show();

                $('#doccircle').progressCircle({
                    nPercent: 0,
                    showPercentText: true,
                    circleSize: 300,
                    thickness: 3
                });

            }, 1000);

        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });
            $('#progressfile').css('width', progress + '%');
        },
        progress: function (e, data) {

            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

        },

    });
});
$(function () {
    $('#uploadfileinsbtn').fileupload({
        url: '@Url.Content("~/UserDashBoard/UploadEmpReqDoc")',
        dataType: "json",
        limitConcurrentUploads: 1,
        sequentialUploads: true,
        progressInterval: 100,
        maxChunkSize: 10000,
        add: function (e, data) {
            $('#btnpublishdoc').click(function () {
                data.submit();

            });
        },
        done: function (e, data) {
            $('#doccircle').progressCircle({
                nPercent: 100,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

            setTimeout(function () {
                // alert($('#gridtypeid').val());
                //added document name

                @*                var fileurl = '@Model.HostURL@Model.Globauploadedcontentpath/' + $('#docfile').val() + '';
                if ($('#gridtypeid').val() == 1) {
                    fileurl = '@Model.HostURL@Model.Specificuploadedcontentpath/' + $('#docfile').val() + '';
                }
                else
                    if ($('#gridtypeid').val() == 2) {
                        fileurl = '@Model.HostURL@Model.ProfLicuploadedcontentpath/' + $('#docfile').val() + '';
                }
                    else*@
                var fileurl = '';
                if ($('#gridtypeid').val() == 3) {
                    fileurl = '@Model.HostURL@Model.Insuranceuploadedcontentpath/' + $('#docfile').val() + '';
                }


                var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";
                $('#pdfdiv').attr('src', url1);

                $('#loaddiv').hide();
                $('#btnpublish').show();
                $('#pdfdiv').show();

                $('#doccircle').progressCircle({
                    nPercent: 0,
                    showPercentText: true,
                    circleSize: 300,
                    thickness: 3
                });

            }, 1000);

        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });
            $('#progressfile').css('width', progress + '%');
        },
        progress: function (e, data) {

            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

        },

    });
});
function deletedoc(id) {
    var divId = "uploadedprofLicfiles";
    var typeid = $('#gridtypeid').val();
    //if (!($('#gridtypeid').val().indexOf('$') === -1)) {
    //    divId = "userdocfiles1_0";
    //    typeid = 4
    //}
    //else
    if (typeid == 3) {
        divId = "uploadedinsdocfiles";
    }
    if (typeid == 4) {
        divId = "uploadedaddreqdocfiles";
    }
    //var divId = "userdocfiles_0";
    //var typeid = $('#gridtypeid').val();
    //if (!($('#gridtypeid').val().indexOf('$') === -1)) {
    //    typeid = $('#gridtypeid').val().split('$')[1];
    //    divId = "userdocfiles1_0";
    //}
    //alert(id + "dfd" + divId)
    DeleteDocumentFromDir(id, divId, typeid, 1, id, ROOT);

    //if ($("#" + divId + " div").length == 0) {

    //    $('#lbltitleaddcre').removeAttr("disabled");
    //}
}

$(function () {
    $('#addReqUploadFileBtn').fileupload({
        url: '@Url.Content("~/UserDashBoard/UploadEmpReqDoc")',
        dataType: "json",
        limitConcurrentUploads: 1,
        sequentialUploads: true,
        progressInterval: 100,
        maxChunkSize: 10000,
        add: function (e, data) {
            $('#btnpublishdoc').click(function () {
                data.submit();

            });
        },
        done: function (e, data) {
            $('#doccircle').progressCircle({
                nPercent: 100,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

            setTimeout(function () {
                // alert($('#gridtypeid').val());
                //added document name

                    @*                var fileurl = '@Model.HostURL@Model.Globauploadedcontentpath/' + $('#docfile').val() + '';
                if ($('#gridtypeid').val() == 1) {
                    fileurl = '@Model.HostURL@Model.Specificuploadedcontentpath/' + $('#docfile').val() + '';
                }
                else
                    if ($('#gridtypeid').val() == 2) {
                        fileurl = '@Model.HostURL@Model.ProfLicuploadedcontentpath/' + $('#docfile').val() + '';
                }
                    else*@
                var fileurl = '';
                if ($('#gridtypeid').val() == 4) {
                    fileurl = '@Model.HostURL@Model.AdditionalRequploadedcontentpath/' + $('#docfile').val() + '';
                }


                var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";
                $('#pdfdiv').attr('src', url1);

                $('#loaddiv').hide();
                $('#btnpublish').show();
                $('#pdfdiv').show();

                $('#doccircle').progressCircle({
                    nPercent: 0,
                    showPercentText: true,
                    circleSize: 300,
                    thickness: 3
                });

            }, 1000);

        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });
            $('#progressfile').css('width', progress + '%');
        },
        progress: function (e, data) {

            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

        },

    });
});
function ReviewSterlingResult(SterlingOrderId, e) {
    if (SterlingOrderId == '') {
        $('#waitPopupOuter').show();
        $('#waitPopupInner').show();

        $('#dvMsg').text('There is no any result available from sterling.');
        setTimeout(function () {
            $('#waitPopupOuter').hide();
            $('#waitPopupInner').hide();
        }, 1500)
    } else {
        $('#' + SterlingOrderId).attr("target", "_blank");
        $('#' + SterlingOrderId).attr("href", "@Url.Content("~/Sterling/SterlingResultView?type=")" + SterlingOrderId);
        //var target = e.target;
        //e.preventDefault();
        //e.click();
        $('#' + SterlingOrderId).click();
    }

}
$('#btnprofLicclose').click(function () {
    $('#profLicOuterDiv').slideUp('fast');
    $('#profLicInnerDiv').slideUp('fast');
});
$('#btninsclose').click(function () {
    $('#insOuterDiv').slideUp('fast');
    $('#insInnerDiv').slideUp('fast');
});
$('#btnaddReqclose').click(function () {
    $('#addReqOuterDiv').slideUp('fast');
    $('#addReqInnerDiv').slideUp('fast');
});
function ShowClientViewByIC(companyId) {
    //alert(companyId);

    $.ajax({
        url: '@Url.Content("~/UserDashBoard/ICProfile")',
            cache: false,
            type: 'GET',
            data: { parentCompanyId: companyId },
            contentType: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                $('#icDefaultView').html($(data).find('#icDefaultView').html().trim());
                if (companyId != '') {
                    //$('#lnkShowMyView').show();
                    $('#parentCompanyId').val(companyId);
                } else {
                    $('#parentCompanyId').val('');
                }

                $('.insCount').val($('#tbl_Insurance tbody tr').length);
                if ($('.insCount').val() != 0) {
                    if (companyId == '') {
                        $('#div_twoColumnHead').css("width", "289px");
                    }
                    else {
                        var FF = !(window.mozInnerScreenX == null);
                        if (FF) {
                            $('#div_twoColumnHead').css("width", "260px");
                        } else {
                            $('#div_twoColumnHead').css("width", "289px");
                        }

                    }
                }
                else {
                    $('#div_twoColumnHead').css("width", "289px");
                }
                $('#waitPopupOuter').hide();
                $('#waitPopupInner').hide();
                $('.viewClient').each(function () {
                    if ($(this).attr('id') == companyId) {
                        $(this).html('Return');
                        $(this).attr("onclick", "ShowClientViewByIC('')");
                    }
                    else {
                        $(this).html('View/Update');
                        $(this).attr("onclick", "ShowClientViewByIC('" + $(this).attr('id') + "')");
                    }
                });
            },
            beforeSend: function (jqXHR, obj) {

                $('#waitPopupOuter').show();
                $('#waitPopupInner').show();

                $('#dvMsg').text('Please wait...');

            },
            error: function (data) { }
        });
     @*  $("#" + id).attr("href", '@Url.Content("~/UserDashBoard/ICProfile?parentCompanyId=")' + companyId);
        var target = e.target;
        e.preventDefault();
        target.click();*@
    }
    function EditProfLic(profLicNumber, profLicType, stateId, expirationDate, profLicMasterId, profLicMapId, type, Source) {
        $('#profLicOuterDiv').slideDown('fast');
        $('#profLicInnerDiv').slideDown('fast');


        if (type == 0) {
            $('#profDriverLicTitle').html('Edit Professional License');
            $('#profDriverLicHeader').html('Professional License');

            $("#ddState option").each(function () {
                if ($(this).val() == stateId) {
                    $(this).attr('selected', 'selected');
                }
            });
            $("#profLicenseType option").each(function () {
                if ($(this).html() == profLicType) {
                    $(this).attr('selected', 'selected');
                }
            });
            $('#IsDriverLic').val(0);
            $("#driverLicType").hide();
            $("#ddDriverState").hide();
            $("#profLicenseType").show();
            $("#ddState").show();
            $(".profLicAkg").show();
        }
        else {
            $('#profDriverLicTitle').html('Edit Driver License');
            $('#profDriverLicHeader').html('Driver License');
            $("#ddDriverState option").each(function () {
                if ($(this).val() == stateId) {
                    $(this).attr('selected', 'selected');
                }
            });
            $("#profLicenseType").hide();
            $('#IsDriverLic').val(1);
            $("#ddState").hide();
            $("#driverLicType").show();
            $("#ddDriverState").show();
            $('#driverLicType').val(profLicType);
            $(".profLicAkg").hide();

        }
        $('#profLicNumber').val(profLicNumber);

        if (Source != 'Sterling') {
            if (expirationDate != null) {
                if (expirationDate != '') {
                    $('#licExpirationDate').val(dateFormat(new Date(new Date(parseInt(expirationDate.substr(6)))), 'mm/dd/yyyy'));
                }
            }
        } else {

            if (expirationDate != null) {
                if (expirationDate != '') {
                    var date = dateFormat(new Date(expirationDate), 'mm/dd/yyyy')
                    $('#licExpirationDate').val(date);
                }
            }
        }


        $('#hid_profLicMapId').val(profLicMapId);
        $('#hid_profLicMasterId').val(profLicMasterId);

        $('#gridtypeid').val(2);
        $('#profLicTitle').html(profLicType);

        GetAckDetails(0, profLicMasterId);
        GetUploadedDocDetails(0, profLicMapId, "");
        if ($('#hid_ParentUserid').val() != null && $('#hid_ParentUserid').val() != '') {
            $('#profLicNumber').attr("disabled", "disabled");
            $('#licExpirationDate').attr("disabled", "disabled");
            $('#ddState').attr("disabled", "disabled");
            $('#ddDriverState').attr("disabled", "disabled");
            if ($('#IsDriverLic') != 1 && Source != 'Sterling') {
                $('#profLicenseapp').show();
                $('#profLicensenotapp').show();
            }
            $('#profLicenseSave').hide();
            $('#uploadprofLicbtn').hide();
            $('#uploadfileprofLicbtn').hide();
            //$('#profLicTitle').html('Upload');
            $('#uploadedprofLicfiles').css("margin-top", "0px");

        }
        else {
            $('#profLicNumber').removeAttr("disabled");
            $('#licExpirationDate').removeAttr("disabled");
            $('#ddState').removeAttr("disabled");
            $('#ddDriverState').removeAttr("disabled");
            $('#profLicenseapp').hide();
            $('#profLicensenotapp').hide();
            $('#profLicenseSave').show();
            $('#uploadprofLicbtn').show();
            $('#uploadfileprofLicbtn').show();
            $('#uploadedprofLicfiles').css("margin-top", "10px");
        }

        $('#profLicTitle').html(profLicType);

    }
    function EditIns(policyNumber, companyName, expirationDate, insType, insMasterId, singleOcc, aggAmount, insMapId, insVerType) {

        $('#insOuterDiv').slideDown('fast');
        $('#insInnerDiv').slideDown('fast');
        $('#insHeaderTitle').html('Edit Insurance ' + insVerType);
        $("#insuranceType option").each(function () {
            if (!($(this).html().indexOf('&amp;') === -1)) {
                if ($(this).html().replace('&amp;', '&') == insType) {
                    $(this).attr('selected', 'selected');
                }
                ;
            }
            else {
                if ($(this).html() == insType) {
                    $(this).attr('selected', 'selected');
                }
            }
        });
        $('#policyNumber').val(policyNumber);
        $('#companyName').val(companyName);
        if (expirationDate != null) {
            if (expirationDate != '') {
                $('#insExpirationDate').val(dateFormat(new Date(new Date(parseInt(expirationDate.substr(6)))), 'mm/dd/yyyy'));
            }
        }
        $('#signOcc').val(singleOcc);
        $('#aggAmt').val(aggAmount);
        $('#hid_InsMapId').val(insMapId);
        $('#gridtypeid').val(3);
        $('#insTitle').html(insType);
        $('#hid_profLicMasterId').val(insMasterId);
        GetAckDetails(1, insMasterId);
        GetUploadedDocDetails(1, insMapId, "");
        if ($('#hid_ParentUserid').val() != null && $('#hid_ParentUserid').val() != '') {
            $('#policyNumber').attr("disabled", "disabled");
            $('#companyName').attr("disabled", "disabled");
            $('#insExpirationDate').attr("disabled", "disabled");
            $('#signOcc').attr("disabled", "disabled");
            $('#aggAmt').attr("disabled", "disabled");
            $('#uploadfileinsbtn').hide();
            $('#uploadinsbtn').hide();
            $('#insuranceapp').show();
            $('#insurancenotapp').show();
            $('#insuranceSave').hide();
            //$('#insTitle').html('Upload');
            $('#uploadedinsdocfiles').css("margin-top", "0px");


        }
        else {
            $('#policyNumber').removeAttr("disabled");
            $('#companyName').removeAttr("disabled");
            $('#insExpirationDate').removeAttr("disabled");
            $('#signOcc').removeAttr("disabled");
            $('#aggAmt').removeAttr("disabled");
            $('#uploadfileinsbtn').show();
            $('#uploadinsbtn').show();
            $('#insuranceapp').hide();
            $('#insurancenotapp').hide();
            $('#insuranceSave').show();

            $('#uploadedinsdocfiles').css("margin-top", "10px");
        }
        $('#insTitle').html(insType);

    }
    function EditAdditionalReq(title, uploadedBy, addReqMasterId, addReqMapId) {
        $('#addReqOuterDiv').slideDown('fast');
        $('#addReqInnerDiv').slideDown('fast');
        $('#addiReqTitle').html(title);

        $('#hid_addReqMapId').val(addReqMapId);
        $('#hid_profLicMasterId').val(addReqMasterId);
        $('#gridtypeid').val(4);

        if (uploadedBy == "Company") {
            $('#addReqUploadFileBtn').hide();
            $('#addReqUploadBtn').hide();
            $('#gridtypeid').val(4)
            GetUploadedDocDetails(2, addReqMasterId, uploadedBy);
        }
        else {
            $('#addReqUploadFileBtn').show();
            $('#addReqUploadBtn').show();
            $('#gridtypeid').val(4)
            GetUploadedDocDetails(2, addReqMapId, uploadedBy);
        }
        if ($('#hid_ParentUserid').val() != null && $('#hid_ParentUserid').val() != '') {
            $('#additionalReqSave').hide();
            $('#additionalReqapp').show();
            $('#additionalReqnotapp').show();
            $('#addReqUploadFileBtn').hide();
            $('#addReqUploadBtn').hide();
            $('#gridtypeid').val(4)
            $('#uploadedinsdocfiles').css("margin-top", "10px");
        }
        else {
            $('#additionalReqSave').show();
            $('#additionalReqapp').hide();
            $('#additionalReqnotapp').hide();
            if (uploadedBy != "Company") {
                $('#addReqUploadFileBtn').show();
                $('#addReqUploadBtn').show();
            }
            $('#uploadedinsdocfiles').css("margin-top", "10px");
        }

        GetAckDetails(2, addReqMasterId);

    }
    function ResetProfLicAndInsAndAddiReq(type) {
        if (type == 0) {
            $('#btnprofLicclose').click();
        }
        if (type == 1) {
            $('#btninsclose').click();
        }
        if (type == 2) {
            $('#btnaddReqclose').click();
        }
    }
    function GetUploadedDocDetails(type, tblMapId, addReqCondition) {
        if ($('#IsDriverLic').val() == 1) {
            type = 3;
        }
        $.ajax({
            url: '/JobComplianceRequirement/GetUploadedDocs',
            cache: false,
            type: 'GET',
            data: {
                tblMapId: tblMapId,
                type: type
            },
            async: true,
            success: function (result) {

                result = $.parseJSON(result);
                var tblId = "uploadedprofLicfiles";
                if (type == 1) {
                    tblId = "uploadedinsdocfiles";
                }
                else if (type == 2) {
                    tblId = "uploadedaddreqdocfiles";
                }
                SetUploadedDocDetails(result, tblId, addReqCondition);
            },
            error: function (result) { }
        });
    }
    function SetUploadedDocDetails(result, tblId, addReqCondition) {
        $('#' + tblId).html("");
        var count = "";
        var fileurl = "";
        var url1 = "";
        var UploadedDocDate = "";
        $.each(result, function (i, item) {

            UploadedDocDate = new Date(parseInt(item.UploadedDocDate.substr(6)));
            //alert(UploadedDocDate);
            if (item.UploadedDocDate != null) {
                UploadedDocDate = '_' + dateFormat(new Date(UploadedDocDate), 'mm/dd/yyyy');
            }
            else {
                UploadedDocDate = '';
            }
            count = $('#' + tblId + ' div').length;
            url1 = item.DocLoc;
            // alert(tblId, +"  " + addReqCondition);UploadedDocDate
            var title = url1.replace(/^.*[\\\/]/, '').split('&')[0].split('.')[0];
            //alert($('#hid_ParentUserid').val());
            if (addReqCondition != "Company" && ($('#hid_ParentUserid').val() == null || $('#hid_ParentUserid').val() == '')) {
                $("#" + tblId).append('<div id="div_' + count + '" style="border-radius: 5px 5px 5px 5px;  width:auto;height:auto;float:left;"><a id="docfile_' + count + '" href="' + url1 + '" target="_blank" title=' + title + '_' + item.DocSeq + '<style="cursor:pointer;margin-left:6px;" >' + title.replace(/\s/g, '') + UploadedDocDate + '</a><img id="Eimg' + count + '" src="@Url.Content("~/Content/images/cross-button.png")" class="delDoc" style="margin-left:6px;cursor:pointer;" title="remove document" onclick="deletedoc(' + count + ')">' +
                                   '<input type="hidden" id="doccontentid_' + count + '" value="' + item.DocTblId + '" /></div>');
            } else {
                $("#" + tblId).append('<div id="div_' + count + '" style="border-radius: 5px 5px 5px 5px;  width:auto;height:auto;float:left;"><a id="docfile_' + count + '" href="' + url1 + '" target="_blank" title=' + title + '_' + item.DocSeq + '<style="cursor:pointer;margin-left:6px;" >' + title.replace(/\s/g, '') + UploadedDocDate + '</a>' +
                                           '<input type="hidden" id="doccontentid_' + count + '" value="' + item.DocTblId + '" /></div>');
            }

        });
    }

    function CheckEmailExist() {
        if ($('#EmailId').val() != '@Session["Emailid"]') {
                // alert('call');
                var userId = $('#userId').val();
                $.ajax({
                    url: '@Url.Content("~/CompanyDashboard/CheckUserEmailExistence/")',
                cache: false,
                type: 'POST',
                data: { emailId: $('#EmailId').val().trim(), userId: parseInt(userId), userType: 'staff' },
                async: true,
                success: function (data) {
                    if (data != "Not Found") {
                        $('#EmailId').addClass("errorClass");
                        $('#emailerrormsg').html("Email id already exist in system.");

                    } else {
                        $('#EmailId').removeClass("errorClass");
                        $('#emailerrormsg').html("");
                        // alert(checkvalidation())
                        if (checkvalidation() == true) {
                            $('#namepopup form').submit();
                        }
                    }

                },
                error: function (data) {
                    return false;
                }
            });
        }
        else {
            if (checkvalidation() == true) {
                $('#namepopup form').submit();
            }
        }
    }
</script>
