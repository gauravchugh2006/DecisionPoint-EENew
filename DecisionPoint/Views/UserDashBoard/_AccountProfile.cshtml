@model DecisionPoint.Models.UserDashBoard
@using DecisionPoint.Models.DashBoardViewModel.ViewModel;
@using System.Globalization
@using DecisionPointCAL;
@using DecisionPointCAL.Common;
@{
    Layout = "~/Views/Shared/_CoverageAreaPartial.cshtml";
    ViewBag.Title = "UserDashBoard : My profile";
    var imagePath = @Model.File;

  
}
<link href="~/Content/css/Dashboard/common.css" rel="stylesheet" />
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
<link href="~/Content/css/Dashboard/jquery.fileupload-ui-noscript.css" rel="stylesheet" />
<link href="~/Content/css/Dashboard/jquery.fileupload-ui.css" rel="stylesheet" />
<script src="~/Scripts/Upload/jquery-ui-1.9.2.js"></script>
<script src="~/Scripts/Upload/jquery.iframe-transport.js"></script>
<script src="~/Scripts/Upload/jquery.fileupload.js"></script>
<script src="~/Scripts/Upload/jquery.fileupload-ui.js"></script>

<link href="~/Content/css/Dashboard/circle.css" rel="stylesheet" />
<script src="~/Scripts/Upload/progress-circle.js"></script>
<script src="~/Scripts/jquery.cookie.js"></script>
<style>
    .grid-width300 {
        width: 319px;
    }

    .grid-width100 {
        width: 178px;
    }

    .grid-width3002 {
        width: 283px;
    }

    .grid-width229 {
        width: 200px;
    }

    .grid-width150 {
        width: 200px;
    }



    .ui-autocomplete {
        max-height: 150px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
        /* add padding to account for vertical scrollbar */
        padding-right: 20px;
        font-size: 11px;
        margin-top: 175px;
        margin-left: 245px;
        z-index: 999;
    }
    /* IE 6 doesn't support max-height
 * we use height instead, but this forces the menu to always be this tall
 */
    * html .ui-autocomplete {
        height: 150px;
    }

    .w20 {
        margin-right: -31px;
        float: left;
        margin-bottom: 10px;
        line-height: 26px;
    }

    .pdr5 {
        padding-right: 5px;
        float: left;
    }

    .multiselectable {
        width: 500px;
        display: block;
        overflow: hidden;
        width: 100%;
        padding-right: 20px;
        margin-bottom: 8px;
    }

        .multiselectable select, .multiselectable div {
            width: 205px;
            float: left;
        }

            .multiselectable div * {
                display: block;
                margin: 0 auto;
                font-size: 12px;
                font-weight: normal;
            }

        .multiselectable div {
            display: inline;
            overflow: hidden;
        }

    .butmargin {
        margin: -11px 0 0 3px;
    }

    .multiselectable .m-selectable-controls {
        margin-top: 45px;
        width: 43px;
    }

    .w1002 {
        float: left;
        margin-bottom: 30px;
    }

    .multiselectable .m-selectable-controls button {
        margin-top: 0.2em;
        margin-left: .5em;
        width: 30px;
    }

    .multiselectable select, .multiselectable div {
        float: left;
        width: 207px;
    }

    .m-selectable-to > select {
        height: 251px;
    }

    .m-selectable-from > select {
        height: 251px;
    }


    .unselectable {
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
    }

    table {
        background-color: transparent;
        border-spacing: 0;
        max-width: none !important;
    }
</style>
@functions {
    /// <summary>
    /// Used for make the list of states for fill in drop down list
    /// </summary>
    /// <returns>IEnumerable<SelectListItem></returns>
    private IEnumerable<SelectListItem> FillStateList()
    {
        return new SelectList(Model.StateList, "Abbrebiation", "SateName");
    }
    /// <summary>
    /// Used for make the list of states for fill in drop down list
    /// </summary>
    /// <returns>IEnumerable<SelectListItem></returns>a
    private IEnumerable<SelectListItem> FillStateListAsPerIdVal()
    {
        return new SelectList(Model.StateList, "StateId", "SateName");
    }
    /// <summary>
    /// Used for get the spend time of user in particular company
    /// </summary>
    /// <returns>string</returns>
    private string GetSpendTime()
    {
        return ViewModel.GetSpendTime(Model.RegisteredDate.Value);

    }
    }
<div class="w100">
    <div class="control-group " style="float: left; margin-top: -30px;">
        <div class="halfrest">
            <div class="control-group w100">

                <div style="margin-left: -2px; font-style: italic; text-decoration: underline; width: 150px;"><a href="@Url.Content("~/UserDashBoard/MyDashBoard?date=")@System.DateTime.Now.Date&type=1">Show other tabs</a></div>



            </div>
        </div>


    </div>
    <div class="control-group " style="float: right; margin-top: -30px;">

        <div class="halfrest">

            @if (!string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], CultureInfo.InvariantCulture)))
            {
                <div class="control-group w100">
                    @{
                string parentForm = string.Empty;
                if (!string.IsNullOrEmpty(Convert.ToString(Session["parentform"], CultureInfo.InvariantCulture)))
                {
                    parentForm = Convert.ToString(Session["parentform"], CultureInfo.InvariantCulture).Split(':')[0];
                }
                    }
                    @if (Convert.ToString(Session["IsSuperAdmin"]) != string.Empty)
                    {
                        if (Convert.ToString(Session["IsSuperAdmin"]) == "Yes".Trim() && string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], CultureInfo.InvariantCulture)))
                        {
                                               
                        <div style="margin-left: -2px; font-style: italic; text-decoration: underline; width: 150px;">@Html.ActionLink("Return to my view", "GetCompanies", "CompanyDashBoard", new { id = "1", search = string.Empty, type = 1 }, null)     </div>
                                                  
                        }
                        else
                        {
                        <div style="margin-left: -2px; font-style: italic; text-decoration: underline; width: 150px;">@Html.ActionLink("Return to my view", "Returntomyview", "CompanyDashBoard", new { id = parentForm }, null)</div>
                        }
                    }
                    else
                    {
                        <div style="margin-left: -2px; font-style: italic; text-decoration: underline; width: 150px;">@Html.ActionLink("Return to my view", "Returntomyview", "CompanyDashBoard", new { id = parentForm }, null)</div>
                    }
                </div>
            }

        </div>


    </div>
</div>

<div id="content">
    <div class="container">
        <br>
        <div id="" class="ic-profile">
            <div class="row">

                <div class="span4">
                    <p>

                        <img alt="Headshot" class="headshot" src="@imagePath" id="personpic">
                    </p>
                    <br>
                    <div class="alert alert-block">
                        <button class="close" data-dismiss="alert" type="button">×</button>
                        <h4>Outstanding Actions</h4>
                        <br>
                        <ul>

                            @foreach (var item in Model.ReqiuredDocumentsDetails.Select(x => new { x.companyName, x.CreatorCompanyid }).Distinct().ToList())
                            {

                                if (Model.ReqiuredDocumentsDetails.Where(x => x.CreatorCompanyid == item.CreatorCompanyid && (x.IsCompleted == 2 || x.IsCompleted == 0)).Count() > 0)
                                {
                                <li><b>@DecisionPointR.MyProfileOutstandingActionMsg1 @item.companyName </b>@DecisionPointR.MyProfileOutstandingActionMsg2</li>
                                }


                            }
                            @if (Model.IsServicesApply)
                            {
                                if (!Model.ServicesStatus.Equals(2))
                                {
                                    if (Model.ServiceCount.Equals(0))
                                    {
                                <li>Please complete the <b>services</b></li>
                                    }
                                }
                            }
                            @if (Model.IsCoverageAreaApply)
                            {
                                if (Model.CoverageAreaCount.Equals(0))
                                {
                                <li>Please complete the <b>coverage area</b></li>
                                }
                            }

                        </ul>
                    </div>
                    <br>
                </div>
                <div class="span7">
                    <h2>
                        <span class="emal-txt-break" style="width: 400px;">@Model.FName @Model.LName</span>
                        <span class="label label-info">
                            <i class="icon-white icon-user"></i>
                            @Model.PermissionDetails.Select(x => x.permissionName).FirstOrDefault()
                        </span>

                        <div class="pull-right">
                            <a class="btn btn-default" id="btnnameedit">Edit Profile</a>
                        </div>

                    </h2>
                    <hr>
                    <div class="row">
                        <div class="span3">
                            <div class="basic-info box">
                                <h3>Basic Information</h3>

                                <table class="table">
                                    <tbody>

                                        <tr>
                                            <th>Start Date</th>
                                            <td>

                                                @if (!object.Equals(Model.RegisteredDate, null))
                                                { 
                                                    <span>@string.Format("{0:MMM dd, yyyy}", Model.RegisteredDate)</span>
                                                }

                                            </td>
                                        </tr>

                                        @*<tr>
                                            <th>Address</th>
                                            <td class="address">
                                                @if (!string.IsNullOrEmpty(Model.StreetNumber) || !string.IsNullOrEmpty(Model.StreetName) || !string.IsNullOrEmpty(Model.Direction))
                                                {
                                                    @Model.StreetNumber @Model.Direction @Model.StreetName
                                                    <br />}
                                                @Model.CityName @Model.StateName @Model.ZipCode
                                            </td>
                                        </tr>*@
                                        <tr>
                                            <td colspan="2">
                                                <a class="btn btn-primary" data-toggle="modal" id="btnbioinfo" role="button" style="width: 62%;">
                                                    <i class="icon-white icon-search" style="margin-left: -31px;"></i>
                                                    <span style="margin-left: 5px;">More Bio Information</span>
                                                </a>
                                            </td>

                                        </tr>

                                        <tr>

                                            <td colspan="2">
                                                @if (Model.IsServicesApply)
                                                {
                                                    if (!Model.ServicesStatus.Equals(2))
                                                    {
                                                        if (Model.ServiceCount.Equals(0))
                                                        {
                                                    <a id="blinkservices" class="btn btn-primary" href="~/CompanyDashBoard/ViewService?type=SPS" target="_blank">Services
                                                    </a>
                                                        }
                                                        else
                                                        {
                                                    <a class="btn btn-primary" href="~/CompanyDashBoard/ViewService?type=SPS" target="_blank">Services
                                                    </a>
                                                        }
                                                    }
                                                    else
                                                    {
                                                    <a class="btn btn-primary" href="~/CompanyDashBoard/ViewService?type=SPS" target="_blank">Services
                                                    </a>
                                                    }
                                                }
                                                @if (Model.IsCoverageAreaApply)
                                                {
                                                    if (Model.CoverageAreaCount.Equals(0))
                                                    {
                                                    <a id="blinkcoveragearea" class="btn btn-primary" href="~/Company/CoverageArea?type=1" target="_blank">Coverage Area
                                                    </a>
                                                    }
                                                    else
                                                    {
                                                    <a class="btn btn-primary" href="~/Company/CoverageArea?type=1" target="_blank">Coverage Area
                                                    </a>
                                                    }

                                                }
                                            </td>

                                        </tr>


                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="company-info box">
                                <h3>Company</h3>
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <th>Name</th>
                                            <td>@Model.CompanyName
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Address</th>
                                            <td class="address">
                                                @if (!string.IsNullOrEmpty(Model.StreetNumber) || !string.IsNullOrEmpty(Model.StreetName) || !string.IsNullOrEmpty(Model.Direction))
                                                {
                                                    @Model.StreetNumber @Shared.Comma @Model.Direction @Shared.SingleSpace @Model.StreetName
                                                    <br />}
                                                @if (!string.IsNullOrEmpty(Model.CityName) || !string.IsNullOrEmpty(Model.StateName) || !string.IsNullOrEmpty(Model.ZipCode))
                                                {
                                                    @Model.CityName@Shared.Comma @Model.StateName @Shared.SingleSpace @Model.ZipCode
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Office</th>
                                            <td>
                                                @if (Model.OfficePhone != null && Model.OfficePhone.Trim() != string.Empty)
                                                {   <span>(@Model.OfficePhone.Substring(0, 3)) @Model.OfficePhone.Substring(3, 3)-@Model.OfficePhone.Substring(6, 4)</span>}</td>
                                        </tr>
                                        <tr>
                                            <th>Mobile</th>
                                            <td>@if (Model.DirectPhone != null && Model.DirectPhone.Trim() != string.Empty)
                                                {  <span>(@Model.DirectPhone.Substring(0, 3)) @Model.DirectPhone.Substring(3, 3)-@Model.DirectPhone.Substring(6, 4)</span>}</td>
                                        </tr>
                                        <tr>
                                            <th>Email</th>
                                            <td> <a href="mailto:@Model.EmailId" target="_top" class="emal-txt-break">@Model.EmailId</a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        @if (!string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], CultureInfo.InvariantCulture)))
                        {
                            if (Model.IsBgCheckApply)
                            {
                            <div class="span3">
                                <div class="box background-check">
                                    <h3>Background Check</h3>

                                    <table id="tbl_BackgroundCheck">
                                        <tbody>
                                            @if (Model.BackgroundList != null)
                                            {
                                                foreach (var item in Model.BackgroundList)
                                                {
                                                <tr>
                                                    <td style="width: 50%;">@item.BackgroundTitle</td>

                                                    @if (Session["ParentUserId"] != null)
                                                    {
                                                        if (Model.BackgroundListByVisitor != null && Model.BackgroundListByVisitor.Where(x => x.MasterId == item.Id).Select(x => x.BackgroundCheckStatus).FirstOrDefault() == "Approved")
                                                        {   
                                                                                                            
                                                        <td style="width: 25%;"><a id="Review_@item.Id" class="btn btn-small btn-success"  >Approved</a>
                                                        </td>
                                                        }
                                                        else if (Model.BackgroundListByVisitor != null && Model.BackgroundListByVisitor.Where(x => x.MasterId == item.Id).Select(x => x.BackgroundCheckStatus).FirstOrDefault() == "Hold")
                                                        {   
                                                                                                            
                                                        <td style="width: 25%;"><a id="Review_@item.Id" class="btn btn-small btnminired" style="width:40px;">Hold</a>
                                                        </td>
                                                        }
                                                        else
                                                        {
                                                        <td style="width: 25%;"><a id="Review_@item.Id" class="btn btn-small btn-warning" >Review</a></td>
                                                        }
                                                        <td style="width: 25%;"><a style="margin-left:3px;" id="btnBackEdit_@item.Id" class="btn btn-small btn-success" onclick="openEditBackgroundPopUp(@item.Id,'@item.BackgroundTitle')">Edit</a></td>
                                                    }
                                                    else
                                                    {
                                                        <td style="width: 25%;"><a id="Review_@item.Id" class="btn btn-small btn-warning" >Review</a></td>
                                                        <td></td>
                                                    }
                                                </tr>
                                                }
                                            }

                                        </tbody>
                                    </table>

                                    <hr>
                                    <a class="btn btn-default" data-toggle="modal" href="#myModal4" role="button">Edit Visibility
                                    </a>
                                    <div aria-hidden="true" style="display: none;" class="modal hide fade" id="myModal4" role="dialog">
                                        <div class="modal-header">
                                            <button class="close" data-dismiss="modal" type="button">×</button>
                                            <h3>Background Check - Edit Visibility</h3>
                                        </div>
                                        <div class="modal-body">
                                            <table>
                                                <tbody>
                                                    <tr>
                                                        <th>OFAC</th>
                                                        <td>
                                                            <input checked="checked" type="checkbox">Display?
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <th>Sex Offender</th>
                                                        <td>
                                                            <input checked="checked" type="checkbox">Display?
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <th>Criminal</th>
                                                        <td>
                                                            <input checked="checked" type="checkbox">Display?
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <button class="btn btn-primary" data-dismiss="modal" type="submit">Save</button>
                                        </div>
                                    </div>
                                    <a class="btn btn-info" href="#">Add Area</a>

                                </div>
                            </div> 
                            }
                        }

                        @if (!object.Equals(Model.ReqiuredDocumentsDetails, null))
                        {
                            if (Model.ReqiuredDocumentsDetails.Count() > 0)
                            {
                            <div class="span3">
                                <div class="box">
                                    <h3>Job Requirements</h3>



                                    <table>
                                        <tbody>

                                            @foreach (var item in Model.ReqiuredDocumentsDetails.Select(x => new { x.companyName, x.CreatorCompanyid }).Distinct().ToList())
                                            {
                                                <tr>
                                                    <td width="135px"><span>@item.companyName</span></td>
                                                    <td>
                                                        @if (Model.ReqiuredDocumentsDetails.Where(x => x.CreatorCompanyid == item.CreatorCompanyid && (x.IsCompleted == 2 || x.IsCompleted == 0)).Count() <= 0)
                                                        {
                                                            <a  class="btn btn-small btn-success"  role="button" onclick="ShowJCR('@item.CreatorCompanyid','@item.companyName')">Completed</a>
                                                        }
                                                        else
                                                        {<a  class="btn btn-small btn-warning blinkJCR"  role="button" onclick="ShowJCR('@item.CreatorCompanyid','@item.companyName')">Need Information</a>}
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>


                                </div>
                            </div>  }
                        }
@* @if (Model.IsAddCreApply)
                        {
                            <div class="span3">
                                <div class="box">
                                    <h3>Additional Credentials</h3>

                                    <table>
                                        <tbody>
                                            <tr>
                                                <td></td>
                                            </tr>

                                        </tbody>
                                    </table>


                                </div>
                            </div>
                        }*@
                    </div>
                    <br>
                </div>

            </div>
        </div>
    </div>
</div>

@* Saved Pop up *@
<div class="confirmationdivmain" id="divManualInviteOuter" style="display: none;"></div>
<div class="confirmationdivinner" id="divManualInviteInner" style="display: none; width: 435px; left: 44%; top: 69%; z-index: 1000;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; height: 76px; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div style="font-size: 16px; color: green; padding-bottom: 10px;" id="dvSaveMsg"></div>
        <div style="clear: both;">
            <input id="btnSaveOK" class="btn btn-primary" type="button" value="Ok" onclick="CloseOpenPopup('divManualInviteOuter', 'divManualInviteInner')">
        </div>


    </div>
</div>

@*JCR Popup*@
<div class="confirmationdivmain" id="divRequirementOuter" style="display: none;"></div>
<div class="confirmationdivinner" id="divRequirementInner" style="display: none; width: 70%; left: 25%; z-index: 17; top: 10%;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; height: 450px; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div class="tittle-MessageBox">
            <span>Complete Below</span><a onclick="closeGridPopup()">
                <img id="btnRequirementclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>
        <div style="clear: both; height: 10px;"></div>
        <div style="clear: both;">
            <div id="0">
                <div style="width: 30%; float: left;">
                    <div class='control-group w100'>
                        <div style="font-weight: bold;">Title</div>
                        <div class="MarginBottom3" style="margin-top: 3px">

                            <div>
                                <input type="text" placeholder="Title" id="lbltitle_0" onkeypress="valtitle(this.id,event)" readonly="readonly" style="border: none; background: none; color: black; box-shadow: inherit; padding: 0 !important;" />
                                <input id="uploadbtn" type="button" class="btn btn-primary MarginTop5 uploadbtn_0" value="Upload" />
                                <input id="uploadfilebtn1" class="uploadfilebtn_0" type="file" style="opacity: 0; position: relative; left: -78px; width: 80px;" onchange="readdocURL(this,this.id)" />
                                <div id="docfiles_0" style="overflow: auto; width: 169px; max-height: 100px;" class="removeDub"></div>
                                <div id="userdocfiles_0" style="overflow: auto; width: 169px; max-height: 100px;" class="removeDub"></div>
                                <label id="docfileName_0" style="color: red;"></label>

                            </div>

                        </div>
                    </div>
                </div>
                <div style="width: 35%; float: left;">
                    <div class='control-group w100'>
                        <div style="font-weight: bold;">Acknowledgement</div>
                        <div class='MarginBottom3'>
                            <div class="row-fluid">
                                <div class="span12">
                                    <table id="tbreqaction_0" class="span11">
                                        <tr>
                                            <td class="removeDub" style="padding-bottom: 8px;">
                                                @*<input type="checkbox" id="chkReqAck_0" />
                                                <span id="reqcon_0_0"></span>*@
                                                <div style="float: left; width: 100%;" id="div_AckAppend"></div>
                                                @* <input id="reqcon_0_0" class="width210px" type="text" placeholder="Add Reqiured Action..." value="I have read and understood this document" maxlength="250" />
                                                 <input type="hidden" id="reqconid_0_0" value="0" />*@
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="width: 35%; float: left;">
                    <div class="row-fluid">
                        <div style="font-weight: bold;">Attributes</div>
                        <div class="span6 pull-left" style="margin-top: 3px; margin-left: 0;">
                            <div id="div_Expiration" class='control-group'>
                                <span>Expiration Date<sup style="color: red; font-size: 10px;"> *</sup></span>
                                <div class="datetimepicker input-append">

                                    <input type="text" style="position: relative; z-index: 100000;" onchange="onchangetext(this.id)" placeholder="Expiration Date" class="span12" id="txtExprationDate" />

                                </div>
                            </div>
                            <div id="div_company" class='control-group'>
                                <div>
                                    Company Name<sup style="color: red; font-size: 10px;"> *</sup>
                                    <input id="txtCompanyName" type="text" placeholder="Company Name" onchange="onchangetext(this.id)" maxlength="50" class="span12" />
                                </div>
                            </div>
                            <div id="div_State" class='control-group'>
                                <div>
                                    State<sup style="color: red; font-size: 10px;"> *</sup>
                                    @Html.DropDownListFor(model => model.StateAbbre, FillStateList(), "Select State", new { @class = "span12", onchange = "onchangetext(this.id)" })

                                </div>
                            </div>

                        </div>
                        <div class="span6 pull-left" style="margin-top: 3px;">
                            <div id="div_policy" class='control-group'>
                                <div>
                                    Policy Number<sup style="color: red; font-size: 10px;"> *</sup>
                                    <input id="txtPolicyNumber" type="text" placeholder="Policy Number" onchange="onchangetext(this.id)" maxlength="10" class="span12" />
                                </div>
                            </div>
                            <div id="div_lisence" class='control-group'>
                                <div>
                                    License Number<sup style="color: red; font-size: 10px;"> *</sup>
                                    <input id="txtLicenseNumber" type="text" placeholder="License Number" onchange="onchangetext(this.id)" maxlength="50" class="span12" />
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                <div class='control-group'>

                    <div>
                        <div class="btn btn-primary" id="btnMarkAsComplete_0" style="float: right; margin-right: 2.8%;" onclick="MarkDocComplete()">Mark As Complete</div>

                        <div class="btn btn-primary" id="btnsave_0" style="float: right; margin-right: 1.5%;" onclick="SaveReqDoc(0)">Save</div>
                        <div style="color: red; float: left; display: none;" id="mandatoryerrormsg">All * are mandatory. Please Fill all the details.</div>
                    </div>
                </div>
            </div>
        </div>
        <div style="clear: both; height: 10px; width: 80%;">
        </div>
        <div style="height: 120px; overflow-y: auto;">
            <table id="tblJCRAudit" class="table table-hover" style="display: none;">
                <thead>
                    <tr>
                        <th>Edit Date</th>
                        <th>Edit By</th>
                        <th>Company Name</th>
                        <th>License Number</th>
                        <th>Policy No</th>
                        <th>Expiration Date</th>
                        <th>State Name</th>
                        <th>Is Uploaded</th>
                         <th>Is Completed</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>



@*Edit Profile Popup*@
<div class="trans" id="nametrans"></div>
<div class="popup" id="namepopup" style="left: 20%;">
    @using (Html.BeginForm("Updatemyprofile", "UserDashBoard", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return checkvalidation();" }))
    {
        <div class="Reply-MessageBox" style="display: block; overflow-y: auto;overflow-x:hidden;">

            <div class="tittle-MessageBox">
                <span>Edit My Profile</span><a>
                    <img id="btnnamelose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
            </div>
            <div class="MessageSection-Box">
                <div class="control-group w100">
                    <div class="halfwidth1">Name <sup style="color: red; font-size: 10px;">*</sup></div>
                    <div class="halfrest">

                        <div class="w23">@Html.TextBoxFor(model => model.FName, new { @placeholder = "First Name", @class = "input-xsmall-txt", @maxlength = "50", onkeypress = "checkval(this.id)" })</div>
                        <div class="middlename">@Html.TextBoxFor(model => model.MName, new { @placeholder = "Middel Name", @class = "input-mini1", @maxlength = "1" })</div>
                        <div class="w23">@Html.TextBoxFor(model => model.LName, new { @placeholder = "Last Name", @class = "input-small-txt", @maxlength = "50", onkeypress = "checkval(this.id)" })</div>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Email <sup style="color: red; font-size: 10px;">*</sup></div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.EmailId, new { @placeholder = "Email Id", @class = "input-xlarge-txt", @title = "", @maxlength = "100", onkeypress = "checkval(this.id)" })
                        <label id="emailerrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Office Phone</div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.OfficePhone, new { @placeholder = "Office phone", @class = "input-xlarge-txt", @title = "", @maxlength = "14", onkeydown = "checkval(this.id)" })
                        <label id="phoneerrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Mobile Phone</div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.DirectPhone, new { @placeholder = "Cell phone", @class = "input-xlarge-txt", @title = "", @maxlength = "14", onkeydown = "checkval(this.id)" })
                        <label id="cellnoerrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Address</div>
                    <div class='halfrest'>
                        @Html.TextBoxFor(model => model.StreetNumber, new { maxlength = 6, @class = "input-xlarge", @placeholder = "Number", @style = "Width:125px" })
                        @Html.TextBoxFor(model => model.Direction, new { maxlength = 2, @class = "input-xlarge", @placeholder = "Direction", @style = "Width:105px" })
                        @Html.TextBoxFor(model => model.StreetName, new { maxlength = 50, @class = "input-xlarge", @placeholder = "Street Name", @style = "Width:115px" })
                        <br />
                        @Html.TextBoxFor(model => model.CityName, new { @class = "input-xlarge", @placeholder = "City Name", maxlength = 50, @style = "Width:131px" })
                        @Html.DropDownListFor(model => model.StateId, FillStateListAsPerIdVal(), "Select State", new { @class = "input-xlarge", @id = "StateAdd", @style = "width:120px" })
                        @Html.TextBoxFor(model => model.ZipCode, new { maxlength = 5, @class = "input-xlarge", @placeholder = "Zip Code", @style = "Width:110px" })
                    </div>
                </div>

                <div class="control-group " style="float: right; margin-top: -248px;">

                    <div class="halfrest" style="margin-bottom: 1px !important; float: none;">
                        <div style="width: 223px; height: 160px; border: 1px solid #d7d7d7;">
                            <img src="@imagePath" id="personpic1" style="width:223px; height:160px;" />
                        </div>
                    </div>

                    <label style="color: rgb(255, 255, 255); font-size: 12px; margin-top: 5px; width: 48px; margin-left: 155px; height: 23px;" class="btn btn-primary">
                        <p style="padding-top: 0px;">Browse</p>
                        @Html.TextBoxFor(model => model.File, new { type = "file", name = "file", id = "file", @style = "color:transparent;opacity:0; margin-top:-33px;width:5px;", onchange = "readURL(this);check_file();", onmouseover = "tooltip(this);" })

                    </label>


                </div>
            </div>
            <div class="Bottom-ButtonControl" style="float: right; margin-top: -49px; width: 17%; margin-right: 9px;">
                @Html.HiddenFor(model => model.ReqType)
                <button type="submit" id="btnnamedone" class="btn btn-primary" title="Update Profile">Update</button>
                <div id="btnnamecancel" class="btnred" title="Cancel">Cancel</div>
            </div>

        </div>
    }
</div>

@*Client REqiurement Popup*@
<div class="confirmationdivmain" id="JCRpopupdivouter" style="display: none;"></div>
<div class="confirmationdivinner" id="JCRpopupdivinner" style="display: none; width: 70%; left: 25%; z-index: 16; top: 10%;">
    <div style="background-clip: padding-box; background-color: #FFFFFF; padding: 10px; border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px 6px 6px 6px; box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); outline: 0 none;">
        <div class="tittle-MessageBox">
            @*id="JCRCOMPANYNAME"*@
            <span>Required document to be read</span><a>
                <img id="btnJCRclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>

        <div class="modal-body">
            <div id='JCRGrid' style="padding-top: 20px;">
            </div>
        </div>
    </div>
</div>

<div class="confirmationdivmain" id="BioInfoPopupouter" style="display: none;"></div>
<div class="confirmationdivinner" id="BioInfoPopupinner" style="display: none; left: 40%; z-index: 9999; top: 10%; width: 43%;">
    <div class="popup-inner-box">
        <div class="tittle-MessageBox">
            <span>@Model.FName @Model.MName @Model.LName - Bio</span><a>
                <img id="btnbioclose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" /></a>
        </div>

        <div class="modal-body">
            <p id="lbltxtbio">
                @Model.BioInfo
            </p>
            <p id="edittxtbio" style="display: none;">
                <textarea id="txtbio" class="mceNoEditor box-width-height">@Model.BioInfo</textarea>
            </p>
            <hr>
            @if (string.IsNullOrEmpty(Convert.ToString(Session["parentUserid"], CultureInfo.InvariantCulture)))
            { 
                <button class="btn btn-primary" type="submit" id="editbioinfo">Edit</button>
            }

        </div>
    </div>
</div>

@* Background Edit PopUp*@
<div class="trans" id="backtrans"></div>
<div class="popup span12" id="backpopup" style="left: 19%;">
    <div class="backpopup-div span10" style="display: block;">

        <div class="tittle-MessageBox">
            <span>Edit <span id="lblTopBGTitle" style="font-weight: bold;">Criminal Background</span></span><a>
                <img id="btnBackClose" src="~/Content/images/Close-Icon-mail.png" width="19" height="19" alt="" border="0" onclick="CloseOpenPopup('backtrans','backpopup');" /></a>
        </div>
        <div style="display: block; margin-left: 0;" id="backcontent-div" class="span10">
            <div class="MessageSection-Box span8">
                <div class="control-group w100">
                    <div class="halfwidth1">
                        <input type="text" placeholder="Title" id="lblBGtitle" value="Criminal Background" readonly="readonly"
                            style="border: none; background: none; color: black; box-shadow: inherit; padding: 0 !important; margin-top: 7px; font-weight: bold;" />


                    </div>
                    <div class="halfrest">
                        <input id="uploadbtn" type="button" class="btn btn-primary MarginTop5 uploadbtn_0" value="Upload" />
                        <input id="uploadfilebtn" class="bGChkFileUpload" type="file" style="opacity: 0; position: relative; left: -78px; width: 80px;" onchange="readdocURL(this,this.id)" />
                        <div id="userdocfiles1_0" style="overflow: auto; width: 169px; max-height: 100px; margin-top: 10px;" class="removeDub"></div>
                        @*<label class="btn btn-primary" style="color: rgb(255, 255, 255); font-size: 12px; margin-top: 5px; width: 48px; height: 20px;">
                        <p style="padding-top: 0px;">Browse</p>
                        <input type="file" value="http://localhost:32750/Content/documents/profilepic/no-profilepic.jpg" style="color: transparent; opacity: 0; margin-top: -33px; width: 5px;" onmouseover="tooltip(this);" onchange="readURL(this);check_file();" name="File" id="file">
                    </label>*@
                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Status</div>
                    <div class='halfrest'>
                        <select id="ddlBackStatus" class="input-xlarge" style="width: 395px;">
                            <option value="1">Hold</option>
                            <option value="2">Approved</option>
                        </select>
                        <label id="backStatusErrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1"></div>
                    <div class='halfrest'>
                        <input type="radio" class="MarginTop4" name="isdna" checked="checked" id="rddna" onchange="BgCheckRadioChanged()" /><span class="Marginleft5">DNA</span>
                        <input type="radio" class="MarginTop4" name="isdna" id="rdexpdate" onchange="BgCheckRadioChanged()" /><span class="Marginleft5">Expiration Date</span>

                        <div class='datetimepicker input-append'>
                            <input type="text" style="position: relative; z-index: 100000; width: 110px;" placeholder="Expiration Date" id="bgCheckExpDate" />

                        </div>

                    </div>
                </div>

                <div class='control-group w100' style="display: none;">
                    <div class="halfwidth1">Date & Time</div>
                    <div class='halfrest'>
                        <input type="text" id="txtBackDate" placeholder="Status" class="input-xlarge-txt" maxlength="50" />
                        <label id="backDateErrormsg" style="color: red; font-size: 12px;"></label>

                    </div>
                </div>

                <div class='control-group w100'>
                    <div class="halfwidth1">Source</div>
                    <div class='halfrest'>
                        <select id="ddlBackSource" class="input-xlarge" style="width: 395px;">
                            <option value="1">API</option>
                            <option value="2">None</option>
                        </select>
                    </div>
                </div>
                <div class='control-group w100' id="div_creator" style="display: none;">
                    <div class="halfwidth1">&nbsp;</div>
                    <div class='halfrest'>
                        <input type="text" id="txtBackCreatorName" value="@Model.ParentCompanyName"  class="input-xlarge-txt" maxlength="50" />
                    </div>

                </div>
                <div class='control-group w100'>
                    <div class="halfwidth1">Notes</div>
                    <div class='halfrest'>
                        <textarea id="txtBackNotes" class="input-xlarge-txt" placeholder="Notes for Status"></textarea>
                    </div>

                </div>

            </div>
            <div class="Bottom-ButtonControl span12" style="float: right; margin-top: -14px; width: 10%; margin-right: 230px;">
                <button type="submit" id="btnBackgroundSave" class="btn btn-primary" title="Save">Save</button>
            </div>
            <div class="control-group w100" id="tblaudittrail">
            </div>
        </div>
    </div>
</div>

<input type="hidden" value="@imagePath" id="imgpath" />
<input type="hidden" value="0" id="hidCurrentDocId" />
<input type="hidden" value="0" id="gridtypeid" />
<input type="hidden" value="0" id="visitcompanyid" />
<input type="hidden" value="0" id="visitcompanyname" />
<input type="hidden" id="hidIsCompleted" />
<input type="hidden" id="docfile" />
<input type="hidden" id="acks" />
<input type="hidden" id="lbltitleidid" />
<input type="hidden" id="uploaddocs" />
<input type="hidden" id="reqdoctype" value="1" />
<input type="hidden" id="chkedservices" />
<input type="hidden" id="hid_BackgroundId" value="0" />
<input type="hidden" id="hid_BackgroundMasterId" value="0" />
<input type="hidden" id="parentUserId" value="@Model.ParentUserId" />

<script type="text/javascript">
    var ROOT = '@Url.Content("~/")';
    $('#btnBackgroundSave').click(function () {
        if (ValidateExpDateOnBackGroundCheck()) {
        var rddna = false;
        if ($('#rddna').is(":checked")) {
            rddna = true;
        }
        var docLocation = '';
        $('#userdocfiles1_0 a').each(function () {
            docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
        });
        docLocation = (docLocation.slice(0, -1));
        $.ajax({
            url: "@Url.Content("~/UserDashBoard/SetBackgroundMapping/")",
            data: JSON.stringify({
                'Id': $('#hid_BackgroundId').val(),
                'MasterId': $('#hid_BackgroundMasterId').val(),
                'Documents': docLocation,
                'BackgroundCheckStatus': $('#ddlBackStatus option:selected').text(),
                'DateTime': $('#txtBackDate').val(),
                'Source': $('#ddlBackSource option:selected').text(),
                'CreatorName': $('#txtBackCreatorName').val(),
                'IsActive': true,
                'Notes': $('#txtBackNotes').val(),
                'IsDNA': rddna,
                'ExpirationDate': $('#bgCheckExpDate').val(),
            }),
            type: "POST",
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $('#backtrans').slideUp('fast');
                $('#backpopup').slideUp('fast');
                window.location.reload();
            }
        });
    }
    })
$('#bgCheckExpDate').change(function () {
    ValidateExpDateOnBackGroundCheck();
    })
    $('#ddlBackSource').change(function () {
        if ($('#ddlBackSource').val() == 2) {
            $('#div_creator').show()
        } else {
            $('#div_creator').hide();
        }
    })

    function getBackgroundDetails(id) {
        $('#bgCheckExpDate').prop("disabled", true);
        $('#backcontent-div').css("height", "355px");
        $('#tblaudittrail').empty();
        var backId = '';
        $.ajax({
            url: '@Url.Content("~/UserDashBoard/GetBackgroundMapping/")',
            data: { backMasterId: id },
            type: "GET",
            cache: false,
            success: function (result) {
                result = $.parseJSON(result);
                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {

                        if ($('#parentUserId').val() == result[0].CreatedBy) {
                            backId = result[i].Id;
                            $('#hid_BackgroundId').val(result[i].Id);
                            $('#hid_BackgroundMasterId').val(result[i].MasterId);
                            $("#ddlBackStatus option").each(function () {
                                this.selected = $(this).text() == result[i].BackgroundCheckStatus;
                            });
                            $("#ddlBackSource option").each(function () {
                                this.selected = $(this).text() == result[i].Source;
                            });
                            if (result[i].Source == 'None') {
                                $('#div_creator').show();
                            }
                            $('#txtBackCreatorName').val(result[i].CreatorName);
                            $('#txtBackNotes').val(result[i].Notes);
                            if (result[i].BackgroundCheckStatus == 'Approved') {
                                $('#Review_' + result[i].MasterId).html('Approved');
                                $('#Review_' + result[i].MasterId).removeClass('btn btn-small btn-warning');
                                $('#Review_' + result[i].MasterId).addClass('btn btn-small btn-success');
                            }
                            //set the DNA or Expiration Date
                            $('#rddna').prop("checked", result[i].IsDNA);
                            if (!result[i].IsDNA) {
                                $('#rdexpdate').prop("checked", true);
                                $('#bgCheckExpDate').val(dateFormat(new Date(new Date(parseInt(result[i].ExpirationDate.substr(6)))), 'mm/dd/yyyy'));
                                $('#bgCheckExpDate').prop("disabled", false);
                            }
                            else {
                                $('#bgCheckExpDate').prop("disabled", true);
                            }
                        }

                    }
                    $('#backcontent-div').css("height", "445px");
                    SetAuditTrail(result);
                    //set values in pop up and set background id Review_
                    getUploadfiles(backId);
                }
            }
        });
    }
    function getUploadfiles(id) {
        getUploadfilesFOrBGCheck(id, ROOT);
    }
    function openEditBackgroundPopUp(id, title) {

        $('#gridtypeid').val(id + '$' + 4);

        openEditBGPopUp(id, title, ROOT);

    }




    function PopUpValidateSave() {
        var CompanyName = $('#txtCompanyName');
        var LisenceNumber = $('#txtLicenseNumber');
        var PolicyNumber = $('#txtPolicyNumber');
        var ExpirationDate = $('#txtExprationDate');
        var StateId = $('#StateAbbre');
        var result1 = result2 = result3 = result4 = result5 = false;
        if ($('#div_Expiration').is(':visible') && ExpirationDate.val() == '') {
            ExpirationDate.addClass('errorClass');
            result1 = false;
        } else {
            ExpirationDate.removeClass('errorClass');
            result1 = true;
        }
        if ($('#div_company').is(':visible') && CompanyName.val() == '') {
            CompanyName.addClass('errorClass');
            result2 = false;
        }
        else {
            CompanyName.removeClass('errorClass');
            result2 = true;
        }
        if ($('#div_lisence').is(':visible') && LisenceNumber.val() == '') {
            LisenceNumber.addClass('errorClass');
            result3 = false;

        }
        else {
            LisenceNumber.removeClass('errorClass');
            result3 = true;
        }
        if ($('#div_policy').is(':visible') && PolicyNumber.val() == '') {
            PolicyNumber.addClass('errorClass');
            result4 = false;
        } else {
            PolicyNumber.removeClass('errorClass');
            result4 = true;
        }

        if ($('#div_State').is(':visible') && StateId.val() == '') {
            StateId.addClass('errorClass');
            result5 = false;

        } else {
            StateId.removeClass('errorClass');
            result5 = true;
        }
        if (result1 && result2 && result3 && result4 && result5) {
            return true;
        }
        else {
            $('#mandatoryerrormsg').show();
            return false;
        }
        // return (result1 && result2 && result3 && result4 && result5);
    }
    function createcookie(value) {

        $.ajax({
            url: "@Url.Content("~/UserDashBoard/CreateEraseTitleNameCookie/")",
            data: { 'name': value, 'type': 0 },
            cache: false,
            type: "POST",
            success: function (result) {
                setTimeout(function () {

                    // alert('call2' + fileName);
                    $('#btnpublishdoc').click();



                }, 1000);
            }
        });

    }


    function publishdoc() {

        var divId = "userdocfiles_0";
        var typeid = $('#gridtypeid').val();
        if (!($('#gridtypeid').val().indexOf('$') === -1)) {
            divId = "userdocfiles1_0";
            typeid = 4
        }

        var count = $('#' + divId + ' div').length;
        var imgId = count
        PublishUploadedFile('@Model.HostURL@Model.Globauploadedcontentpath/', '@Model.HostURL@Model.Specificuploadedcontentpath/',
               '', '',
               '@Model.HostURL@Model.BackgroundCheckDocPath/', ROOT, divId, typeid, imgId);
               CloseOpenPopup("previewdocinner", "previewdocouter");
           }


           //End Upload Document

           //Start Uploade Document
           function readdocURL(input, id) {
               var inputclass = $(input).attr("class");
               var titleid = "lbltitle_0";
               var titleval = $('#lbltitle_0').val();

               if (inputclass == "bGChkFileUpload") {
                   titleid = "lblBGtitle";
                   titleval = $('#lblBGtitle').val()
               } else if ($('#gridtypeid').val() == 3) {
                   titleid = "lbltitleaddcre";
                   titleval = $('#lbltitleaddcre').val()
               }

               titleval = $('#gridtypeid').val() + titleval;

               var setFileUrl = "@Url.Content("~/UserDashBoard/SettheEmpDocName/")";
               ReadUploadedFIle(input, id, ROOT, titleval, titleid, setFileUrl, 1);
           }
           $(function () {
               $('#uploadfilebtn').fileupload({
                   url: '@Url.Content("~/UserDashBoard/UploadEmpReqDoc")',
                   //data:{'title':$('#'+ $('#lbltitleidid').val()).val()},
                   dataType: "json",
                   limitConcurrentUploads: 1,
                   sequentialUploads: true,
                   progressInterval: 100,
                   maxChunkSize: 10000,
                   add: function (e, data) {
                       $('#btnpublishdoc').click(function () {
                           data.submit();

                       });
                   },
                   done: function (e, data) {
                       $('#doccircle').progressCircle({
                           nPercent: 100,
                           showPercentText: true,
                           circleSize: 300,
                           thickness: 3
                       });

                       setTimeout(function () {

                           //added document name

                           var fileurl = '@Model.HostURL@Model.Globauploadedcontentpath/' + $('#docfile').val() + '';
                           if ($('#gridtypeid').val() == 1) {
                               fileurl = '@Model.HostURL@Model.Specificuploadedcontentpath/' + $('#docfile').val() + '';
                    }
                    else if ($('#gridtypeid').val() == 2) {
                        fileurl = '@Model.HostURL@Model.ElecLicAndnsuploadedcontentpath/' + $('#docfile').val() + '';
                    }
                    else if ($('#gridtypeid').val() == 3) {
                        fileurl = '@Model.HostURL@Model.NonElecLicAndInsuploadedcontentpath/' + $('#docfile').val() + '';
                }
                else if (!($('#gridtypeid').val().indexOf('$') === -1)) {

                    fileurl = '@Model.HostURL@Model.BackgroundCheckDocPath/' + $('#docfile').val() + '';
                 }

                           var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";

                           $('#pdfdiv').attr('src', url1);

                           $('#loaddiv').hide();
                           $('#btnpublish').show();
                           $('#pdfdiv').show();

                           $('#doccircle').progressCircle({
                               nPercent: 0,
                               showPercentText: true,
                               circleSize: 300,
                               thickness: 3
                           });

                       }, 1000);

                   },
                   progressall: function (e, data) {
                       var progress = parseInt(data.loaded / data.total * 100, 10);
                       $('#doccircle').progressCircle({
                           nPercent: progress,
                           showPercentText: true,
                           circleSize: 300,
                           thickness: 3
                       });
                       $('#progressfile').css('width', progress + '%');
                   },
                   progress: function (e, data) {

                       var progress = parseInt(data.loaded / data.total * 100, 10);
                       $('#doccircle').progressCircle({
                           nPercent: progress,
                           showPercentText: true,
                           circleSize: 300,
                           thickness: 3
                       });

                   },

               });
           });
$(function () {
    $('#uploadfilebtn1').fileupload({
        url: '@Url.Content("~/UserDashBoard/UploadEmpReqDoc")',
        //data:{'title':$('#'+ $('#lbltitleidid').val()).val()},
        dataType: "json",
        limitConcurrentUploads: 1,
        sequentialUploads: true,
        progressInterval: 100,
        maxChunkSize: 10000,
        add: function (e, data) {
            $('#btnpublishdoc').click(function () {
                data.submit();

            });
        },
        done: function (e, data) {
            $('#doccircle').progressCircle({
                nPercent: 100,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

            setTimeout(function () {
                // alert($('#gridtypeid').val());
                //added document name

                var fileurl = '@Model.HostURL@Model.Globauploadedcontentpath/' + $('#docfile').val() + '';
                if ($('#gridtypeid').val() == 1) {
                    fileurl = '@Model.HostURL@Model.Specificuploadedcontentpath/' + $('#docfile').val() + '';
                }



                var url1 = "http://docs.google.com/viewer?url=" + fileurl + "&embedded=true&chrome=false";
                $('#pdfdiv').attr('src', url1);

                $('#loaddiv').hide();
                $('#btnpublish').show();
                $('#pdfdiv').show();

                $('#doccircle').progressCircle({
                    nPercent: 0,
                    showPercentText: true,
                    circleSize: 300,
                    thickness: 3
                });

            }, 1000);

        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });
            $('#progressfile').css('width', progress + '%');
        },
        progress: function (e, data) {

            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#doccircle').progressCircle({
                nPercent: progress,
                showPercentText: true,
                circleSize: 300,
                thickness: 3
            });

        },

    });
});
function showuploadbtn(id) {
    var id = id.split('_')[1];
    $('#uploaddoc_' + id).hide();
    $('.uploadbtn_' + id).show();
    $('.uploadfilebtn_' + id).show();
    $('#valmsg_' + id).show();
}
function validateAcknoledgment() {
    var selected = false;
    var validsave = PopUpValidateSave();
    if ($('#div_AckAppend input[type=checkbox]').length > 0) {
        $('#div_AckAppend input[type=checkbox]').each(function () {
            if ($(this).is(':checked')) {
                $(this).css('outline-color', '');
                $(this).css('outline-style', '');
                $(this).css('outline-width', '');
                selected = true;
            } else {
                $(this).css('outline-color', 'red');
                $(this).css('outline-style', 'solid');
                $(this).css('outline-width', 'thin');
                selected = false;
            }
        });
    } else {
        selected = true;
    }
    return (selected && validsave);

}
function MarkDocComplete() {
    if (validateAcknoledgment()) {
        SaveReqDoc(1);

    }
}

function SaveReqDoc(complete) {
    if (PopUpValidateSave()) {
        var docLocation = '';
        var docSequence = '';
        $('#userdocfiles_0 a').each(function () {
            docLocation += $(this).attr('href') + '#' + $(this).html().split('_')[1] + ';';
        });
        docLocation = docLocation.slice(0, -1);
        var IsCompleteVar = 0;
        if (complete == 0) {
            if ($('#hidIsCompleted').val() == 2) {
                IsCompleteVar = complete;
            }
            else {
                IsCompleteVar = $('#hidIsCompleted').val()
            }
        }
        if (complete == 1) {
            IsCompleteVar = 1;
        }
        $.ajax({
            type: "POST",
            url: '@Url.Content("~/UserDashBoard/SetReceiverReqDocDetails")',
            cache: false,
            data: JSON.stringify({
                CompanyName: $('#txtCompanyName').val(),
                LisenceNumber: $('#txtLicenseNumber').val(),
                PolicyNumber: $('#txtPolicyNumber').val(),
                ExpirationDate: $('#txtExprationDate').val(),
                StateAbbre: $('#StateAbbre').val(),
                ReqDocId: parseInt($('#hidCurrentDocId').val()),
                DocLoc: docLocation,
                IsCompleted: (complete),
            }),

            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data > 0) {
                    $('#divManualInviteOuter').show();
                    $('#divManualInviteInner').show();
                    $('#btnSaveOK').hide();
                    $('#dvSaveMsg').text('Saved sucessfully');
                    setTimeout(function () {
                        $('#divManualInviteOuter').fadeOut('slow');
                        $('#divManualInviteInner').fadeOut('slow');
                        window.location.reload();
                    }, 1000);
                }
                else {
                    $('#divManualInviteOuter').hide();
                    $('#divManualInviteInner').hide();
                }
            }

        });
    }
}
    function getTdCount() {
        var colCount = 0;
        $('#tblJCRAudit tbody tr:nth-child(1) td').each(function () {
            if ($(this).attr('colspan')) {
                colCount += +$(this).attr('colspan');
            } else {
                colCount++;
            }
        });

        return colCount;
    }
function getJCRAudit(id) {
    var str = '';
    $.ajax({
        url: '@Url.Content("~/UserDashBoard/GetReqDocAudit/")',
            data: { 'reqDocId': parseInt(id[0].ReqDocReceiverId) },
            cache: false,
            type: "POST",
            success: function (result) {
                $("#tblJCRAudit > tr").remove();
                if (result.length > 0) {
                    $('#tblJCRAudit').show();
                    $(result).each(function (idx) {
                        // $('#tblJCRAudit').show();
                        var str1 = '';
                        var str2 = '';
                        if (result[idx].IsDocUploaded) {
                            str1 = 'Yes';
                            } else {
                            str1 = 'No';
                        }
                        if (result[idx].IsCompleted == 1) {
                            str2 = '<img src=@Url.Content("~/Content/images/check-in.png") height="25" style="padding-left:inherit" width="25" alt="Status" title="Uploaded" />';
                        }
                        if (result[idx].IsCompleted == 0) {
                            str2 = 'In Progress';
                        }
                        if (result[idx].IsCompleted == 2) {
                            str2 = ' <img src=@Url.Content("~/Content/images/delete.png") height="25" style="padding-left:inherit" width="25" alt="Status" title="No Upload" />';
                            }
                            var ModifyDate = '';
                            var ExpirationDate = '';
                            if (result[idx].ModifyDate != null) {
                                ModifyDate = new Date(parseInt(result[idx].ModifyDate.substr(6)));
                                ModifyDate = dateFormat(new Date(ModifyDate), 'mm/dd/yyyy')
                            }
                            if (result[idx].ExpirationDate != null) {
                                ExpirationDate = new Date(parseInt(result[idx].ExpirationDate.substr(6)));
                                ExpirationDate = dateFormat(new Date(ExpirationDate), 'mm/dd/yyyy')
                            }
                            str += ' <tr><td>' + ModifyDate + '</td><td>' + result[idx].VisitorName + '</td>  <td>' + result[idx].CompanyName + '</td> <td>' + result[idx].LisenceNumber + '</td>' +
                                '<td>' + result[idx].PolicyNumber + '</td><td>' + ExpirationDate + '</td> <td>' + result[idx].StateName + '</td> <td>' + str1 + '</td><td>' + str2 + '</td></tr>';
                        })
                        //  $('#tblJCRAudit tbody').empty();
                        $('#tblJCRAudit tbody').append(str);
                        if (!id[0].IsCompanyReq) { $("#tblJCRAudit td:nth-child(" + 3 + "),th:nth-child(" + 3 + ")").hide(); }
                        if (!id[0].IsPolicyReq) { $("#tblJCRAudit td:nth-child(" + 5 + "),th:nth-child(" + 5 + ")").hide(); }
                        if (!id[0].IsLicenseReq) { $("#tblJCRAudit td:nth-child(" + 4 + "),th:nth-child(" + 4 + ")").hide(); }
                        if (!id[0].IsExpDateReq) { $("#tblJCRAudit td:nth-child(" + 6 + "),th:nth-child(" + 6 + ")").hide(); }
                        if (!id[0].IsStateReq) { $("#tblJCRAudit td:nth-child(" + 7 + "),th:nth-child(" + 7 + ")").hide(); }

                        if (id[0].IsCompanyReq) { $("#tblJCRAudit td:nth-child(" + 3 + "),th:nth-child(" + 3 + ")").show(); }
                        if (id[0].IsPolicyReq) { $("#tblJCRAudit td:nth-child(" + 5 + "),th:nth-child(" + 5 + ")").show(); }
                        if (id[0].IsLicenseReq) { $("#tblJCRAudit td:nth-child(" + 4 + "),th:nth-child(" + 4 + ")").show(); }
                        if (id[0].IsExpDateReq) { $("#tblJCRAudit td:nth-child(" + 6 + "),th:nth-child(" + 6 + ")").show(); }
                        if (id[0].IsStateReq) { $("#tblJCRAudit td:nth-child(" + 7 + "),th:nth-child(" + 7 + ")").show(); }

                        //var colwidth = (100 / parseInt(getTdCount()));
                        var colwidth = (100 / parseInt(9));
                        $('#tblJCRAudit tbody td').css('width', colwidth + '%');
                        $('#tblJCRAudit thead th').css('width', colwidth + '%');
                    } else {
                        $('#tblJCRAudit').hide();
                    }
                }
        });
        }
        function getGridData(id, gridtype) {
            $('#hidCurrentDocId').val(id);
            $('#gridtypeid').val(gridtype);
            $.ajax({
                url: '@Url.Content("~/UserDashBoard/GetReceiverDoc/")',
        data: { 'reqDocId': parseInt(id), 'type': parseInt(gridtype) },
        cache: false,
        type: "POST",
        success: function (result) {
            $('#divRequirementOuter').fadeIn('slow');
            $('#divRequirementInner').fadeIn('slow');
            $('#txtExprationDate').val('');

            $('#lbltitle_0').val(result[0].title);
            if (!result[0].IsCompanyReq) { $('#div_company').hide(); }
            if (!result[0].IsPolicyReq) { $('#div_policy').hide(); }
            if (!result[0].IsLicenseReq) { $('#div_lisence').hide(); }
            if (!result[0].IsExpDateReq) { $('#div_Expiration').hide(); }
            if (!result[0].IsStateReq) { $('#div_State').hide(); }
            if (!result[0].UserPer) { $('#uploaddoc_0').hide(); }

            if (result[0].IsCompanyReq) { $('#div_company').show(); $('#txtCompanyName').val(result[0].CompanyName); }
            if (result[0].IsPolicyReq) { $('#div_policy').show(); $('#txtPolicyNumber').val(result[0].PolicyNumber); }
            if (result[0].IsLicenseReq) { $('#div_lisence').show(); $('#txtLicenseNumber').val(result[0].LisenceNumber); }
            if (result[0].IsExpDateReq) {
                $('#div_Expiration').show();
                if (result[0].ExpirationDate != '' && result[0].ExpirationDate != null) {
                    var date = new Date(parseInt(result[0].ExpirationDate.substr(6)));
                    $('#txtExprationDate').val(formattedDate(date));
                }
            }
                if (result[0].IsStateReq) { $('#div_State').show(); $('#StateAbbre').val(result[0].Stateabbre) }
            if (result[0].UserPer) { $('#uploaddoc_0').show(); }
            if (result[0].IsCompleted == "1") {

                $('#btnMarkAsComplete_0').hide();
            } else {
                $('#btnMarkAsComplete_0').show();

            }
            if (!result[0].DNA) { $('#docfiles_0').show(); } else { $('#docfiles_0').hide(); }
            var uploadDoc = '';
            var str = '';
            var SenderDocstr = '';
            var ReceiverDocstr = '';
            var ackStr = '';
            var url1 = '';
            var chkupdocnameforsender = '';
            var chkupdocnameforreceiver = '';
            var count = 0;
            var ack = '';
            $(result).each(function (idx) {
                uploadDoc = result[0].title + '_' + result[idx].DocSeqNo;
                if (result[idx].DocSeqNo != '') {
                    url1 = result[idx].DocLoc;
                    if (result[idx].DocSenderUserId != null && result[idx].DocSenderUserId != '') {
                        if (uploadDoc != chkupdocnameforsender) {
                            SenderDocstr += '<div style="border-radius: 5px 5px 5px 5px;  width:auto;height:auto;float:left;">' +
                        '<a id="docfile_' + result[idx].DocSeqNo + '" href="' + url1 + '" target="_blank" title=' + uploadDoc + ' style="cursor:pointer;margin-left:1px;" >' + uploadDoc + '</a> &nbsp;' +
                    '<input type="hidden" id="doccontentid_' + result[idx].DocSeqNo + '" value=' + result[idx].DocUploadTblId + ' /></div>';
                            chkupdocnameforsender = uploadDoc;
                        }
                    }
                    else {
                        if (uploadDoc != chkupdocnameforreceiver) {
                            ReceiverDocstr += '<div style="border-radius: 5px 5px 5px 5px;  width:auto;height:auto;float:left;">' +
                                 '<a id="docfile_' + count + '" href="' + url1 + '" target="_blank" title=' + uploadDoc + ' style="cursor:pointer;margin-left:1px;" >' + uploadDoc + '</a> &nbsp;' +
                             '<img id=' + count + ' src="@Url.Content("~/Content/images/cross-button.png")" style="cursor:pointer;" title="remove document" onclick="deletedoc(' + count + ')"/><input type="hidden" id="doccontentid_' + count + '" value=' + result[idx].DocUploadTblId + ' /></div>';
                                chkupdocnameforreceiver = uploadDoc;
                                count++;
                            }
                        }
                    }
                    if (result[0].Acknoledgment != '' && result[0].Acknoledgment != null) {
                        if (result[0].IsCompleted == "1") {
                            ackStr += '<div><label><input style="margin-top:2px;" checked="checked" type="checkbox" id="chkReqAck_' + idx + '" /><span id="reqcon_0_' + idx + '" style="margin-left:5px;vertical-align:text-top;">' + result[idx].Acknoledgment + '</span></label></div>';
                        } else {
                            ackStr += '<div><label><input style="margin-top:2px;" type="checkbox" id="chkReqAck_' + idx + '" /><span id="reqcon_0_' + idx + '" style="margin-left:5px;vertical-align:text-top;">' + result[idx].Acknoledgment + '</span></label></div>';
                        }
                        ack = result[0].Acknoledgment;
                    }
                })
                $('#hidIsCompleted').val(result[0].IsCompleted);
                if ($('#hidIsCompleted').val() == 1) {
                    $('#btnsave_0').css("margin-right", "2.5%");
                }
                else {
                    $('#btnsave_0').css("margin-right", "0.5%");
                }


                $("#docfiles_0").empty();
                $("#userdocfiles_0").empty();
                $("#docfiles_0").html(SenderDocstr);
                $("#userdocfiles_0").html(ReceiverDocstr);
                $('#div_AckAppend').empty();
                $('#div_AckAppend').append(ackStr);
                RemoveDuplicate('.removeDub a');
                RemoveDuplicate('.removeDub span');
                getJCRAudit(result);
            }
    });
    }
    function formattedDate(date) {
        var d = new Date(date || Date.now()),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [month, day, year].join('/');
    }
    function RemoveDuplicate(id) {
        var seen = {};
        $(id).each(function () {
            var txt = $(this).html();
            if (seen[txt])
                $(this).parent().remove();
            else
                seen[txt] = true;
        });
    }
    function closeGridPopup() {
        $('#tblJCRAudit tbody').empty();
        if ($('#gridtypeid').val() == 0 || $('#gridtypeid').val() == 1) {
            $('#JCRpopupdivouter').slideDown('fast');
            $('#JCRpopupdivinner').slideDown('fast');
        }
        $('#divRequirementOuter').slideUp('fast');
        $('#divRequirementInner').slideUp('fast');

    }
    $(document).ready(function () {
        $('.tabbable').hide();
        $('#masterrow').hide();
        $('#mydashboardli').removeClass("active");

        $('#messagedoccourseli').removeClass("active");
        $('#historyli').removeClass("active");
        $('#myprofileli').addClass("active");
        if ($('li#clientlistli').length) {
            $('#clientlistli').removeClass("active");
        }
        if ($('li#inviteli').length) {
            $('#inviteli').removeClass("active");
        }
        $('#CompanyProfile').css("display", "none");

        //In service
        addviewinservice();
        //In client
        addviewinclient();
        //In state
        addviewinstate();
        var datefield = document.createElement("input")
        datefield.setAttribute("type", "date")
        jQuery(function ($) {


            var myDate = new Date();
            var prettyDate = (myDate.getMonth() + 1) + '/' + myDate.getDate() + '/' +
                    myDate.getFullYear();
            $('#txtExprationDate').datepicker();
            $('#bgCheckExpDate').datepicker();

        })



    });
    function deletedoc(id) {
        var divId = "userdocfiles_0";
        var typeid = $('#gridtypeid').val();
        if (!($('#gridtypeid').val().indexOf('$') === -1)) {
            typeid = $('#gridtypeid').val().split('$')[1];
            divId = "userdocfiles1_0";
        }
        DeleteDocumentFromDir(id, divId, typeid, 1, id, ROOT);

    }
    function addviewinstate() {
        //added view more link on state section
        var Stcount = 0;
        var chkStstatus = false;
        $('#state li').each(function () {
            Stcount = Stcount + 1;
            // alert(Scount);
            if (Stcount > 8) {
                //set view more option
                if (!$(this).find('#VmoreSt').length) {
                    $(this).hide();
                    chkStstatus = true;
                }
            }
        })
        if ($('#state li').find('#VmoreSt').length) {
            chkStstatus = false;
        }
        if (chkStstatus) {
            $('#state').append("<li><a id='VmoreSt' style='cursor:pointer;' onclick='showalldetails(this.id)'>view more</a></li>");
        }
    }
    function addviewinclient() {
        //added view more link on client section
        var Ccount = 0;
        var chkCstatus = false;
        $('#client li').each(function () {
            Ccount = Ccount + 1;
            // alert(Scount);
            if (Ccount > 8) {
                //set view more option
                if (!$(this).find('#VmoreC').length) {
                    $(this).hide();
                    chkCstatus = true;
                }
            }
        })
        if ($('#client li').find('#VmoreC').length) {
            chkCstatus = false;
        }
        if (chkCstatus) {
            $('#client').append("<li><a id='VmoreC' style='cursor:pointer;' onclick='showalldetails(this.id)'>view more</a></li>");
        }
    }
    function addviewinservice() {
        //added view more link on services section
        var Scount = 0;
        var chkSstatus = false;
        $('#service li').each(function () {
            Scount = Scount + 1;
            // alert(Scount);
            if (Scount > 8) {
                //set view more option
                if (!$(this).find('#VmoreS').length) {
                    $(this).hide();
                    chkSstatus = true;
                }
            }
        })
        if ($('#service li').find('#VmoreS').length) {
            chkSstatus = false;
        }
        if (chkSstatus) {
            $('#service').append("<li><a id='VmoreS' style='cursor:pointer;' onclick='showalldetails(this.id)'>view more</a></li>");
        }
    }

    function showalldetails(id) {
        if (id == "VmoreS") {
            if ($('#VmoreS').html().trim() == "view more".trim()) {
                $('#service li').each(function () {
                    $(this).show();
                })
                $('#VmoreS').html('hide');
            }

            else {

                addviewinservice();
                $('#VmoreS').html('view more');
            }
        }
        else if (id == "VmoreC") {
            if ($('#VmoreC').html().trim() == "view more".trim()) {
                $('#client li').each(function () {
                    $(this).show();
                })
                $('#VmoreC').html('hide');
            }
            else {
                addviewinclient();
                $('#VmoreC').html('view more');
            }

        }
        else if (id == "VmoreSt") {
            if ($('#VmoreSt').html().trim() == "view more".trim()) {
                $('#state li').each(function () {
                    $(this).show();
                })
                $('#VmoreSt').html('hide');
            }
            else {
                addviewinstate();
                $('#VmoreSt').html('view more');
            }

        }
    }


    function checkval(id) {
        if ($('#' + id).val().trim() != '') {
            $('#' + id).removeClass("errorClass");
            $('#phoneerrormsg').html('');
            $('#cellnoerrormsg').html('');
            $('#emailerrormsg').html('');
        }
        if (id == "OfficePhone" || id == "DirectPhone") {
            Allowonlynumericvalue(id);
        }
    }

    function checkvalidation() {
        var fnameval = true;
        var lnameval = true;
        var emailidval = true;
        var officephnval = true;
        var directphnval = true;
        // alert($('#FName').val());
        if ($('#FName').val().trim() == '') {
            // alert(1);
            $('#FName').addClass("errorClass");
            fnameval = false;
        }


        if ($('#LName').val().trim() == '') {
            $('#LName').addClass("errorClass");
            lnameval = false;
        }

        if ($('#EmailId').val().trim() != '') {
            if (!validateEmail($('#EmailId').val())) {
                $('#EmailId').addClass('errorClass');
                $('#emailerrormsg').html("Enter correct email id");
                emailidval = false;
            }
        }

        if ($('#EmailId').val().trim() == '') {
            $('#EmailId').addClass('errorClass');
            emailidval = false;
        }

        //
        if ($('#OfficePhone').val().trim() != '') {
            // alert(validatePhone($('#OfficePhone').val()));
            if (!validatePhone($('#OfficePhone').val())) {
                $('#OfficePhone').addClass("errorClass");
                $('#phoneerrormsg').html("Enter correct phone number");
                officephnval = false;
            }
            //else {
            //    alert(5);
            //}
        }

        if ($('#DirectPhone').val().trim() != '') {
            if (!validatePhone($('#DirectPhone').val())) {
                $('#DirectPhone').addClass("errorClass");
                $('#cellnoerrormsg').html("Enter correct phone number");
                directphnval = false;
            }
        }
        if (fnameval && emailidval && officephnval && directphnval && lnameval) {
            return true;
        }
        else {
            return false;
        }

    }

    function validatePhone(phone) {
        var s = false;

        var filter = /^([0-9]( |-)?)?(\(?[0-9]{3}\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$/;
        if (filter.test(phone)) {
            s = true;
        }
        else {
            s = false;
        }

        return s;

    }
    function validateEmail(sEmail) {
        var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (filter.test(sEmail)) {
            return true;
        }
        else {
            return false;
        }
    }


    $('#btnSaveOK').click(function () {
        $('#divManualInviteOuter').hide();
        $('#divManualInviteInner').hide();
    })
    //Services
    $("#editservices").click(function () {
        $('#servicetrans').fadeIn('slow');
        $('#servicepopup').fadeIn('slow');
        var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
        var poistion = scrollTop + 200;
        $('#servicepopup').css("top", poistion);
        var count = $('#tblservice td').length;
        if (count == 1) {
            $('#tblservice').css("width", "auto");
            $('#tblservice td').css("width", "10%");
        }
        else {
            var width = parseInt(count) * 154;
            $('#tblservice').css("width", width);
        }
        $('#chkserviceselected').prop('checked', true);
        selectAllservices();

    });
    $("#btnserviceclose").click(function () {
        $('#servicetrans').fadeOut('slow');
        $('#servicepopup').fadeOut('slow');
    });
    $("#btnservicecancel").click(function () {
        $('#servicetrans').fadeOut('slow');
        $('#servicepopup').fadeOut('slow');

    });
    //Cleint
    $("#btnclientclose").click(function () {
        $('#clienttrans').fadeOut('slow');
        $('#clientpopup').fadeOut('slow');
    });
    $("#btnclientcancel").click(function () {
        $('#clienttrans').fadeOut('slow');
        $('#clientpopup').fadeOut('slow');

    });
    $("#editclient").click(function () {
        $('#clienttrans').fadeIn('slow');
        $('#clientpopup').fadeIn('slow');
        var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
        var poistion = scrollTop + 200;
        $('#clientpopup').css("top", poistion);
        var count = $('#tblclient td').length;
        if (count == 1) {
            $('#tblclient').css("width", "auto");
        }
        else {
            var width = parseInt(count) * 154;
            $('#tblclient').css("width", width);
        }
        $('#chkclientselected').prop('checked', true);
        selectallclient();

    });
    //Name
    $("#btnnameedit").click(function () {
        ResetBasicdetails();
        $('#nametrans').fadeIn('slow');
        $('#namepopup').fadeIn('slow');
        var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
        var poistion = scrollTop + 200;
        $('#namepopup').css("top", poistion);
    });
    function ResetBasicdetails() {
        if ($('#MName').val().trim() == "") {
            $('#MName').val($('#MName').val().trim());
        }
    }
    $("#btnnamelose").click(function () {
        $('#personpic1').attr('src', $('#imgpath').val());
        $('#nametrans').fadeOut('slow');
        $('#namepopup').fadeOut('slow');
    });
    $("#btnnamecancel").click(function () {
        $('#personpic1').attr('src', $('#imgpath').val());
        $('#nametrans').fadeOut('slow');
        $('#namepopup').fadeOut('slow');
    });
    //Change password
    $("#btnchgpwd").click(function () {
        $('#ValidatePassword').hide();
        $('#divPwdRules').hide();
        $('#newpwd').val('');
        $('#errormsg').html('');
        $('#confmpwd').val('');
        $('#chgpwdinner').fadeIn('slow');
        $('#chgpwdouter').fadeIn('slow');
        var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
        var poistion = scrollTop + 200;
        $('#chgpwdinner').css("top", poistion);
    });
    $("#btncngpwdlose").click(function () {
        $('#chgpwdinner').fadeOut('slow');
        $('#chgpwdouter').fadeOut('slow');
    });
    $("#btnchgpwdcancel").click(function () {
        $('#chgpwdinner').fadeOut('slow');
        $('#chgpwdouter').fadeOut('slow');
    });
    $("#btnchgpwddone").click(function () {

        if (checkpwdvalidation()) {

            $.ajax({
                url: "@Url.Content("~/UserDashBoard/Updatemyprofilepassword/")",
                data: { 'newpwd': $('#newpwd').val() },
                cache: false,
                type: "POST",
                datatype: 'json',
                success: function (result) {
                    window.location.reload();

                }
            });


        }

    });
    function checkpwdvalidation() {
        var count = 0;
        var pass = $("#newpwd").val();
        count += /[a-z]/.test(pass) ? 1 : 0;
        count += /[A-Z]/.test(pass) ? 1 : 0;
        count += /\d/.test(pass) ? 1 : 0;
        count += /[^\w\d\s]/.test(pass) ? 1 : 0;
        if (count > 2 & !/[\s]+/.test(pass)) {
            $('#ValidatePassword').hide();

        } else {
            $('#ValidatePassword').show();
            $('#errormsg').html('');

            return false;
        }

        if ($('#newpwd').val() != $('#confmpwd').val()) {
            $('#errormsg').html("Both should be same");
            $('#ValidatePassword').hide();
            return false
        }
        else {
            $('#errormsg').html('');
        }
        if ($('#newpwd').val() == "") {
            $('#newpwd').addClass('errorclass');
            return false;
        }
        else {
            $('#newpwd').removeClass('errorclass');
        }
        if ($('#confmpwd').val() == "") {
            $('#confmpwd').addClass('errorclass');
            return false;
        }
        else {
            $('#confmpwd').removeClass('errorclass');
        }



        return true;
    }
    //password rules
    $('#Div_PasswordRule').click(function () {
        var status = $('#divPwdRules').is(':visible');
        if (status == false) {
            $('#divPwdRules').show();
        } else if (status == true) {
            $('#divPwdRules').hide();
        }
    });

 @*   $("#btnservicedone").click(function () {
        var obj = '';
        var serviceId = '';
        $(".chk:checked").each(function () {
            serviceId = $(this).val();
            if (obj == '') {
                obj = serviceId;
            }
            else {
                obj = obj + "," + serviceId;
            }

        });
        var url = '@Url.Action("../UserDashBoard/Updatemyprofileservices")';
        $.post(url, { 'serviceId': obj }, function (result) {
            if (result > 0) {
                window.location.reload();
            }
        });

    });*@

    $("#btnclientdone").click(function () {
        var obj = '';
        var clientId = '';
        $(".chkclient:checked").each(function () {
            clientId = $(this).val();
            if (obj == '') {
                obj = clientId;
            }
            else {
                obj = obj + "," + clientId;
            }

        });
        var url = '@Url.Action("../UserDashBoard/Updatemyprofileclient")';
        $.post(url, { 'clientId': obj }, function (result) {
            if (result > 0) {
                window.location.reload();
            }
        });


    });
    $('#chkclientall').change(function () {
        if ($("#chkclientall").is(':checked')) {
            $(".chkclient").each(function () {
                $(this).prop('checked', true);
                $(this).attr("disabled", true);

            });
        }

    });
    $('#chkclientdna').change(function () {
        if ($("#chkclientdna").is(':checked')) {
            $(".chkclient").each(function () {
                $(this).attr("disabled", true);
                $(this).prop('checked', false);
            });
        }

    });

    $('#chkclientselected').change(function () {

        selectallclient();

    });
    function selectAllclient() {
        if ($("#chkclientselected").is(':checked')) {

            $('#tblclient tbody tr td').each(function (index) {
                $(this).find('span').each(function (index2) {

                    var chkstatus = false;
                    var checkedclient = $(this).html().trim();
                    //alert(checkedclient);
                    if ($('#client li').length) {
                        $('#client li').each(function (index1) {
                            if (($('#client li').length - 1 != index1)) {
                                if ($(this).html().trim() == checkedclient) {
                                    // alert('#chkclient_' + index + '' + index2 + '');
                                    $('#chkclient_' + index + '' + index2 + '').prop('checked', true);
                                    $('#chkclient_' + index + '' + index2 + '').attr("disabled", false);
                                    chkstatus = true;
                                }
                                else {
                                    if (!chkstatus) {
                                        $('#chkclient_' + index + '' + index2 + '').prop('checked', false)
                                    }
                                    $('#chkclient_' + index + '' + index2 + '').attr("disabled", false);
                                }
                            }
                        })
                    }
                    else {
                        $(".chkclient").each(function () {

                            $(this).prop('checked', false);

                        });
                    }

                });
            })
            //set disable status
            $(".chkclient").each(function () {

                $(this).attr("disabled", false);

            });

        }
    }
    $('#chkserviceselected').change(function () {

        selectAllservices();
    });

    function selectAllservices() {
        //  alert('call');
        if ($("#chkserviceselected").is(':checked')) {

            $("#tblservice tr td").each(function (index) {
                $(this).find('span').each(function (index2) {
                    var chkstatus = false;
                    var checkedclient = $(this).html().trim();
                    if ($('#service li').length) {
                        $('#service li').each(function (index1) {
                            if (($('#service li').length - 1 != index1)) {
                                if ($(this).html().trim() == checkedclient) {
                                    $('#chk_' + index + '' + index2 + '').prop('checked', true);
                                    $('#chk_' + index + '' + index2 + '').attr("disabled", false);
                                    chkstatus = true;
                                }
                                else {
                                    if (!chkstatus) {
                                        $('#chk_' + index + '' + index2 + '').prop('checked', false)
                                    }
                                    $('#chk_' + index + '' + index2 + '').attr("disabled", false);
                                }
                            }
                        })
                    }
                    else {
                        $(".chk").each(function () {

                            $(this).prop('checked', false);

                        });
                    }
                })
            });
            //set disable status
            $(".chk").each(function () {

                $(this).attr("disabled", false);

            });
        }
    }

    $('#chkserviceall').change(function () {

        if ($("#chkserviceall").is(':checked')) {
            $('#chkservicedna').prop('checked', false);
            $(".chk").each(function () {
                $(this).attr("disabled", true);
                $(this).prop('checked', true);

            });
        }

    });


    $('#chkservicedna').change(function () {
        if ($("#chkservicedna").is(':checked')) {
            $(".chk").each(function () {
                $(this).prop('checked', false);
                $(this).attr("disabled", true);
            });
        }

    });
    function ShowJCR(companyId, companyname) {
        $('#visitcompanyid').val(companyId);
        $('#visitcompanyname').val(companyname);
        $('#JCRCOMPANYNAME').html(companyname + " Reqiurements");
        $.ajax({
            url: "@Url.Content("~/UserDashBoard/GlobalReqiurement/")",
            data: { 'parentCcompanyId': companyId },
            cache: false,
            type: "GET",
            datatype: 'json',
            success: function (result) {

                $('#JCRGrid').html(result);
                $('#JCRpopupdivouter').slideDown('fast');
                $('#JCRpopupdivinner').slideDown('fast');
            }
        });
    }
    $('#btnJCRclose').click(function () {
        window.location.reload();
        $('#JCRpopupdivouter').slideUp('fast');
        $('#JCRpopupdivinner').slideUp('fast');
    })
    $('#btnbioinfo').click(function () {
        $('#BioInfoPopupouter').slideDown("fast");
        $('#BioInfoPopupinner').slideDown("fast");
    })
    $('#btnbioclose').click(function () {
        $('#BioInfoPopupouter').slideUp("fast");
        $('#BioInfoPopupinner').slideUp("fast");
    })
    //Bio Info
    $('#editbioinfo').click(function () {

        if ($('#editbioinfo').html() == "Edit") {
            $('#lbltxtbio').hide();
            $('#edittxtbio').show();
            $('#editbioinfo').html('Save');
        }
        else {

            $.ajax({
                url: "@Url.Content("~/UserDashBoard/UpdateBioInfo/")",
                data: { 'bioInfo': $('#txtbio').val() },
                type: "POST",
                cache: false,
                success: function (result) {
                    $('#lbltxtbio').show();
                    $('#edittxtbio').hide();
                    $('#editbioinfo').html('Edit');
                    window.location.reload();

                }
            });
        }
    })
   
    function blink(btn) {
        blink1(btn);
    }
    function blink1(btn1) {
        if (btn1.attr('id') == "blinkservices" || btn1.attr('id') == "blinkcoveragearea") {
            btn1.css({ "background-color": "#0044CC" });
            btn1.css({ "background-image": "linear-gradient(to bottom, #0088CC, #0044CC)" });
        }
        else {
            btn1.css({ "background-color": "#F89406" });
            btn1.css({ "background-image": "linear-gradient(to bottom, #F89406, #F89406)" });
        }
        setTimeout(function () { blink2(btn1); }, 750);
    }
    function blink2(btn2) {
        if (btn2.attr('id') == "blinkservices" || btn2.attr('id') == "blinkcoveragearea") {
            btn2.css({ "background-color": "#0044CC !important" });
            btn2.css({ "background-image": "linear-gradient(to bottom, #0044CC, #0044CC)" });
        }
        else {

            btn2.css({ "background-color": "#F89406 !important" });
            btn2.css({ "background-image": "linear-gradient(to bottom, #FBB450, #F89406)" });
        }
        setTimeout(function () { blink1(btn2); }, 750);
    }

    blink($('#blinkservices'));
    blink($('#blinkcoveragearea'));
    blink($('.blinkJCR'));
</script>
